{"asctime": "2025-04-19 05:17:09,488", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
[19/Apr/2025 07:09:39] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[19/Apr/2025 07:09:39] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-19 08:20:25,358", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/Apr/2025 08:20:25] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-19 11:10:45,990", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/Apr/2025 11:10:45] "GET / HTTP/1.0" 404 4431
[19/Apr/2025 12:49:42] code 400, message Bad request version ('À\x14À')
[19/Apr/2025 12:49:42] You're accessing the development server over HTTPS, but it only supports HTTP.
[19/Apr/2025 12:49:43] code 400, message Bad request version ('À\x14À')
[19/Apr/2025 12:49:43] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-19 12:49:43,667", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/Apr/2025 12:49:43] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-19 12:49:44,173", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[19/Apr/2025 12:49:44] "GET /login HTTP/1.1" 404 4464
[19/Apr/2025 15:05:42] code 400, message Bad request version ('À\x14À')
[19/Apr/2025 15:05:42] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-19 17:15:54,483", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/Apr/2025 17:15:54] "GET / HTTP/1.0" 404 4431
[19/Apr/2025 22:39:04] code 400, message Bad request version ('À\x14À')
[19/Apr/2025 22:39:04] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-19 22:39:21,942", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/Apr/2025 22:39:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-19 22:39:29,692", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /manage/account/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/manage/account/login'>"}
[19/Apr/2025 22:39:29] "GET /manage/account/login HTTP/1.1" 404 4509
[19/Apr/2025 22:39:37] "GET /admin/index.html HTTP/1.1" 302 0
{"asctime": "2025-04-19 22:39:44,420", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /index.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/index.html'>"}
[19/Apr/2025 22:39:44] "GET /index.html HTTP/1.1" 404 4479
{"asctime": "2025-04-19 22:39:51,786", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /+CSCOE+/logon.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/+CSCOE+/logon.html'>"}
[19/Apr/2025 22:39:51] "GET /+CSCOE+/logon.html HTTP/1.1" 404 4503
{"asctime": "2025-04-19 22:39:59,147", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /cgi-bin/login.cgi", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/cgi-bin/login.cgi'>"}
[19/Apr/2025 22:39:59] "GET /cgi-bin/login.cgi HTTP/1.1" 404 4500
{"asctime": "2025-04-19 22:40:06,425", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.htm", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.htm'>"}
[19/Apr/2025 22:40:06] "GET /login.htm HTTP/1.1" 404 4476
{"asctime": "2025-04-19 22:40:13,767", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.html'>"}
[19/Apr/2025 22:40:13] "GET /login.html HTTP/1.1" 404 4479
{"asctime": "2025-04-19 22:40:21,070", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.jsp", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.jsp'>"}
[19/Apr/2025 22:40:21] "GET /login.jsp HTTP/1.1" 404 4476
{"asctime": "2025-04-19 22:40:28,320", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[19/Apr/2025 22:40:28] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-04-19 22:40:35,634", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /doc/index.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/doc/index.html'>"}
[19/Apr/2025 22:40:35] "GET /doc/index.html HTTP/1.1" 404 4491
{"asctime": "2025-04-19 22:40:42,763", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /remote/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/remote/login'>"}
[19/Apr/2025 22:40:42] "GET /remote/login HTTP/1.1" 404 4485
[19/Apr/2025 22:40:49] "GET //admin/login.asp HTTP/1.1" 302 0
{"asctime": "2025-04-19 22:40:57,157", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /web/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/web/'>"}
[19/Apr/2025 22:40:57] "GET /web/ HTTP/1.1" 404 4461
{"asctime": "2025-04-19 22:41:04,444", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /webpages/login.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/webpages/login.html'>"}
[19/Apr/2025 22:41:04] "GET //webpages/login.html HTTP/1.1" 404 4506
{"asctime": "2025-04-20 01:48:00,040", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 01:48:00] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-20 01:48:23,885", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[20/Apr/2025 01:48:23] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
[20/Apr/2025 06:06:08] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[20/Apr/2025 06:06:08] "MGLNDD_51.20.181.176_8000" 400 -
[20/Apr/2025 06:20:35] code 400, message Bad request syntax ('\x01\x01æ')
[20/Apr/2025 06:20:35] "æ" 400 -
{"asctime": "2025-04-20 06:23:57,479", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 06:23:57] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-20 07:42:03,618", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 07:42:03] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-20 07:44:27,711", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 07:44:27] "GET / HTTP/1.1" 404 4431
[20/Apr/2025 07:46:20] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x0ex#ÑTóåÔÈ')
[20/Apr/2025 07:46:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[20/Apr/2025 07:48:50] code 400, message Bad request syntax ('SSH-2.0-Go')
[20/Apr/2025 07:48:50] "SSH-2.0-Go" 400 -
[20/Apr/2025 07:50:17] code 400, message Bad HTTP/0.9 request type ("\x16\x03\x01\x00{\x01\x00\x00w\x03\x03c©¹1Éí\x18ó£=\\[èº\x00F\x84'$¯\x05¡\x1b\x9c÷÷üº×\x14Yå\x00\x00\x1aÀ/À+À\x11À\x07À\x13À")
[20/Apr/2025 07:50:17] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-20 08:08:12,121", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 08:08:12] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 08:08:17,699", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 08:08:17] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 08:09:26,934", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login'>"}
[20/Apr/2025 08:09:26] "POST /users/login HTTP/1.1" 404 4483
{"asctime": "2025-04-20 08:09:30,977", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 08:09:30] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 08:09:55,219", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 08:09:55] "POST //users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 08:10:04,628", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 08:10:04] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 08:52:56,366", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 08:52:56] "GET / HTTP/1.1" 404 4431
[20/Apr/2025 08:57:33] code 400, message Bad request version ('À\x14À')
[20/Apr/2025 08:57:33] You're accessing the development server over HTTPS, but it only supports HTTP.
[20/Apr/2025 08:58:32] code 400, message Bad request syntax ('SSH-2.0-Go')
[20/Apr/2025 08:58:32] "SSH-2.0-Go" 400 -
[20/Apr/2025 09:00:44] code 400, message Bad request version ('À\x14À')
[20/Apr/2025 09:00:44] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-20 11:02:34,572", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 11:02:34] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 11:04:26,689", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 11:04:26] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 11:04:35,209", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 11:04:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-20 11:04:36,078", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/Apr/2025 11:04:36] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-20 11:04:47,405", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/users/login/'>"}
[20/Apr/2025 11:04:47] "POST /users/login/ HTTP/1.1" 404 4486
{"asctime": "2025-04-20 11:05:44,117", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:05:44,118", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:05:44] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:05:49,336", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:05:49,337", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:05:49] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:06:06,852", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:06:06,852", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:06:06] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:06:42,668", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:06:42,669", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:06:42] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[20/Apr/2025 11:07:04] "GET /swagger/ HTTP/1.1" 200 1627
[20/Apr/2025 11:07:05] "GET /static/drf-yasg/style.css HTTP/1.1" 200 1047
[20/Apr/2025 11:07:05] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[20/Apr/2025 11:07:05] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[20/Apr/2025 11:07:05] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[20/Apr/2025 11:07:05] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1" 200 145206
[20/Apr/2025 11:07:06] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
[20/Apr/2025 11:07:06] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
{"asctime": "2025-04-20 11:07:07,380", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,383", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[20/Apr/2025 11:07:07] "GET /static/drf-yasg/swagger-ui-dist/favicon-32x32.png HTTP/1.1" 200 628
{"asctime": "2025-04-20 11:07:07,385", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,388", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,390", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,392", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,393", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,395", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:07,399", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django_filters/rest_framework/backends.py:142: UserWarning: <class 'appointments.views.AppointmentAPI'> is not compatible with schema generation
  warnings.warn(
/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django_filters/rest_framework/backends.py:142: UserWarning: <class 'consultation.views.ConsultationAPI'> is not compatible with schema generation
  warnings.warn(
/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django_filters/rest_framework/backends.py:142: UserWarning: <class 'consultation.views.ConsultationRecordingAPI'> is not compatible with schema generation
  warnings.warn(
/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django_filters/rest_framework/backends.py:142: UserWarning: <class 'user.views.UserViewsetAPI'> is not compatible with schema generation
  warnings.warn(
[20/Apr/2025 11:07:07] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-04-20 11:07:08,198", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,200", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,201", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,203", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,205", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,207", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,207", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,209", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:08,210", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[20/Apr/2025 11:07:08] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
[20/Apr/2025 11:07:21] "GET /swagger/ HTTP/1.1" 200 1627
[20/Apr/2025 11:07:22] "GET /static/drf-yasg/style.css HTTP/1.1" 200 1047
[20/Apr/2025 11:07:22] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1" 200 145206
[20/Apr/2025 11:07:25] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[20/Apr/2025 11:07:25] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[20/Apr/2025 11:07:25] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[20/Apr/2025 11:07:25] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
[20/Apr/2025 11:07:26] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
[20/Apr/2025 11:07:27] "GET /static/drf-yasg/swagger-ui-dist/favicon-32x32.png HTTP/1.1" 200 628
{"asctime": "2025-04-20 11:07:28,587", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,592", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,593", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,595", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,602", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,609", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,610", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,612", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:28,613", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[20/Apr/2025 11:07:28] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-04-20 11:07:30,407", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,409", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,410", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,412", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,413", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,415", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,415", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,417", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-04-20 11:07:30,419", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[20/Apr/2025 11:07:30] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-04-20 11:10:21,470", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:10:21,470", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:10:21] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:11:29,904", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:11:29,905", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:11:29] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:17:02,223", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:17:02,224", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:17:02] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:17:05,127", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:17:05,128", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:17:05] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:17:54,910", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:17:54,911", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:17:54] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:17:58,268", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:17:58,269", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:17:58] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-20 11:18:03,090", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-20 11:18:03,090", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[20/Apr/2025 11:18:03] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[20/Apr/2025 11:18:14] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[20/Apr/2025 11:18:44] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[20/Apr/2025 11:18:58] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-20 11:20:04,031", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 11:20:04] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-20 11:20:05,822", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/Apr/2025 11:20:05] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-20 12:27:21,029", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 12:27:21] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-04-20 12:27:21,313", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/Apr/2025 12:27:21] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-04-20 12:54:37,434", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 12:54:37] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-20 12:54:39,488", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 12:54:39] "GET / HTTP/1.0" 404 4431
[20/Apr/2025 18:12:25] code 400, message Bad request version ('\x00\x9eÌ¨Ìª\x003\x00=\x00\x16À')
[20/Apr/2025 18:12:25] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-20 18:12:36,576", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/Apr/2025 18:12:36] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-20 18:12:55,193", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/Apr/2025 18:12:55] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-20 18:12:55,823", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[20/Apr/2025 18:12:55] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-04-20 18:12:56,447", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[20/Apr/2025 18:12:56] "GET /sitemap.xml HTTP/1.1" 404 4482
[21/Apr/2025 00:35:00] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x8d')
[21/Apr/2025 00:35:00] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/Apr/2025 03:45:38] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[21/Apr/2025 03:45:38] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-21 04:20:20,087", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 04:20:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-21 08:00:57,638", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 08:00:57] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-21 09:44:26,464", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 09:44:26] "GET / HTTP/1.1" 404 4431
[21/Apr/2025 09:49:43] code 400, message Bad request version ('À\x14À')
[21/Apr/2025 09:49:43] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/Apr/2025 11:17:29] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x9as3.GÑû¿Dz\x08\xad\x06þGúz\x18\x82ÿc\x84C\x13¹ß\x08ø\x1a~Ö¨\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[21/Apr/2025 11:17:29] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-21 11:17:29,495", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 11:17:29] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-21 11:17:29,999", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[21/Apr/2025 11:17:29] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-04-21 17:19:54,370", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 17:19:54] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-21 19:27:48,086", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 19:27:48] "GET / HTTP/1.1" 404 4431
[21/Apr/2025 20:36:48] code 400, message Bad HTTP/0.9 request type ('\x00\x00\x00')
[21/Apr/2025 20:36:48] "    c                           " 400 -
{"asctime": "2025-04-21 21:10:25,353", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/Apr/2025 21:10:25] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-22 02:50:46,125", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v2/heartbeat", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v2/heartbeat'>"}
[22/Apr/2025 02:50:46] "GET /api/v2/heartbeat HTTP/1.1" 404 4497
{"asctime": "2025-04-22 02:50:47,179", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 02:50:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 03:54:42,692", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 03:54:42] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 03:55:35,227", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[22/Apr/2025 03:55:35] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-22 03:56:19,696", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[22/Apr/2025 03:56:19] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[22/Apr/2025 08:48:56] code 400, message Bad request version ('OÑËÜ®Ëd')
[22/Apr/2025 08:48:56] "   TZ         .    I¨À )z» zÚf Ò~Uñi»©                ÃÐ¢|¦v½óOÑËÜ®Ëd" 400 -
[22/Apr/2025 10:56:49] code 400, message Bad request version ('À\x14À')
[22/Apr/2025 10:56:49] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-22 11:05:48,431", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 11:05:48] "GET / HTTP/1.1" 404 4431
[22/Apr/2025 11:12:21] code 400, message Bad request version ('À\x14À')
[22/Apr/2025 11:12:21] You're accessing the development server over HTTPS, but it only supports HTTP.
[22/Apr/2025 11:15:05] code 400, message Bad request syntax ('SSH-2.0-Go')
[22/Apr/2025 11:15:05] "SSH-2.0-Go" 400 -
[22/Apr/2025 11:17:20] code 400, message Bad request version ('À\x14À')
[22/Apr/2025 11:17:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[22/Apr/2025 11:18:02] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[22/Apr/2025 11:24:19] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-22 11:25:18,436", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/deprecation.py\", line 131, in __call__\n    response = self.process_response(request, response)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 108, in process_response\n    return self.response_redirect_class(self.get_full_path_with_slash(request))\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 87, in get_full_path_with_slash\n    raise RuntimeError(\nRuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to 51.20.181.176:8000/api/v1/hospitals/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals'>"}
[22/Apr/2025 11:25:18] "POST /api/v1/hospitals HTTP/1.1" 500 78684
{"asctime": "2025-04-22 11:25:44,746", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:25:44] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-04-22 11:29:16,412", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:29:16] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-04-22 11:32:40,160", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:32:40] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-04-22 11:32:42,421", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:32:42] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-04-22 11:33:53,149", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 11:33:53] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-22 11:34:36,455", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:34:36] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-04-22 11:34:56,064", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:34:56] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-04-22 11:35:19,861", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:35:19] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-04-22 11:35:41,497", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:35:41] "POST /api/v1/hospitals/ HTTP/1.1" 422 117
{"asctime": "2025-04-22 11:35:54,148", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:35:54] "POST /api/v1/hospitals/ HTTP/1.1" 422 117
{"asctime": "2025-04-22 11:36:26,619", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:36:26] "POST /api/v1/hospitals/ HTTP/1.1" 422 117
{"asctime": "2025-04-22 11:37:38,950", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:37:38] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-04-22 11:37:46,385", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:37:46] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-04-22 11:40:53,856", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:40:53,923", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (b71f8704-8d03-4289-a088-46240619c215, 2025-04-22 11:40:53.829654+00, 2025-04-22 11:40:53.82967+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:40:54] "POST /api/v1/hospitals/ HTTP/1.1" 500 255186
{"asctime": "2025-04-22 11:42:47,886", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:42:47,944", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (f2d0b786-b29c-4916-a236-b29012a63eb5, 2025-04-22 11:42:47.88226+00, 2025-04-22 11:42:47.882276+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:42:47] "POST /api/v1/hospitals/ HTTP/1.1" 500 255186
[22/Apr/2025 11:42:56] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-22 11:43:34,560", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:43:34,609", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (ca549fb5-6785-468b-81de-d0761125930a, 2025-04-22 11:43:34.557239+00, 2025-04-22 11:43:34.557253+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:43:34] "POST /api/v1/hospitals/ HTTP/1.1" 500 255195
{"asctime": "2025-04-22 11:45:22,311", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:45:22,391", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (28244c32-66f4-4b9a-8960-7bf8a42ef196, 2025-04-22 11:45:22.306845+00, 2025-04-22 11:45:22.306859+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:45:22] "POST /api/v1/hospitals/ HTTP/1.1" 500 255195
{"asctime": "2025-04-22 11:45:40,695", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "JSON parse error - Expecting property name enclosed in double quotes: line 7 column 5 (char 138)", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 7 column 5 (char 138)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 7 column 5 (char 138)\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 7 column 5 (char 138)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 7 column 5 (char 138)", "taskName": null}
{"asctime": "2025-04-22 11:45:40,697", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:45:40] "POST /api/v1/hospitals/ HTTP/1.1" 500 63
{"asctime": "2025-04-22 11:46:00,137", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:46:00,249", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (fe08c780-9a2d-4e00-90c3-a561f3b80729, 2025-04-22 11:46:00.099901+00, 2025-04-22 11:46:00.099916+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:46:00] "POST /api/v1/hospitals/ HTTP/1.1" 500 255167
{"asctime": "2025-04-22 11:46:12,486", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:46:12,545", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (5545d302-6545-4bbd-8ea9-463cfa5807c7, 2025-04-22 11:46:12.482975+00, 2025-04-22 11:46:12.48299+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:46:13] "POST /api/v1/hospitals/ HTTP/1.1" 500 255186
{"asctime": "2025-04-22 11:46:32,988", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/deprecation.py\", line 131, in __call__\n    response = self.process_response(request, response)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 108, in process_response\n    return self.response_redirect_class(self.get_full_path_with_slash(request))\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 87, in get_full_path_with_slash\n    raise RuntimeError(\nRuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to 51.20.181.176:8000/api/v1/hospitals/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals'>"}
[22/Apr/2025 11:46:32] "POST /api/v1/hospitals HTTP/1.1" 500 78684
{"asctime": "2025-04-22 11:47:18,866", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/deprecation.py\", line 131, in __call__\n    response = self.process_response(request, response)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 108, in process_response\n    return self.response_redirect_class(self.get_full_path_with_slash(request))\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/middleware/common.py\", line 87, in get_full_path_with_slash\n    raise RuntimeError(\nRuntimeError: You called this URL via POST, but the URL doesn't end in a slash and you have APPEND_SLASH set. Django can't redirect to the slash URL while maintaining POST data. Change your form to point to 51.20.181.176:8000/api/v1/hospitals/ (note the trailing slash), or set APPEND_SLASH=False in your Django settings.", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals'>"}
[22/Apr/2025 11:47:18] "POST /api/v1/hospitals HTTP/1.1" 500 78684
{"asctime": "2025-04-22 11:47:22,337", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:47:22,379", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (1abe591b-044a-4a2d-be6b-f69359fc0f67, 2025-04-22 11:47:22.333468+00, 2025-04-22 11:47:22.333481+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:47:23] "POST /api/v1/hospitals/ HTTP/1.1" 500 255195
{"asctime": "2025-04-22 11:47:51,732", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:47:51] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-04-22 11:49:23,093", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:49:23,151", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (d2f70698-4f81-43e4-af95-fe972aaefa30, 2025-04-22 11:49:23.08876+00, 2025-04-22 11:49:23.088774+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:49:23] "POST /api/v1/hospitals/ HTTP/1.1" 500 255172
{"asctime": "2025-04-22 11:52:14,198", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:52:14,254", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (95a6d07d-dd1a-401f-a200-de6096cebf32, 2025-04-22 11:52:14.193063+00, 2025-04-22 11:52:14.193078+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:52:14] "POST /api/v1/hospitals/ HTTP/1.1" 500 255195
{"asctime": "2025-04-22 11:52:40,560", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)", "taskName": null}
{"asctime": "2025-04-22 11:52:40,561", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:52:40] "POST /api/v1/hospitals/ HTTP/1.1" 500 63
{"asctime": "2025-04-22 11:53:11,056", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 66, in parse\n    return json.load(decoded_stream, parse_constant=parse_constant)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 31, in load\n    return json.load(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 293, in load\n    return loads(fp.read(),\n           ^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 359, in loads\n    return cls(**kw).decode(s)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/decoder.py\", line 353, in raw_decode\n    obj, end = self.scan_once(s, idx)\n               ^^^^^^^^^^^^^^^^^^^^^^\njson.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 16 column 1 (char 407)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 215, in create\n    request.data if \"request_data\" not in kwargs else kwargs[\"request_data\"]\n    ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 220, in data\n    self._load_data_and_files()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 283, in _load_data_and_files\n    self._data, self._files = self._parse()\n                              ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 358, in _parse\n    parsed = parser.parse(stream, media_type, self.parser_context)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/parsers.py\", line 68, in parse\n    raise ParseError('JSON parse error - %s' % str(exc))\nrest_framework.exceptions.ParseError: JSON parse error - Expecting property name enclosed in double quotes: line 16 column 1 (char 407)", "taskName": null}
{"asctime": "2025-04-22 11:53:11,058", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:53:11] "POST /api/v1/hospitals/ HTTP/1.1" 500 63
{"asctime": "2025-04-22 11:53:44,957", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:53:45,019", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (af8adbf2-02ee-4f80-a40b-70611139c061, 2025-04-22 11:53:44.953235+00, 2025-04-22 11:53:44.953249+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:53:45] "POST /api/v1/hospitals/ HTTP/1.1" 500 255195
[22/Apr/2025 11:54:17] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-22 11:55:09,371", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 11:55:09,418", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (086161ab-5ea5-4a20-a55b-fcfd61a9b42c, 2025-04-22 11:55:09.366766+00, 2025-04-22 11:55:09.36678+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 11:55:09] "POST /api/v1/hospitals/ HTTP/1.1" 500 255172
[22/Apr/2025 12:04:25] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[22/Apr/2025 12:05:15] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
[22/Apr/2025 12:05:22] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-04-22 12:39:05,519", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-22 12:39:05,566", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9606ae86-fa85-48f3-8dc5-a0abd828d985, 2025-04-22 12:39:05.514265+00, 2025-04-22 12:39:05.51428+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[22/Apr/2025 12:39:06] "POST /api/v1/hospitals/ HTTP/1.1" 500 255172
[22/Apr/2025 12:39:32] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
[22/Apr/2025 12:40:07] "GET /api/v1/users/profile HTTP/1.1" 301 0
{"asctime": "2025-04-22 12:40:08,210", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-22 12:40:08,210", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/profile/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/profile/'>"}
[22/Apr/2025 12:40:08] "GET /api/v1/users/profile/ HTTP/1.1" 401 102
[22/Apr/2025 12:40:14] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[22/Apr/2025 12:40:46] "GET /api/v1/users/profile HTTP/1.1" 301 0
[22/Apr/2025 12:40:47] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
{"asctime": "2025-04-22 12:42:18,329", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-22 12:42:18,329", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:42:18] "GET /api/v1/users/ HTTP/1.1" 401 102
{"asctime": "2025-04-22 12:42:39,744", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:42:40] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-22 12:42:49,596", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:42:49] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-22 12:44:01,148", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:44:01] "GET /api/v1/users/ HTTP/1.1" 500 116153
{"asctime": "2025-04-22 12:44:32,219", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:44:32] "GET /api/v1/users/ HTTP/1.1" 500 116153
{"asctime": "2025-04-22 12:44:41,454", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-22 12:44:41,455", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:44:41] "GET /api/v1/users/ HTTP/1.1" 401 102
{"asctime": "2025-04-22 12:44:47,994", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-22 12:44:47,995", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:44:47] "GET /api/v1/users/ HTTP/1.1" 401 102
[22/Apr/2025 12:45:47] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-22 12:46:10,662", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[22/Apr/2025 12:46:10] "GET /api/v1/users/ HTTP/1.1" 500 116153
[22/Apr/2025 12:59:12] "GET /api/v1/users/profile HTTP/1.1" 301 0
[22/Apr/2025 12:59:13] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[22/Apr/2025 12:59:55] "GET /api/v1/users/profile HTTP/1.1" 301 0
{"asctime": "2025-04-22 12:59:56,294", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-22 12:59:56,294", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/profile/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/profile/'>"}
[22/Apr/2025 12:59:56] "GET /api/v1/users/profile/ HTTP/1.1" 401 102
[22/Apr/2025 13:00:00] "GET /api/v1/users/profile HTTP/1.1" 301 0
[22/Apr/2025 13:00:01] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
{"asctime": "2025-04-22 15:13:40,961", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:13:40] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:13:46,553", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:13:46] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:14:47,657", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:14:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:16:49,709", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:16:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:17:47,299", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:17:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:18:49,053", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:18:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:19:49,967", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:19:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:20:47,873", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:20:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:21:48,084", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:21:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:23:51,869", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:23:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:25:48,026", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:25:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:27:50,221", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:27:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:28:46,892", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:28:46] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:29:50,428", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:29:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:31:54,224", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:31:54] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:33:47,590", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:33:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:34:47,934", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:34:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:35:51,456", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:35:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:36:48,311", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:36:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:38:47,771", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:38:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:39:48,722", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:39:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:41:49,231", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:41:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:43:48,558", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:43:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:43:52,901", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:43:52] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-22 15:44:49,556", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:44:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:47:03,911", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:47:03] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:48:51,218", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:48:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:49:55,515", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:49:55] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:50:49,788", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:50:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:51:48,369", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:51:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:52:56,067", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:52:56] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:53:48,553", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:53:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:56:03,679", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:56:03] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 15:57:51,524", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 15:57:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:02:03,292", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:02:03] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:03:49,354", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:03:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:06:04,668", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:06:04] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:07:50,159", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:07:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:08:56,288", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:08:56] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:12:04,090", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:12:04] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:13:49,681", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:13:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:14:57,671", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:14:57] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:16:49,793", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:16:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:18:51,024", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:18:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:20:57,056", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:20:57] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:22:51,309", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:22:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:23:50,502", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:23:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:25:56,297", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:25:56] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:27:08,791", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:27:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:28:50,711", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:28:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:29:50,734", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:29:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:30:50,388", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:30:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:31:50,974", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:31:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:32:57,795", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:32:57] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:33:50,455", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:33:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:35:51,745", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:35:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:37:06,235", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:37:06] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:38:52,082", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:38:52] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:39:50,882", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:39:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 16:40:51,228", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 16:40:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 18:06:49,325", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 18:06:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-22 18:15:12,870", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[22/Apr/2025 18:15:12] "GET / HTTP/1.1" 404 4431
[22/Apr/2025 20:03:51] code 400, message Bad request syntax ('JDWP-Handshake')
[22/Apr/2025 20:03:51] "JDWP-Handshake" 400 -
{"asctime": "2025-04-23 01:44:29,512", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 01:44:29] "GET / HTTP/1.1" 404 4431
[23/Apr/2025 03:11:30] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x08ÌÇô\x8a\x8a¤«\x8aC\x16EXØ\x03\x15\x81ßy\x19¶|L*\x87a\x92E\x05\x17o>\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[23/Apr/2025 03:11:30] You're accessing the development server over HTTPS, but it only supports HTTP.
[23/Apr/2025 03:11:31] code 400, message Bad request version ('À\x14À')
[23/Apr/2025 03:11:31] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-23 03:11:31,283", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 03:11:31] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-23 03:11:31,601", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[23/Apr/2025 03:11:31] "GET /login HTTP/1.1" 404 4464
[23/Apr/2025 05:25:55,763] - Broken pipe from ('199.45.154.150', 35862)
{"asctime": "2025-04-23 05:25:59,375", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 05:25:59] "GET / HTTP/1.1" 404 4431
[23/Apr/2025 05:25:59,723] - Broken pipe from ('199.45.154.150', 35868)
{"asctime": "2025-04-23 05:26:03,645", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 05:26:03] "GET / HTTP/1.1" 404 4431
[23/Apr/2025 05:26:04] code 505, message Invalid HTTP version (2.0)
[23/Apr/2025 05:26:04] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-04-23 05:26:12,191", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[23/Apr/2025 05:26:12] "GET /favicon.ico HTTP/1.1" 404 4482
[23/Apr/2025 05:26:13] code 400, message Bad request version ('À\x14À')
[23/Apr/2025 05:26:13] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-23 07:05:02,018", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 07:05:02] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-23 07:05:14,523", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /helpdesk/WebObjects/Helpdesk.woa", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/helpdesk/WebObjects/Helpdesk.woa'>"}
[23/Apr/2025 07:05:14] "GET /helpdesk/WebObjects/Helpdesk.woa HTTP/1.1" 404 4545
{"asctime": "2025-04-23 07:05:28,423", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /console", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/console'>"}
[23/Apr/2025 07:05:28] "GET /console HTTP/1.1" 404 4470
[23/Apr/2025 07:05:57] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00\x9d\x01\x00\x00\x99\x03\x03$\x9d¦¹>Ñí\x93®¼Þx#!uTãs¨©ú\x9bËìYÓ4§"\x91K\'\x00\x00BÀ\x11À\x07À\x13À')
[23/Apr/2025 07:05:57] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-23 07:06:18,459", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 07:06:18] "GET / HTTP/1.1" 404 4431
[23/Apr/2025 10:05:27] code 400, message Bad request version ('À\x14À')
[23/Apr/2025 10:05:27] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-23 11:46:04,945", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 11:46:04] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-23 13:58:05,656", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 13:58:05] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-23 14:02:56,211", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 14:02:56] "GET / HTTP/1.1" 404 4431
[23/Apr/2025 14:05:09] code 400, message Bad request version ('À\x14À')
[23/Apr/2025 14:05:09] You're accessing the development server over HTTPS, but it only supports HTTP.
[23/Apr/2025 14:08:06] code 400, message Bad request syntax ('SSH-2.0-Go')
[23/Apr/2025 14:08:06] "SSH-2.0-Go" 400 -
[23/Apr/2025 14:09:09] code 400, message Bad request version ('À\x14À')
[23/Apr/2025 14:09:09] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-23 15:46:27,647", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 15:46:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-23 17:09:14,910", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 17:09:14] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-23 17:09:15,888", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 17:09:15] "GET / HTTP/1.0" 404 4431
[23/Apr/2025 17:20:44] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[23/Apr/2025 17:20:44] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-23 23:54:56,344", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[23/Apr/2025 23:54:56] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-24 01:07:47,489", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 01:07:47] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-24 04:24:59,563", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 04:24:59] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-24 06:19:33,748", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 06:19:33] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-24 07:01:30,764", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 07:01:30] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-24 11:48:33,610", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 11:48:33] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-24 12:03:01,679", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 12:03:01] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-24 14:50:35,761", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 14:50:35] "GET / HTTP/1.0" 404 4431
[24/Apr/2025 15:11:14] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[24/Apr/2025 15:11:14] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-24 17:43:43,729", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 17:43:43] "GET / HTTP/1.1" 404 4431
[24/Apr/2025 17:45:50] code 400, message Bad request version ('À\x14À')
[24/Apr/2025 17:45:50] You're accessing the development server over HTTPS, but it only supports HTTP.
[24/Apr/2025 17:49:12] code 400, message Bad request version ('À\x14À')
[24/Apr/2025 17:49:12] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-24 18:10:08,895", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 18:10:08] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-04-24 18:10:09,203", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[24/Apr/2025 18:10:09] "GET /favicon.ico HTTP/1.1" 404 4477
[24/Apr/2025 18:11:44] code 400, message Bad request version ('À\x14À')
[24/Apr/2025 18:11:44] You're accessing the development server over HTTPS, but it only supports HTTP.
[24/Apr/2025 20:27:26] code 400, message Bad HTTP/0.9 request type ("\x16\x03\x01\x00{\x01\x00\x00w\x03\x03j\x08úT\x13\x00èÿáqµ³\x99Ú.\x80÷³_\x13EÉÐü'\x9e%\x9cÂ\x95dú\x00\x00\x1aÀ/À+À\x11À\x07À\x13À")
[24/Apr/2025 20:27:26] You're accessing the development server over HTTPS, but it only supports HTTP.
[24/Apr/2025 20:27:26] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03,æy\x80\x913¹|?\x8eT*Õª=\x00\x83I\x0fC\x1aØþÊ\x98Ã*åzÜBd\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[24/Apr/2025 20:27:26] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-24 20:27:26,933", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 20:27:26] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-24 20:27:27,438", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[24/Apr/2025 20:27:27] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-04-24 20:45:38,132", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[24/Apr/2025 20:45:38] "GET / HTTP/1.1" 404 4431
[24/Apr/2025 20:45:38,244] - Broken pipe from ('147.185.132.246', 60890)
{"asctime": "2025-04-25 01:46:03,471", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[25/Apr/2025 01:46:03] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-04-25 01:46:05,395", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[25/Apr/2025 01:46:05] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-04-25 01:46:07,463", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[25/Apr/2025 01:46:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-25 02:36:30,656", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[25/Apr/2025 02:36:30] "GET / HTTP/1.1" 404 4431
[25/Apr/2025 02:36:35] code 505, message Invalid HTTP version (2.0)
[25/Apr/2025 02:36:35] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-04-25 02:36:48,008", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[25/Apr/2025 02:36:48] "GET /favicon.ico HTTP/1.1" 404 4482
[25/Apr/2025 02:36:48] code 400, message Bad request version ('À\x14À')
[25/Apr/2025 02:36:48] You're accessing the development server over HTTPS, but it only supports HTTP.
[25/Apr/2025 10:05:25] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[25/Apr/2025 10:05:25] "MGLNDD_51.20.181.176_8000" 400 -
[25/Apr/2025 11:23:41] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x9f£Ú\x14:Ç')
[25/Apr/2025 11:23:41] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-25 12:05:47,052", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[25/Apr/2025 12:05:47] "GET / HTTP/1.0" 404 4426
[25/Apr/2025 15:48:26] code 400, message Bad request version ('#Ý\x1aA\x04£m\x10\x9d\x83×3ûõRb&\x0e.CE\x1b$\x06Ã\x15\x82þK¥ZÁÆ\x83pÅ\x049$¢:|')
[25/Apr/2025 15:48:26] "   àZ          =K   ¨À j0/ admin                                           0 ÜÛõ¥·MÍIÏ3è&mºHèWv3;ìªù>þçC,5Ö_·ÞeéÛéËxGçÁ¹°¤iî#ÝA£m×3ûõRb&.CE$ÃþK¥ZÁÆpÅ9$¢:|" 400 -
{"asctime": "2025-04-25 19:06:38,935", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[25/Apr/2025 19:06:38] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-25 19:06:41,914", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[25/Apr/2025 19:06:41] "GET / HTTP/1.1" 404 4431
[25/Apr/2025 19:08:38] code 400, message Bad request version ('\x10ÇÜð-y\x00*::\x13\x01\x13\x02\x13\x03À,À+Ì©À0À/Ì¨À')
[25/Apr/2025 19:08:38] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-25 19:08:44,239", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/'>"}
[25/Apr/2025 19:08:44] "GET /api/v1/ HTTP/1.1" 404 4470
{"asctime": "2025-04-25 19:08:44,943", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[25/Apr/2025 19:08:44] "GET /favicon.ico HTTP/1.1" 404 4482
[25/Apr/2025 19:09:02] code 400, message Bad request version ('À\x14À')
[25/Apr/2025 19:09:02] You're accessing the development server over HTTPS, but it only supports HTTP.
[25/Apr/2025 19:11:27] code 400, message Bad request version ('À\x14À')
[25/Apr/2025 19:11:27] You're accessing the development server over HTTPS, but it only supports HTTP.
[25/Apr/2025 19:11:38] code 400, message Bad request syntax ('SSH-2.0-Go')
[25/Apr/2025 19:11:38] "SSH-2.0-Go" 400 -
{"asctime": "2025-04-25 21:01:29,587", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1//appointments/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1//appointments/'>"}
[25/Apr/2025 21:01:29] "GET /api/v1//appointments/ HTTP/1.1" 404 4512
{"asctime": "2025-04-25 21:01:42,167", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Token is invalid or expired", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-25 21:01:42,168", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Token is invalid or expired", "exc_text": null, "code": "error", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-25 21:01:42,169", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/appointments/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/appointments/'>"}
[25/Apr/2025 21:01:42] "GET /api/v1/appointments/ HTTP/1.1" 500 72
{"asctime": "2025-04-25 21:01:44,210", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Token is invalid or expired", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-25 21:01:44,211", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Token is invalid or expired", "exc_text": null, "code": "error", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 167, in decode_complete\n    self._validate_claims(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 262, in _validate_claims\n    self._validate_exp(payload, now, leeway)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 363, in _validate_exp\n    raise ExpiredSignatureError(\"Signature has expired\")\njwt.exceptions.ExpiredSignatureError: Signature has expired\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-25 21:01:44,212", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/appointments/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/appointments/'>"}
[25/Apr/2025 21:01:44] "GET /api/v1/appointments/ HTTP/1.1" 500 72
{"asctime": "2025-04-25 21:01:49,735", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 21:01:49,736", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:01:49] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 21:01:52,496", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 21:01:52,497", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:01:52] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 21:02:14,309", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:02:14,310", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[25/Apr/2025 21:02:14] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:02:20,275", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:02:20,276", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[25/Apr/2025 21:02:20] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:02:21,701", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:02:21,703", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[25/Apr/2025 21:02:21] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:02:44,381", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 21:02:44,381", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:02:44] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 21:02:47,652", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 21:02:47,652", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:02:47] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 21:02:51,597", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:02:51,598", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:02:51] "POST /api/v1/users/login/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:11,217", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:11,218", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:03:11] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:18,388", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:18,389", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:03:18] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:23,735", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:23,736", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[25/Apr/2025 21:03:23] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:31,000", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:31,001", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:03:31] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:32,577", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:32,577", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:03:32] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:33,926", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:33,927", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:03:33] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:03:43,893", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 21:03:43,893", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 21:03:43] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 21:03:50,317", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:03:50,318", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[25/Apr/2025 21:03:50] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 21:04:08,421", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 21:04:08,422", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[25/Apr/2025 21:04:08] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 22:20:38,905", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1//users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1//users/login/'>"}
[25/Apr/2025 22:20:38] "POST /api/v1//users/login/ HTTP/1.1" 404 4510
{"asctime": "2025-04-25 22:21:01,064", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-25 22:21:01,065", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 22:21:01] "POST /api/v1/users/login/ HTTP/1.1" 404 73
{"asctime": "2025-04-25 22:21:17,660", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 22:21:17,660", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 22:21:17] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-25 22:21:29,444", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-25 22:21:29,445", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[25/Apr/2025 22:21:29] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[25/Apr/2025 22:50:01,439] - Broken pipe from ('36.88.142.69', 59235)
{"asctime": "2025-04-26 02:02:35,267", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 02:02:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-26 02:02:51,864", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[26/Apr/2025 02:02:51] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-26 02:03:02,658", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[26/Apr/2025 02:03:02] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-04-26 03:25:49,857", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 03:25:49] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 03:52:48] code 400, message Bad request version ('À\x14À')
[26/Apr/2025 03:52:48] You're accessing the development server over HTTPS, but it only supports HTTP.
[26/Apr/2025 06:18:34] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[26/Apr/2025 06:18:50] "GET /api/v1/users/profile HTTP/1.1" 301 0
[26/Apr/2025 06:18:51] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[26/Apr/2025 06:19:05] "GET /api/v1/users/profile HTTP/1.1" 301 0
[26/Apr/2025 06:19:06] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[26/Apr/2025 07:29:23] "GET /api/v1/users/profile HTTP/1.1" 301 0
[26/Apr/2025 07:29:23] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[26/Apr/2025 07:29:36] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-04-26 07:29:50,919", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-04-26 07:29:50,979", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (3e2ec98d-5e23-4649-ab69-b1e8f544b724, 2025-04-26 07:29:50.912032+00, 2025-04-26 07:29:50.912046+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[26/Apr/2025 07:29:53] "POST /api/v1/hospitals/ HTTP/1.1" 500 255181
{"asctime": "2025-04-26 08:42:11,184", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 08:42:11] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 08:49:28] code 400, message Bad request syntax ('\x00\x00\x00TZ\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x04\x00(Á\x00\x00\x00\x00\x0f\x02\x00')
[26/Apr/2025 08:49:28] "   TZ          (Á     " 400 -
{"asctime": "2025-04-26 09:31:07,838", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 09:31:07,839", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 09:31:07] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-26 09:31:43,324", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 09:31:43,325", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 09:31:43] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-26 09:32:08,293", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:32:08,294", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[26/Apr/2025 09:32:08] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-26 09:32:31,790", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:32:31,791", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[26/Apr/2025 09:32:31] "POST /api/v1/users/ HTTP/1.1" 404 73
[26/Apr/2025 09:33:14] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 09:33:18,854", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:33:18,855", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[26/Apr/2025 09:33:18] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-26 09:33:41,419", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:33:41,420", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[26/Apr/2025 09:33:41] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
{"asctime": "2025-04-26 09:33:50,280", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:33:50,281", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:33:50] "GET /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-26 09:33:58,727", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:33:58,728", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 09:33:58] "POST /api/v1/users/login/ HTTP/1.1" 404 73
[26/Apr/2025 09:34:24] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-04-26 09:35:00,523", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[26/Apr/2025 09:35:00] "POST /api/v1/users/ HTTP/1.1" 422 160
{"asctime": "2025-04-26 09:43:44,771", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-26 09:43:44,772", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:43:44] "GET /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-04-26 09:43:54,780", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Token is invalid or expired", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:43:54,782", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Token is invalid or expired", "exc_text": null, "code": "error", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:43:54,783", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/9d656d17-eb41-4e3b-9c3a-903fcec0ca3e/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: PUT '/api/v1/users/9d656d17-eb41-4e3b-9c3a-903fcec0ca3e/'>"}
[26/Apr/2025 09:43:54] "PUT /api/v1/users/9d656d17-eb41-4e3b-9c3a-903fcec0ca3e/ HTTP/1.1" 500 72
{"asctime": "2025-04-26 09:44:00,693", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Token is invalid or expired", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:44:00,694", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Token is invalid or expired", "exc_text": null, "code": "error", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:44:00,695", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:44:00] "GET /api/v1/users/ HTTP/1.1" 500 72
{"asctime": "2025-04-26 09:44:02,464", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Token is invalid or expired", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:44:02,466", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Token is invalid or expired", "exc_text": null, "code": "error", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 269, in _load\n    signing_input, crypto_segment = jwt.rsplit(b\".\", 1)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 139, in decode\n    return jwt.decode(\n           ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 222, in decode\n    decoded = self.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jwt.py\", line 156, in decode_complete\n    decoded = api_jws.decode_complete(\n              ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 209, in decode_complete\n    payload, signing_input, header, signature = self._load(jwt)\n                                                ^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/jwt/api_jws.py\", line 272, in _load\n    raise DecodeError(\"Not enough segments\") from err\njwt.exceptions.DecodeError: Not enough segments\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 56, in __init__\n    self.payload = token_backend.decode(token, verify=verify)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/backends.py\", line 154, in decode\n    raise TokenBackendError(_(\"Token is invalid or expired\")) from ex\nrest_framework_simplejwt.exceptions.TokenBackendError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 35, in authenticate\n    token = AccessToken(token_string)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework_simplejwt/tokens.py\", line 58, in __init__\n    raise TokenError(_(\"Token is invalid or expired\"))\nrest_framework_simplejwt.exceptions.TokenError: Token is invalid or expired\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 37, in authenticate\n    raise APIException(detail=f\"{e}\")\nrest_framework.exceptions.APIException: Token is invalid or expired", "taskName": null}
{"asctime": "2025-04-26 09:44:02,467", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:44:02] "GET /api/v1/users/ HTTP/1.1" 500 72
[26/Apr/2025 09:44:05] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 09:44:12,553", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:44:12] "GET /api/v1/users/ HTTP/1.1" 500 116018
{"asctime": "2025-04-26 09:44:15,476", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:44:15] "GET /api/v1/users/ HTTP/1.1" 500 116018
[26/Apr/2025 09:57:18] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[26/Apr/2025 09:57:24] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[26/Apr/2025 09:57:53] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 09:58:38,741", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 09:58:39] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-26 10:01:03,532", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 10:01:03,532", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 10:01:03] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 10:01:12] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 10:03:39,974", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 10:03:39,975", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 10:03:39] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 10:03:49] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 10:06:02,429", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 10:06:02] "GET /api/v1/users/ HTTP/1.1" 500 116145
[26/Apr/2025 10:55:29] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[26/Apr/2025 10:55:31] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 11:19:59,663", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 11:20:00] "GET /api/v1/users/ HTTP/1.1" 500 116145
[26/Apr/2025 11:27:41] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[26/Apr/2025 11:27:42] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[26/Apr/2025 12:02:10] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[26/Apr/2025 12:02:12] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-26 12:05:47,183", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 12:05:47] "GET / HTTP/1.0" 404 4426
[26/Apr/2025 12:14:02] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[26/Apr/2025 12:14:04] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[26/Apr/2025 12:14:27] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 12:14:28,688", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 12:14:28,689", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 12:14:28] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:33:49] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:33:50,847", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:33:50,848", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:33:50] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:34:24] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:34:25,233", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:34:25,233", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:34:25] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:35:17] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:35:19,007", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:35:19,008", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:35:19] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:35:35] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:35:36,930", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:35:36,930", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:35:36] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:35:38] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:35:39,352", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:35:39,352", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:35:39] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:36:16] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:36:17,944", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:36:17,944", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:36:17] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:36:41] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:36:42,825", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:36:42,826", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:36:42] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:37:13] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:37:15,130", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:37:15,131", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:37:15] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:37:19] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:37:20,165", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:37:20,165", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:37:20] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[26/Apr/2025 13:37:26] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-04-26 13:37:27,847", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-04-26 13:37:27,847", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[26/Apr/2025 13:37:27] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-04-26 14:57:15,547", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 14:57:15] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-26 14:58:19,831", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 14:58:19] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 17:25:31] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[26/Apr/2025 17:25:31] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-26 17:32:28,751", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 17:32:29] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-26 17:35:20,628", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 17:35:20] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-26 17:43:52,997", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 17:43:52] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-26 17:43:55,422", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/users/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 220, in _get_response\n    response = response.render()\n               ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/template/response.py\", line 114, in render\n    self.content = self.rendered_content\n                   ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/response.py\", line 74, in rendered_content\n    ret = renderer.render(self.data, accepted_media_type, context)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/renderers.py\", line 100, in render\n    ret = json.dumps(\n          ^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/json.py\", line 25, in dumps\n    return json.dumps(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/utils/encoders.py\", line 67, in default\n    return super().default(obj)\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/json/encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\nTypeError: Object of type Country is not JSON serializable", "taskName": null, "status_code": 500, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[26/Apr/2025 17:43:55] "GET /api/v1/users/ HTTP/1.1" 500 116145
{"asctime": "2025-04-26 18:35:12,681", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 18:35:12] "GET / HTTP/1.0" 404 4431
[26/Apr/2025 19:15:26,666] - Broken pipe from ('152.59.84.138', 54223)
{"asctime": "2025-04-26 20:08:29,129", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 20:08:29] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-26 20:23:30,667", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 20:23:30] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 20:26:30,349] - Broken pipe from ('199.45.154.134', 60022)
{"asctime": "2025-04-26 20:26:33,662", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 20:26:33] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 20:26:34,771] - Broken pipe from ('199.45.154.134', 41368)
{"asctime": "2025-04-26 20:26:38,168", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 20:26:38] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 20:26:39] code 505, message Invalid HTTP version (2.0)
[26/Apr/2025 20:26:39] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-04-26 20:26:43,139", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[26/Apr/2025 20:26:43] "GET /favicon.ico HTTP/1.1" 404 4482
[26/Apr/2025 20:26:43] code 400, message Bad request version ('À\x14À')
[26/Apr/2025 20:26:43] You're accessing the development server over HTTPS, but it only supports HTTP.
[26/Apr/2025 20:30:29] code 400, message Bad request version ('À\x14À')
[26/Apr/2025 20:30:29] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-26 21:28:40,928", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[26/Apr/2025 21:28:40] "GET / HTTP/1.1" 404 4431
[26/Apr/2025 21:32:00] code 400, message Bad request version ('À\x14À')
[26/Apr/2025 21:32:00] You're accessing the development server over HTTPS, but it only supports HTTP.
[26/Apr/2025 21:33:34] code 400, message Bad request syntax ('SSH-2.0-Go')
[26/Apr/2025 21:33:34] "SSH-2.0-Go" 400 -
[26/Apr/2025 21:34:08] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03]ä\x81ü`ÆH\x01å§CÙ\x1bÆÑË\x05´wdÅ7D~Ö<å\x04^§É\\\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[26/Apr/2025 21:34:08] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 01:12:15] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03àò±6:Ò\x00\x94K\x14\x02IíÑâ÷\x19\x86Wî|nßa½Uz,\x04ÿ\x0f\x88\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[27/Apr/2025 01:12:15] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-27 03:14:21,036", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 03:14:21] "GET / HTTP/1.1" 404 4426
[27/Apr/2025 03:14:21,574] - Broken pipe from ('101.36.97.172', 57310)
[27/Apr/2025 03:14:21] code 400, message Bad request version ('À\x13À')
[27/Apr/2025 03:14:21] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 03:14:21] code 400, message Bad HTTP/0.9 request type ('t3')
[27/Apr/2025 03:14:21] "t3 12.1.2" 400 -
{"asctime": "2025-04-27 03:15:24,115", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 03:15:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-27 03:15:24,446", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[27/Apr/2025 03:15:24] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-27 03:15:24,763", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[27/Apr/2025 03:15:24] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-04-27 03:15:24,773", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[27/Apr/2025 03:15:24] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-04-27 03:46:58,402", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 03:46:58] "GET / HTTP/1.1" 404 4431
[27/Apr/2025 03:46:58,580] - Broken pipe from ('47.236.42.190', 31594)
{"asctime": "2025-04-27 05:34:39,630", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 05:34:39] "GET / HTTP/1.0" 404 4431
[27/Apr/2025 07:54:41] code 400, message Bad request version ('À\x14À')
[27/Apr/2025 07:54:41] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 07:54:41] code 400, message Bad request version ('À\x14À')
[27/Apr/2025 07:54:41] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-27 07:54:41,756", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 07:54:41] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-27 07:54:42,097", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[27/Apr/2025 07:54:42] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-04-27 09:27:17,516", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 09:27:17] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-27 09:27:20,283", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 09:27:20] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-04-27 10:24:31,396", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 10:24:31] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-27 10:25:25,512", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[27/Apr/2025 10:25:25] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-27 10:26:10,708", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[27/Apr/2025 10:26:10] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-04-27 12:03:49,084", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 12:03:49] "GET / HTTP/1.0" 404 4426
[27/Apr/2025 14:18:36] code 400, message Bad request syntax ('JDWP-Handshake')
[27/Apr/2025 14:18:36] "JDWP-Handshake" 400 -
{"asctime": "2025-04-27 14:28:56,992", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 14:28:56] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-04-27 14:28:57,063", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[27/Apr/2025 14:28:57] "GET /favicon.ico HTTP/1.1" 404 4477
[27/Apr/2025 15:30:07] code 400, message Bad request syntax ('nil')
[27/Apr/2025 15:30:07] "nil" 400 -
{"asctime": "2025-04-27 15:30:08,497", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 15:30:08] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-27 15:30:08,925", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 15:30:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-27 15:30:09,354", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[27/Apr/2025 15:30:09] "GET /favicon.ico HTTP/1.1" 404 4482
[27/Apr/2025 15:45:35,798] - Broken pipe from ('206.168.34.67', 35882)
{"asctime": "2025-04-27 15:45:38,931", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 15:45:38] "GET / HTTP/1.1" 404 4431
[27/Apr/2025 15:45:39,057] - Broken pipe from ('206.168.34.67', 35888)
{"asctime": "2025-04-27 15:45:42,190", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 15:45:42] "GET / HTTP/1.1" 404 4431
[27/Apr/2025 15:45:42] code 505, message Invalid HTTP version (2.0)
[27/Apr/2025 15:45:42] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-04-27 15:45:45,816", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[27/Apr/2025 15:45:45] "GET /favicon.ico HTTP/1.1" 404 4482
[27/Apr/2025 15:45:46] code 400, message Bad request version ('À\x14À')
[27/Apr/2025 15:45:46] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 21:54:39] code 400, message Bad request version ('À\x14À')
[27/Apr/2025 21:54:39] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 21:56:52] code 400, message Bad request syntax ("\x16\x03\x01\x00{\x01\x00\x00w\x03\x03jâ)'izö\x8c\x96\x0eñrò\x8d$A¤°Dkæs")
[27/Apr/2025 21:56:52] You're accessing the development server over HTTPS, but it only supports HTTP.
[27/Apr/2025 22:00:45] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-27 22:00:52,428", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-27 22:00:52,429", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[27/Apr/2025 22:00:52] "POST /api/v1/users/login/ HTTP/1.1" 404 73
[27/Apr/2025 22:04:57] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-04-27 22:07:29,772", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-04-27 22:07:29,773", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/profile/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/profile/'>"}
[27/Apr/2025 22:07:29] "GET /api/v1/users/profile/ HTTP/1.1" 401 102
[27/Apr/2025 22:07:55] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[27/Apr/2025 22:08:40] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
{"asctime": "2025-04-27 22:08:51,771", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-04-27 22:08:51,771", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[27/Apr/2025 22:08:51] "GET /api/v1/users/ HTTP/1.1" 404 73
[27/Apr/2025 22:09:52] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
[27/Apr/2025 22:10:15] "GET /api/v1/appointments/ HTTP/1.1" 200 108
[27/Apr/2025 22:22:39,548] - Broken pipe from ('36.88.142.69', 59479)
[27/Apr/2025 22:22:40,671] - Broken pipe from ('36.88.142.69', 61639)
[27/Apr/2025 22:22:40,673] - Broken pipe from ('36.88.142.69', 59656)
[27/Apr/2025 22:22:40,753] - Broken pipe from ('36.88.142.69', 59741)
[27/Apr/2025 23:41:07] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[27/Apr/2025 23:41:07] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-27 23:52:33,724", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[27/Apr/2025 23:52:33] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-28 00:22:12,525", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 00:22:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-28 00:23:01,581", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[28/Apr/2025 00:23:01] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-28 00:23:46,481", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[28/Apr/2025 00:23:46] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[28/Apr/2025 02:49:47] code 400, message Bad request version ('À\x14À')
[28/Apr/2025 02:49:47] You're accessing the development server over HTTPS, but it only supports HTTP.
[28/Apr/2025 03:29:35] "GET /api/v1/appointments/ HTTP/1.1" 200 108
[28/Apr/2025 04:01:27,930] - Broken pipe from ('114.5.102.228', 16677)
[28/Apr/2025 04:13:12] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x87ÿ\x13«M\x1d')
[28/Apr/2025 04:13:12] You're accessing the development server over HTTPS, but it only supports HTTP.
[28/Apr/2025 04:13:13] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03wè¤þ¡ëùù$ä')
[28/Apr/2025 04:13:13] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-28 04:13:13,317", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 04:13:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-28 04:13:13,648", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[28/Apr/2025 04:13:13] "GET /login HTTP/1.1" 404 4464
[28/Apr/2025 04:24:40] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x103Ô\x06@(tåÏ\x816kÃ\x00®2|LªÝ\x06ö\x80\xadÌ\x1a8AAUéÞ\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[28/Apr/2025 04:24:40] You're accessing the development server over HTTPS, but it only supports HTTP.
[28/Apr/2025 06:09:25] code 400, message Bad request syntax ('\x03\x00\x00\x13\x0eà\x00\x00\x00\x00\x00\x01\x00\x08\x00\x02\x00\x00\x00')
[28/Apr/2025 06:09:25] "  à          " 400 -
{"asctime": "2025-04-28 08:45:09,518", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /playlist.m3u8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/playlist.m3u8'>"}
[28/Apr/2025 08:45:09] "GET /playlist.m3u8 HTTP/1.1" 404 4488
[28/Apr/2025 08:45:11,875] - Broken pipe from ('128.1.179.119', 62340)
{"asctime": "2025-04-28 12:04:51,025", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 12:04:51] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-28 13:35:53,816", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 13:35:53] "GET / HTTP/1.1" 404 4431
[28/Apr/2025 18:18:04] code 400, message Bad request version ('\x00\x9eÌ¨Ìª\x003\x00=\x00\x16À')
[28/Apr/2025 18:18:04] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-28 18:18:14,558", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 18:18:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-28 18:18:32,997", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[28/Apr/2025 18:18:32] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-28 18:18:33,428", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[28/Apr/2025 18:18:33] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-04-28 18:18:33,860", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[28/Apr/2025 18:18:33] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-04-28 19:16:05,824", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[28/Apr/2025 19:16:05] "GET / HTTP/1.1" 404 4431
[28/Apr/2025 23:40:46] code 400, message Bad request version ('À\x14À')
[28/Apr/2025 23:40:46] You're accessing the development server over HTTPS, but it only supports HTTP.
[28/Apr/2025 23:42:50] code 400, message Bad request version ('À\x14À')
[28/Apr/2025 23:42:50] You're accessing the development server over HTTPS, but it only supports HTTP.
[29/Apr/2025 02:46:54] code 400, message Bad request version ('À\x14À')
[29/Apr/2025 02:46:54] You're accessing the development server over HTTPS, but it only supports HTTP.
[29/Apr/2025 02:46:54] code 400, message Bad request version ('À\x14À')
[29/Apr/2025 02:46:54] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-29 02:46:54,975", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 02:46:54] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-29 02:46:55,311", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[29/Apr/2025 02:46:55] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-04-29 03:01:00,922", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 03:01:00] "GET / HTTP/1.1" 404 4431
[29/Apr/2025 05:51:15] code 400, message Bad request version ('À\x14À')
[29/Apr/2025 05:51:15] You're accessing the development server over HTTPS, but it only supports HTTP.
[29/Apr/2025 06:17:39] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[29/Apr/2025 06:17:39] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-04-29 12:01:38,480", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 12:01:38] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-29 15:31:53,199", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[29/Apr/2025 15:31:53] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-04-29 15:31:53,548", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[29/Apr/2025 15:31:53] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-04-29 15:31:53,903", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 15:31:53] "GET / HTTP/1.1" 404 4431
[29/Apr/2025 19:22:10] code 400, message Bad request version ('À\x14À')
[29/Apr/2025 19:22:10] You're accessing the development server over HTTPS, but it only supports HTTP.
[29/Apr/2025 19:22:11] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03YÖ\x96j\x13I\x99ÙÚ\x0e+PÆ¶AÝ´øô¶-°HFû\x88í\x8dÞ6¿(\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[29/Apr/2025 19:22:11] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-29 19:22:11,076", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 19:22:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-29 19:22:11,167", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[29/Apr/2025 19:22:11] "GET /login HTTP/1.1" 404 4464
[29/Apr/2025 20:40:29] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-04-29 21:01:51,755", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[29/Apr/2025 21:01:51] "GET / HTTP/1.1" 404 4431
[29/Apr/2025 21:01:57] code 505, message Invalid HTTP version (2.0)
[29/Apr/2025 21:01:57] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-04-29 21:02:06,835", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[29/Apr/2025 21:02:06] "GET /favicon.ico HTTP/1.1" 404 4482
[29/Apr/2025 21:02:08] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00÷\x01\x00\x00ó\x03\x03é²7ë¢\x1b>}_É=Í-&\x99Å\\¾Öñ\x01\x87çá.\x82%Âëë\x903')
[29/Apr/2025 21:02:08] You're accessing the development server over HTTPS, but it only supports HTTP.
[29/Apr/2025 21:06:03,873] - Broken pipe from ('36.88.142.69', 59377)
{"asctime": "2025-04-30 01:11:27,758", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 01:11:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-30 02:03:49,833", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 02:03:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-30 02:05:55,198", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 02:05:55] "GET / HTTP/1.1" 404 4431
[30/Apr/2025 02:07:46] code 400, message Bad request version ('À\x14À')
[30/Apr/2025 02:07:46] You're accessing the development server over HTTPS, but it only supports HTTP.
[30/Apr/2025 02:08:52] code 400, message Bad request syntax ('SSH-2.0-Go')
[30/Apr/2025 02:08:52] "SSH-2.0-Go" 400 -
[30/Apr/2025 02:09:53] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03ø\x8fq´A')
[30/Apr/2025 02:09:53] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-30 02:38:48,931", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 02:38:48] "GET / HTTP/1.1" 404 4431
[30/Apr/2025 02:38:54,393] - Broken pipe from ('147.185.132.64', 62796)
[30/Apr/2025 07:19:45] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x032L\x07X\x9aßI¶Ðv\x86ø¢\x08\x9c³@Ú.õt\x00\x113Ú¹\x90ÿ=Ó.\x12\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[30/Apr/2025 07:19:45] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-30 08:40:14,074", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 08:40:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-30 12:04:05,806", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 12:04:05] "GET / HTTP/1.0" 404 4426
[30/Apr/2025 12:13:09] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[30/Apr/2025 12:13:09] "MGLNDD_51.20.181.176_8000" 400 -
[30/Apr/2025 12:36:17] code 400, message Bad request syntax ('nil')
[30/Apr/2025 12:36:17] "nil" 400 -
{"asctime": "2025-04-30 12:36:17,665", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 12:36:17] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-04-30 12:36:18,069", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 12:36:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-30 12:36:18,473", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[30/Apr/2025 12:36:18] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-04-30 12:36:27,491", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 12:36:27] "GET / HTTP/1.1" 404 4431
[30/Apr/2025 15:20:43] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03')
[30/Apr/2025 15:20:43] You're accessing the development server over HTTPS, but it only supports HTTP.
[30/Apr/2025 15:20:44] code 400, message Bad request version ('À\x14À')
[30/Apr/2025 15:20:44] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-04-30 15:20:44,370", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[30/Apr/2025 15:20:44] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-04-30 15:20:44,879", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[30/Apr/2025 15:20:44] "GET /login HTTP/1.1" 404 4464
[01/May/2025 00:09:02] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 00:09:20] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
[01/May/2025 00:13:28] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 00:13:29] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 00:15:09] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 00:15:10] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 00:15:51] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 00:15:52] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 00:17:56] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 00:17:57] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 00:22:25] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 00:22:26] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-05-01 00:27:41,466", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 00:27:41] "GET / HTTP/1.1" 404 4426
[01/May/2025 00:27:41,593] - Broken pipe from ('152.32.183.27', 34136)
[01/May/2025 00:27:41] code 400, message Bad request version ('À\x13À')
[01/May/2025 00:27:41] You're accessing the development server over HTTPS, but it only supports HTTP.
[01/May/2025 00:27:41] code 400, message Bad HTTP/0.9 request type ('t3')
[01/May/2025 00:27:41] "t3 12.1.2" 400 -
{"asctime": "2025-05-01 00:27:54,891", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 00:27:54] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 00:27:55,342", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[01/May/2025 00:27:55] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-01 00:27:55,778", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[01/May/2025 00:27:55] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-05-01 00:27:55,786", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[01/May/2025 00:27:55] "GET /sitemap.xml HTTP/1.1" 404 4482
[01/May/2025 00:32:48,334] - Broken pipe from ('36.88.142.69', 63615)
{"asctime": "2025-05-01 00:54:58,032", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 00:54:58] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 00:55:12,985", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[01/May/2025 00:55:12] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-01 00:55:16,018", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[01/May/2025 00:55:16] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-01 00:55:18,672", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[01/May/2025 00:55:18] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[01/May/2025 01:42:02] "GET /api/v1/appointments/ HTTP/1.1" 200 108
{"asctime": "2025-05-01 01:42:16,252", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "You do not have permission to perform this action.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 175, in permission_denied\n    raise exceptions.PermissionDenied(detail=message, code=code)\nrest_framework.exceptions.PermissionDenied: You do not have permission to perform this action.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 175, in permission_denied\n    raise exceptions.PermissionDenied(detail=message, code=code)\nrest_framework.exceptions.PermissionDenied: You do not have permission to perform this action.", "taskName": null}
{"asctime": "2025-05-01 01:42:16,252", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "You do not have permission to perform this action.", "exc_text": null, "code": "permission_denied", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 59, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 175, in permission_denied\n    raise exceptions.PermissionDenied(detail=message, code=code)\nrest_framework.exceptions.PermissionDenied: You do not have permission to perform this action.", "taskName": null}
{"asctime": "2025-05-01 01:42:16,253", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Forbidden: /api/v1/appointments/", "exc_text": null, "taskName": null, "status_code": 403, "request": "<WSGIRequest: POST '/api/v1/appointments/'>"}
[01/May/2025 01:42:16] "POST /api/v1/appointments/ HTTP/1.1" 403 107
[01/May/2025 02:02:23,119] - Broken pipe from ('36.88.142.69', 65289)
{"asctime": "2025-05-01 02:21:10,526", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 02:21:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 07:11:27,173", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/google.com:443'>"}
[01/May/2025 07:11:27] "CONNECT google.com:443 HTTP/1.1" 404 1846
[01/May/2025 09:06:31] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 09:06:32] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-05-01 09:10:30,064", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-01 09:10:30,064", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[01/May/2025 09:10:30] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[01/May/2025 09:10:46] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-05-01 09:10:54,310", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-01 09:10:54,311", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[01/May/2025 09:10:54] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-05-01 09:11:03,364", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[01/May/2025 09:11:03] "POST /api/v1/users/ HTTP/1.1" 422 160
{"asctime": "2025-05-01 09:11:52,641", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[01/May/2025 09:11:52] "POST /api/v1/users/ HTTP/1.1" 422 160
{"asctime": "2025-05-01 09:11:57,259", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[01/May/2025 09:11:57] "POST /api/v1/users/ HTTP/1.1" 422 160
{"asctime": "2025-05-01 09:14:24,404", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 57, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-01 09:14:24,405", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/hospitals/'>"}
[01/May/2025 09:14:24] "GET /api/v1/hospitals/ HTTP/1.1" 404 73
[01/May/2025 09:14:40] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-05-01 09:14:46,467", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:14:46] "POST /api/v1/hospitals/ HTTP/1.1" 422 106
{"asctime": "2025-05-01 09:15:06,256", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:15:06] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-05-01 09:15:21,458", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:15:21] "POST /api/v1/hospitals/ HTTP/1.1" 422 119
{"asctime": "2025-05-01 09:15:29,436", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:15:29] "POST /api/v1/hospitals/ HTTP/1.1" 422 115
{"asctime": "2025-05-01 09:15:34,405", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-05-01 09:15:34,467", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (9bf3194c-1274-4b2c-bcda-6eeff732c749, 2025-05-01 09:15:34.401269+00, 2025-05-01 09:15:34.401283+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:15:35] "POST /api/v1/hospitals/ HTTP/1.1" 500 255033
{"asctime": "2025-05-01 09:15:47,568", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-05-01 09:15:47,610", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (7a13e80b-dcb3-4170-9db3-4e8dc4cdd8a9, 2025-05-01 09:15:47.565945+00, 2025-05-01 09:15:47.565958+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:15:47] "POST /api/v1/hospitals/ HTTP/1.1" 500 255033
[01/May/2025 09:17:43] "GET /api/v1/hospitals/ HTTP/1.1" 200 108
{"asctime": "2025-05-01 09:17:48,133", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n", "taskName": null}
{"asctime": "2025-05-01 09:17:48,176", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "ERROR", "message": "Internal Server Error: /api/v1/hospitals/", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.errors.NotNullViolation: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/views.py\", line 64, in post\n    return super().create(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 220, in create\n    self.perform_create(request, *args, **kwargs)\n  File \"/usr/lib/python3.12/contextlib.py\", line 81, in inner\n    return func(*args, **kwds)\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 229, in perform_create\n    register = self.serializer.save()\n               ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 208, in save\n    self.instance = self.create(validated_data)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/hospital/serializers.py\", line 67, in create\n    return super().create(validated_data)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/serializers.py\", line 989, in create\n    instance = ModelClass._default_manager.create(**validated_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 679, in create\n    obj.save(force_insert=True, using=self.db)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 891, in save\n    self.save_base(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 997, in save_base\n    updated = self._save_table(\n              ^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1160, in _save_table\n    results = self._do_insert(\n              ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/base.py\", line 1201, in _do_insert\n    return manager._insert(\n           ^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 1847, in _insert\n    return query.get_compiler(using=using).execute_sql(returning_fields)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/sql/compiler.py\", line 1836, in execute_sql\n    cursor.execute(sql, params)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 122, in execute\n    return super().execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 79, in execute\n    return self._execute_with_wrappers(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 92, in _execute_with_wrappers\n    return executor(sql, params, many, context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 100, in _execute\n    with self.db.wrap_database_errors:\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/utils.py\", line 91, in __exit__\n    raise dj_exc_value.with_traceback(traceback) from exc_value\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/backends/utils.py\", line 105, in _execute\n    return self.cursor.execute(sql, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\ndjango.db.utils.IntegrityError: null value in column \"country\" of relation \"hospital_hospital\" violates not-null constraint\nDETAIL:  Failing row contains (87f084da-a727-4081-97d9-8a408fc13f91, 2025-05-01 09:17:48.130066+00, 2025-05-01 09:17:48.130079+00, f, null, Apolo Hospital, null, null, , 20, null, Delhi, Delhi, 9116240211, apolo@grr.la, GENERAL, null, 1990-12-01, 09:00:00, 05:00:00, 9829683469, Deepak Kumar, 100, 3, null, X-ray,MRI).\n\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/exception.py\", line 55, in inner\n    response = get_response(request)\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/views/decorators/csrf.py\", line 65, in _view_wrapper\n    return view_func(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/viewsets.py\", line 124, in view\n    return self.dispatch(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 509, in dispatch\n    response = self.handle_exception(exc)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 95, in handle_exception\n    return super().handle_exception(exc)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 466, in handle_exception\n    response = exception_handler(exc, context)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/handle_exceptions.py\", line 50, in custom_exception_handler\n    message = INVALID_REQUEST\n              ^^^^^^^^^^^^^^^\nNameError: name 'INVALID_REQUEST' is not defined", "taskName": null, "status_code": 500, "request": "<WSGIRequest: POST '/api/v1/hospitals/'>"}
[01/May/2025 09:17:48] "POST /api/v1/hospitals/ HTTP/1.1" 500 255033
[01/May/2025 09:54:55] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03Õ©é<\x84@uoìt:|/Ó\x86\x07\x87Z.?å\x7fÎñ.}«üMH°B\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[01/May/2025 09:54:55] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-01 10:00:30,427", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 10:00:30] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 10:02:38,913", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 10:02:38] "GET / HTTP/1.1" 404 4431
[01/May/2025 10:04:35] code 400, message Bad request version ('À\x14À')
[01/May/2025 10:04:35] You're accessing the development server over HTTPS, but it only supports HTTP.
[01/May/2025 10:06:31] code 400, message Bad request syntax ('SSH-2.0-Go')
[01/May/2025 10:06:31] "SSH-2.0-Go" 400 -
[01/May/2025 10:07:25] code 400, message Bad request version ('À\x14À')
[01/May/2025 10:07:25] You're accessing the development server over HTTPS, but it only supports HTTP.
[01/May/2025 11:33:55] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03¦\x83ýðªiêÔÿGxÊa´\x89Ósî\x04gtIZÞ6\x8b\x8c»ÿrôR\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[01/May/2025 11:33:55] You're accessing the development server over HTTPS, but it only supports HTTP.
[01/May/2025 11:33:55] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03³ÏC¬\x8d¦ó^\x15¹Ãl')
[01/May/2025 11:33:55] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-01 11:33:55,961", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 11:33:55] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 11:33:56,461", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[01/May/2025 11:33:56] "GET /login HTTP/1.1" 404 4464
[01/May/2025 11:47:31] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03×\x12¯*\\\x83Î\x90[jU\x92e\x18F')
[01/May/2025 11:47:31] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-01 12:03:07,159", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 12:03:07] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-01 12:17:03,991", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 12:17:03] "GET / HTTP/1.1" 404 4431
[01/May/2025 12:17:05] code 505, message Invalid HTTP version (2.0)
[01/May/2025 12:17:05] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-01 13:39:12,400", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 13:39:12] "GET / HTTP/1.1" 404 4431
[01/May/2025 13:39:14,622] - Broken pipe from ('147.185.132.96', 61510)
{"asctime": "2025-05-01 15:10:47,033", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 15:10:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-01 16:05:33,572", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-01 16:05:33,573", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[01/May/2025 16:05:33] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-05-01 16:19:51,416", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 16:19:51] "GET / HTTP/1.1" 404 4431
[01/May/2025 16:37:12] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[01/May/2025 16:37:14] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 16:38:09] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[01/May/2025 18:26:41] code 400, message Bad request syntax ('\x01\x01æ')
[01/May/2025 18:26:41] "æ" 400 -
[01/May/2025 19:02:56,102] - Broken pipe from ('206.168.34.32', 43320)
{"asctime": "2025-05-01 19:03:00,158", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 19:03:00] "GET / HTTP/1.1" 404 4431
[01/May/2025 19:03:00,796] - Broken pipe from ('206.168.34.32', 43348)
{"asctime": "2025-05-01 19:03:06,994", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 19:03:06] "GET / HTTP/1.1" 404 4431
[01/May/2025 19:03:08] code 505, message Invalid HTTP version (2.0)
[01/May/2025 19:03:08] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-01 19:03:19,758", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[01/May/2025 19:03:19] "GET /favicon.ico HTTP/1.1" 404 4482
[01/May/2025 19:03:20] code 400, message Bad request version ('À\x14À')
[01/May/2025 19:03:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[01/May/2025 19:17:50] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[01/May/2025 19:17:50] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-01 19:51:55,156", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 19:51:55] "GET / HTTP/1.1" 404 4431
[01/May/2025 22:57:29] code 400, message Bad request syntax ('JDWP-Handshake')
[01/May/2025 22:57:29] "JDWP-Handshake" 400 -
{"asctime": "2025-05-01 23:03:27,860", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[01/May/2025 23:03:27] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-02 03:37:08,048", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /c/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/c/'>"}
[02/May/2025 03:37:08] "GET /c/ HTTP/1.1" 404 4455
{"asctime": "2025-05-02 11:56:47,473", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 11:56:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-02 11:59:23,531", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 11:59:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-02 12:00:21,788", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 12:00:21] "GET / HTTP/1.0" 404 4426
[02/May/2025 12:01:13] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x8bÎ\x91d\x96öÛÕëÂ\x96\x8ec!§»¤[®Ó$X\x80e8ÆË\x8c7æÚs\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[02/May/2025 12:01:13] You're accessing the development server over HTTPS, but it only supports HTTP.
[02/May/2025 12:02:59] code 400, message Bad request syntax ('SSH-2.0-Go')
[02/May/2025 12:02:59] "SSH-2.0-Go" 400 -
{"asctime": "2025-05-02 12:38:26,058", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 12:38:26] "GET / HTTP/1.1" 404 4431
[02/May/2025 12:40:45] code 400, message Bad request version ('À\x14À')
[02/May/2025 12:40:45] You're accessing the development server over HTTPS, but it only supports HTTP.
[02/May/2025 12:47:36] code 400, message Bad request version ('À\x14À')
[02/May/2025 12:47:36] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-02 18:02:16,105", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 18:02:16] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-02 21:12:07,753", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[02/May/2025 21:12:07] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-02 22:31:08,385", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /portal", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/portal'>"}
[02/May/2025 22:31:08] "POST /portal HTTP/1.1" 404 4468
{"asctime": "2025-05-03 00:41:37,814", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 00:41:37] "GET / HTTP/1.1" 404 4431
[03/May/2025 00:41:42] code 505, message Invalid HTTP version (2.0)
[03/May/2025 00:41:42] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-03 00:41:57,287", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[03/May/2025 00:41:57] "GET /favicon.ico HTTP/1.1" 404 4482
[03/May/2025 00:41:59] code 400, message Bad request version ('À\x14À')
[03/May/2025 00:41:59] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 03:32:19] code 400, message Bad request version ('À\x14À')
[03/May/2025 03:32:19] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 03:32:20] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03±Bg\x19\x08E\x00\x9b±\x81CÓÉÊ0@È\x92\x89í\x8fñ/.ËOí!¢ï\x01\x9b\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[03/May/2025 03:32:20] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-03 03:32:20,536", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 03:32:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-03 03:32:21,113", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[03/May/2025 03:32:21] "GET /login HTTP/1.1" 404 4464
[03/May/2025 03:48:15,637] - Broken pipe from ('167.94.138.196', 60534)
[03/May/2025 03:48:17] code 400, message Bad request syntax ('\x16\x03\x01\x00î\x01\x00\x00ê\x03\x03')
[03/May/2025 03:48:17] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 03:48:34,329] - Broken pipe from ('167.94.138.196', 52076)
[03/May/2025 03:48:54] code 400, message Bad request syntax ('ZG\x00\x00\x00\x05\x00+\x0e\x01\x00')
[03/May/2025 03:48:54] "ZG    + " 400 -
{"asctime": "2025-05-03 06:04:23,479", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 06:04:23] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-03 10:25:54,898", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sse", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sse'>"}
[03/May/2025 10:25:54] "GET /sse HTTP/1.1" 404 4449
[03/May/2025 10:26:25,019] - Broken pipe from ('141.148.242.147', 61000)
[03/May/2025 11:04:07,504] - Broken pipe from ('45.79.115.134', 54854)
{"asctime": "2025-05-03 11:04:11,139", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 11:04:11] "GET / HTTP/1.1" 404 4426
[03/May/2025 11:04:13,680] - Broken pipe from ('45.79.115.134', 54855)
{"asctime": "2025-05-03 11:59:27,961", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 11:59:27] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-03 13:48:27,004", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 13:48:27] "GET / HTTP/1.0" 404 4431
[03/May/2025 15:00:42] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:00:44,069", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:00:44,070", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:00:44] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:01:17] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:01:18,919", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:01:18,920", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:01:18] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:03:03] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:03:04,691", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:03:04,692", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:03:04] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:05:12] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:05:13,887", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:05:13,888", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:05:13] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:06:15] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:06:17,236", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:06:17,236", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:06:17] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:07:07] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:07:08,982", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:07:08,983", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:07:08] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[03/May/2025 15:10:18] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-03 15:10:19,629", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-03 15:10:19,630", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[03/May/2025 15:10:19] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-05-03 16:18:25,975", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 16:18:25] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-03 16:21:32,479", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 16:21:32] "GET / HTTP/1.1" 404 4431
[03/May/2025 16:24:26] code 400, message Bad request version ('À\x14À')
[03/May/2025 16:24:26] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 16:26:59] code 400, message Bad request syntax ('SSH-2.0-Go')
[03/May/2025 16:26:59] "SSH-2.0-Go" 400 -
[03/May/2025 16:28:14] code 400, message Bad request version ('À\x14À')
[03/May/2025 16:28:14] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 21:13:46] code 400, message Bad request syntax ('nil')
[03/May/2025 21:13:46] "nil" 400 -
{"asctime": "2025-05-03 21:13:46,843", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 21:13:46] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-03 21:13:47,246", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 21:13:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-03 21:13:47,650", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[03/May/2025 21:13:47] "GET /favicon.ico HTTP/1.1" 404 4482
[03/May/2025 23:05:36] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x03\x01¦\x01\x00\x01¢\x03\x03:¯')
[03/May/2025 23:05:36] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-03 23:05:41,568", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 23:05:41] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-03 23:13:03,521", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[03/May/2025 23:13:03] "GET /favicon.ico HTTP/1.1" 404 4482
[03/May/2025 23:37:13] code 400, message Bad request version ('À\x14À')
[03/May/2025 23:37:13] You're accessing the development server over HTTPS, but it only supports HTTP.
[03/May/2025 23:37:13] code 400, message Bad request version ('À\x14À')
[03/May/2025 23:37:13] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-03 23:37:14,034", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[03/May/2025 23:37:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-03 23:37:14,353", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[03/May/2025 23:37:14] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-04 00:10:33,335", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 00:10:33] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-04 03:46:29,049", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 03:46:29] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-04 03:48:17,614", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[04/May/2025 03:48:17] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-04 03:49:32,093", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[04/May/2025 03:49:32] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-04 03:49:38,334", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[04/May/2025 03:49:38] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[04/May/2025 06:36:02] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[04/May/2025 06:36:02] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-04 11:48:55,759", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 11:48:55] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-04 12:00:45,133", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 12:00:45] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-04 12:20:49,443", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 12:20:49] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-04 13:35:26,970", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 13:35:26] "GET / HTTP/1.1" 404 4431
[04/May/2025 13:35:28,655] - Broken pipe from ('198.235.24.81', 59172)
[04/May/2025 13:42:10] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00u\x01\x00\x00q\x03\x03I0¤ß{Á¼ÂW?')
[04/May/2025 13:42:10] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-04 15:18:23,764", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 15:18:23] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-04 16:22:18,906", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 16:22:18] "GET / HTTP/1.1" 404 4431
[04/May/2025 16:22:21] code 505, message Invalid HTTP version (2.0)
[04/May/2025 16:22:21] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-04 16:22:36,510", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[04/May/2025 16:22:36] "GET /favicon.ico HTTP/1.1" 404 4482
[04/May/2025 16:22:38] code 400, message Bad request version ('À\x14À')
[04/May/2025 16:22:38] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-04 17:13:53,916", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 17:13:53] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-04 17:16:01,819", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 17:16:01] "GET / HTTP/1.1" 404 4431
[04/May/2025 17:18:13] code 400, message Bad request syntax ('SSH-2.0-Go')
[04/May/2025 17:18:13] "SSH-2.0-Go" 400 -
[04/May/2025 18:57:04] code 400, message Bad HTTP/0.9 request type ('\x00\x00\x00')
[04/May/2025 18:57:04] "    c                           " 400 -
[04/May/2025 19:54:27] code 400, message Bad request version ('À\x14À')
[04/May/2025 19:54:27] You're accessing the development server over HTTPS, but it only supports HTTP.
[04/May/2025 19:54:27] code 400, message Bad request version ('À\x14À')
[04/May/2025 19:54:27] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-04 19:54:27,508", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 19:54:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-04 19:54:27,850", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[04/May/2025 19:54:27] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-04 21:03:44,199", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 21:03:44] "GET / HTTP/1.1" 404 4431
[04/May/2025 22:06:39] code 400, message Bad request syntax ('JDWP-Handshake')
[04/May/2025 22:06:39] "JDWP-Handshake" 400 -
{"asctime": "2025-05-04 23:46:00,655", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[04/May/2025 23:46:00] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-05-04 23:46:01,074", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[04/May/2025 23:46:01] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-05-04 23:46:01,905", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[04/May/2025 23:46:01] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 00:54:40,333", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 00:54:40] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-05 00:54:40,856", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[05/May/2025 00:54:40] "GET /favicon.ico HTTP/1.1" 404 4477
[05/May/2025 01:16:21] code 400, message Bad request version ('À\x14À')
[05/May/2025 01:16:21] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-05 01:16:37,392", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 01:16:37] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 01:16:45,042", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /manage/account/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/manage/account/login'>"}
[05/May/2025 01:16:45] "GET /manage/account/login HTTP/1.1" 404 4509
[05/May/2025 01:16:58] "GET /admin/index.html HTTP/1.1" 302 0
{"asctime": "2025-05-05 01:17:10,650", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /index.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/index.html'>"}
[05/May/2025 01:17:10] "GET /index.html HTTP/1.1" 404 4479
{"asctime": "2025-05-05 01:17:18,071", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /+CSCOE+/logon.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/+CSCOE+/logon.html'>"}
[05/May/2025 01:17:18] "GET /+CSCOE+/logon.html HTTP/1.1" 404 4503
{"asctime": "2025-05-05 01:17:25,320", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /cgi-bin/login.cgi", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/cgi-bin/login.cgi'>"}
[05/May/2025 01:17:25] "GET /cgi-bin/login.cgi HTTP/1.1" 404 4500
{"asctime": "2025-05-05 01:17:32,598", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.htm", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.htm'>"}
[05/May/2025 01:17:32] "GET /login.htm HTTP/1.1" 404 4476
{"asctime": "2025-05-05 01:17:39,890", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.html'>"}
[05/May/2025 01:17:39] "GET /login.html HTTP/1.1" 404 4479
{"asctime": "2025-05-05 01:17:51,300", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login.jsp", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login.jsp'>"}
[05/May/2025 01:17:51] "GET /login.jsp HTTP/1.1" 404 4476
{"asctime": "2025-05-05 01:18:04,833", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[05/May/2025 01:18:04] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-05 01:18:11,447", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /doc/index.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/doc/index.html'>"}
[05/May/2025 01:18:11] "GET /doc/index.html HTTP/1.1" 404 4491
{"asctime": "2025-05-05 01:18:18,714", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /remote/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/remote/login'>"}
[05/May/2025 01:18:18] "GET /remote/login HTTP/1.1" 404 4485
[05/May/2025 01:18:25] "GET //admin/login.asp HTTP/1.1" 302 0
{"asctime": "2025-05-05 01:18:32,832", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /web/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/web/'>"}
[05/May/2025 01:18:32] "GET /web/ HTTP/1.1" 404 4461
{"asctime": "2025-05-05 01:18:40,428", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /webpages/login.html", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/webpages/login.html'>"}
[05/May/2025 01:18:40] "GET //webpages/login.html HTTP/1.1" 404 4506
[05/May/2025 06:27:39] code 400, message Bad request version ('À#À¬À®À+À')
[05/May/2025 06:27:39] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-05 06:27:50,561", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 06:27:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 06:36:52,746", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[05/May/2025 06:36:52] "GET /favicon.ico HTTP/1.1" 404 4482
[05/May/2025 10:45:36] code 400, message Bad request syntax ('\x16\x03\x01\x01')
[05/May/2025 10:45:36] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 10:45:37] code 400, message Bad request syntax ('\x16\x03\x01\x01')
[05/May/2025 10:45:37] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-05 11:47:15,241", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /.env", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/.env'>"}
[05/May/2025 11:47:15] "GET /.env HTTP/1.1" 404 4461
{"asctime": "2025-05-05 12:24:20,110", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 12:24:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 12:24:52,298", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[05/May/2025 12:24:52] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-05 12:25:36,898", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[05/May/2025 12:25:36] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[05/May/2025 12:53:50] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[05/May/2025 12:53:50] "MGLNDD_51.20.181.176_8000" 400 -
[05/May/2025 15:30:55] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03')
[05/May/2025 15:30:55] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 16:05:54] code 400, message Bad request version ('À\x14À')
[05/May/2025 16:05:54] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 16:05:54] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03W§ÞFÃÅ¹v\x0eÅ\x8e\x02\x99\x06PDÔ\x052$tr©¸·\\»¢f\x95é²\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[05/May/2025 16:05:54] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-05 16:05:54,399", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 16:05:54] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 16:05:54,486", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[05/May/2025 16:05:54] "GET /login HTTP/1.1" 404 4464
[05/May/2025 18:16:57] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[05/May/2025 18:16:58] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[05/May/2025 18:17:07] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[05/May/2025 18:17:07] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[05/May/2025 18:17:08] "GET /api/v1/users/profile/ HTTP/1.1" 200 358
[05/May/2025 18:18:07] code 400, message Bad request version ('iÅ$Û\x0e=ì\x9d\x9bë¬×Q\x83)5Uål\x8cb¢yq+Ã<\x13ª#èû\x00*::\x13\x01\x13\x02\x13\x03À,À+Ì©À0À/Ì¨À')
[05/May/2025 18:18:07] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 18:18:08] code 400, message Bad request version ('\x94´Aï:)\x05é?]Î¤w\x9ajþ\x08\x96\x9fC\x0f+cw\x19X:ôPÀ(S\x00,JJ\x13\x01\x13\x02\x13\x03À,À+Ì©À0À/Ì¨À')
[05/May/2025 18:18:08] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 18:18:08] code 400, message Bad request syntax ('\x16\x03\x01\x00}\x01\x00\x00y\x03\x01\x89.@æ0')
[05/May/2025 18:18:08] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 18:48:11] code 400, message Bad request syntax ('nil')
[05/May/2025 18:48:11] "nil" 400 -
{"asctime": "2025-05-05 18:48:12,059", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 18:48:12] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-05 18:48:12,463", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 18:48:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-05 18:48:12,865", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[05/May/2025 18:48:12] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-05 22:14:07,569", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[05/May/2025 22:14:07] "GET / HTTP/1.1" 404 4431
[05/May/2025 22:17:38] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03©¹\x8c\x8aØPÐø\x19hnS}tÕïUËApaO')
[05/May/2025 22:17:38] You're accessing the development server over HTTPS, but it only supports HTTP.
[05/May/2025 22:19:41] code 400, message Bad request syntax ('SSH-2.0-Go')
[05/May/2025 22:19:41] "SSH-2.0-Go" 400 -
[05/May/2025 22:20:25] code 400, message Bad request version ('À\x14À')
[05/May/2025 22:20:25] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-06 00:05:22,940", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 00:05:22] "GET / HTTP/1.1" 404 4431
[06/May/2025 00:50:06] code 400, message Bad request syntax ('JDWP-Handshake')
[06/May/2025 00:50:06] "JDWP-Handshake" 400 -
[06/May/2025 02:22:19] code 400, message Bad HTTP/0.9 request type ('\x00\x00\x00')
[06/May/2025 02:22:19] "    c                           " 400 -
{"asctime": "2025-05-06 02:38:45,504", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 02:38:45] "GET / HTTP/1.1" 404 4431
[06/May/2025 02:38:49,259] - Broken pipe from ('205.210.31.101', 62028)
{"asctime": "2025-05-06 02:43:53,914", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-06 02:43:53,915", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[06/May/2025 02:43:53] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[06/May/2025 02:44:06] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[06/May/2025 02:44:20] "GET /api/v1/appointments/?appointment_status=IN_PROGRESS HTTP/1.1" 200 108
{"asctime": "2025-05-06 03:42:53,218", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 03:42:53] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-06 03:43:09,075", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[06/May/2025 03:43:09] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-06 03:43:14,264", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[06/May/2025 03:43:14] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-06 03:43:16,952", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[06/May/2025 03:43:16] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-05-06 04:14:24,887", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/google.com:443'>"}
[06/May/2025 04:14:24] "CONNECT google.com:443 HTTP/1.1" 404 1846
{"asctime": "2025-05-06 11:43:00,810", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[06/May/2025 11:43:00] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-06 13:41:14,623", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 13:41:14] "GET / HTTP/1.1" 404 4431
[06/May/2025 13:41:19,997] - Broken pipe from ('205.210.31.172', 63806)
{"asctime": "2025-05-06 15:14:54,661", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 15:14:54] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-06 15:14:55,205", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[06/May/2025 15:14:55] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-05-06 17:21:21,238", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 17:21:21] "GET / HTTP/1.1" 404 4431
[06/May/2025 17:21:23] code 505, message Invalid HTTP version (2.0)
[06/May/2025 17:21:23] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-06 17:21:37,350", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[06/May/2025 17:21:37] "GET /favicon.ico HTTP/1.1" 404 4482
[06/May/2025 17:21:40] code 400, message Bad request version ('õslâëzéÚ³È]')
[06/May/2025 17:21:40] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-06 17:24:45,928", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1'>"}
[06/May/2025 17:24:45] "GET /api/v1 HTTP/1.1" 404 4467
{"asctime": "2025-05-06 17:24:49,036", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[06/May/2025 17:24:49] "GET /favicon.ico HTTP/1.1" 404 4482
[06/May/2025 17:25:01] "GET /api/v1/users HTTP/1.1" 301 0
{"asctime": "2025-05-06 17:25:01,561", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-05-06 17:25:01,561", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[06/May/2025 17:25:01] "GET /api/v1/users/ HTTP/1.1" 401 102
{"asctime": "2025-05-06 17:25:09,423", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/login'>"}
[06/May/2025 17:25:09] "GET /api/v1/login HTTP/1.1" 404 4485
[06/May/2025 17:32:20] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\xad\x98\x86m\x83´a{_\x8a+\x8e\x93w\x9cvr\x91ö=íê·\x8e\x94£\x05\x08~óòô\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[06/May/2025 17:32:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[06/May/2025 17:32:20] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x07F¢Ø\x0fQúÃPPq\x86º\x81²×«¦,\x01\x87\x9c\x9bÿ\x94á¦}ËÓú\x81\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[06/May/2025 17:32:20] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-06 17:32:20,908", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[06/May/2025 17:32:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-06 17:32:21,412", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[06/May/2025 17:32:21] "GET /login HTTP/1.1" 404 4464
[06/May/2025 17:45:40] code 400, message Bad HTTP/0.9 request type ("\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x04ï'6gu{\x06\xadøM)ÁÙ\x10³3Åý-Ï\x88\x82\x97I\x15§ä\x83E\x0e7\x00\x00\x1aÀ/À+À\x11À\x07À\x13À")
[06/May/2025 17:45:40] You're accessing the development server over HTTPS, but it only supports HTTP.
[06/May/2025 17:58:05] code 400, message Bad request version ('À\x13À')
[06/May/2025 17:58:05] You're accessing the development server over HTTPS, but it only supports HTTP.
[06/May/2025 17:58:05] code 400, message Bad request version ('À(À$À\x14À')
[06/May/2025 17:58:05] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-06 19:22:21,463", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[06/May/2025 19:22:21] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-06 22:08:02,952", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[06/May/2025 22:08:02] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[06/May/2025 22:47:56] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[06/May/2025 22:47:56] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-07 00:58:36,910", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 00:58:36] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-07 01:49:57,226", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 01:49:57] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-07 01:50:10,053", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[07/May/2025 01:50:10] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-07 01:50:14,269", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[07/May/2025 01:50:14] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-07 01:50:16,894", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[07/May/2025 01:50:16] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-05-07 03:56:17,345", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[07/May/2025 03:56:17] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-07 04:25:17,586", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 04:25:17] "GET / HTTP/1.1" 404 4431
[07/May/2025 04:32:13] code 400, message Bad request syntax ('SSH-2.0-Go')
[07/May/2025 04:32:13] "SSH-2.0-Go" 400 -
[07/May/2025 04:34:07] code 400, message Bad request version ('À\x14À')
[07/May/2025 04:34:07] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 05:05:11] code 400, message Bad request version ('À\x14À')
[07/May/2025 05:05:11] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 05:07:16] code 400, message Bad request syntax ('\x01\x01æ')
[07/May/2025 05:07:16] "æ" 400 -
[07/May/2025 05:09:37] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03¸\x7fmHAýuk¢1!ù$d\x05\x16¨íÜ\x137½O(þÒ\x8cMH¨\x07Í\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[07/May/2025 05:09:37] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 05:24:01] code 400, message Bad request version ('À')
[07/May/2025 05:24:01] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-07 06:27:52,409", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 06:27:52] "GET / HTTP/1.1" 404 4431
[07/May/2025 09:27:58] code 400, message Bad request syntax ('\x00\x00\x00TZ\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x04\x00(Á\x00\x00\x00\x00\x0f\x02\x00')
[07/May/2025 09:27:58] "   TZ          (Á     " 400 -
[07/May/2025 12:40:28] code 400, message Bad request version ('À\x14À')
[07/May/2025 12:40:28] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 12:40:28] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03Ù¦\x9e\x1að;\x9e\x9e·÷Åqbu>\x8a¯þ<\x00À\x0euÙåËdYvÜ-Â\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[07/May/2025 12:40:28] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-07 12:40:28,384", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 12:40:28] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-07 12:40:28,466", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[07/May/2025 12:40:28] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-07 13:05:27,991", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 13:05:27] "GET / HTTP/1.1" 404 4431
[07/May/2025 17:29:57] code 400, message Bad request syntax ('nil')
[07/May/2025 17:29:57] "nil" 400 -
[07/May/2025 17:29:57,396] - Broken pipe from ('47.237.1.157', 47212)
{"asctime": "2025-05-07 17:30:02,692", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 17:30:02] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-07 17:30:08,011", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 17:30:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-07 17:30:14,777", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[07/May/2025 17:30:14] "GET /favicon.ico HTTP/1.1" 404 4482
[07/May/2025 17:49:23,508] - Broken pipe from ('167.94.138.63', 38894)
{"asctime": "2025-05-07 17:49:27,237", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 17:49:27] "GET / HTTP/1.1" 404 4431
[07/May/2025 17:49:27,723] - Broken pipe from ('167.94.138.63', 38928)
{"asctime": "2025-05-07 17:49:32,731", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 17:49:32] "GET / HTTP/1.1" 404 4431
[07/May/2025 17:49:33] code 505, message Invalid HTTP version (2.0)
[07/May/2025 17:49:33] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-07 17:49:40,024", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[07/May/2025 17:49:40] "GET /favicon.ico HTTP/1.1" 404 4482
[07/May/2025 17:49:40] code 400, message Bad request version ('=A{ra\x1aÙvhQ%\x11â\x94\x99I\x94\x90\x92\x15\x02\\BvHY\x05p')
[07/May/2025 17:49:40] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-07 20:17:47,882", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1'>"}
[07/May/2025 20:17:47] "GET /api/v1 HTTP/1.1" 404 4467
{"asctime": "2025-05-07 20:17:48,588", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[07/May/2025 20:17:48] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-07 20:17:52,203", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /ad", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/ad'>"}
[07/May/2025 20:17:52] "GET /ad HTTP/1.1" 404 4455
[07/May/2025 20:17:53] "GET /admin HTTP/1.1" 301 0
[07/May/2025 20:17:54] "GET /admin/ HTTP/1.1" 302 0
[07/May/2025 20:17:54] "GET /admin/login/?next=/admin/ HTTP/1.1" 200 4265
[07/May/2025 20:17:55] "GET /static/admin/css/base.css HTTP/1.1" 200 22092
[07/May/2025 20:17:55] "GET /static/admin/css/dark_mode.css HTTP/1.1" 200 2804
[07/May/2025 20:17:55] "GET /static/admin/css/nav_sidebar.css HTTP/1.1" 200 2810
[07/May/2025 20:17:55] "GET /static/admin/css/login.css HTTP/1.1" 200 951
[07/May/2025 20:17:55] "GET /static/admin/css/responsive.css HTTP/1.1" 200 17972
[07/May/2025 20:17:55] "GET /static/admin/js/theme.js HTTP/1.1" 200 1653
[07/May/2025 20:17:55] "GET /static/admin/js/nav_sidebar.js HTTP/1.1" 200 3063
[07/May/2025 20:19:04] "POST /admin/login/?next=/admin/ HTTP/1.1" 302 0
[07/May/2025 20:19:05] "GET /admin/ HTTP/1.1" 200 17005
[07/May/2025 20:19:06] "GET /static/admin/css/dashboard.css HTTP/1.1" 200 441
[07/May/2025 20:19:06] "GET /static/admin/img/icon-viewlink.svg HTTP/1.1" 200 581
[07/May/2025 20:19:06] "GET /static/admin/img/icon-addlink.svg HTTP/1.1" 200 331
[07/May/2025 20:19:06] "GET /static/admin/img/icon-changelink.svg HTTP/1.1" 200 380
[07/May/2025 20:19:20] "GET /admin/hospital/hospital/add/ HTTP/1.1" 200 44840
[07/May/2025 20:19:20] "GET /static/admin/css/forms.css HTTP/1.1" 200 8794
[07/May/2025 20:19:20] "GET /static/ckeditor/ckeditor.css HTTP/1.1" 200 672
[07/May/2025 20:19:21] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[07/May/2025 20:19:21] "GET /static/admin/js/calendar.js HTTP/1.1" 200 9141
[07/May/2025 20:19:21] "GET /static/ckeditor/ckeditor-init.js HTTP/1.1" 200 1526
[07/May/2025 20:19:21] "GET /static/admin/js/jquery.init.js HTTP/1.1" 200 347
[07/May/2025 20:19:21] "GET /static/admin/css/widgets.css HTTP/1.1" 200 11564
[07/May/2025 20:19:21] "GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1" 200 19319
[07/May/2025 20:19:21] "GET /static/admin/js/core.js HTTP/1.1" 200 6208
[07/May/2025 20:19:21] "GET /static/admin/js/vendor/jquery/jquery.js HTTP/1.1" 200 285314
[07/May/2025 20:19:21] "GET /static/admin/js/admin/RelatedObjectLookups.js HTTP/1.1" 200 9097
[07/May/2025 20:19:21] "GET /static/admin/js/actions.js HTTP/1.1" 200 8076
[07/May/2025 20:19:21] "GET /static/admin/js/urlify.js HTTP/1.1" 200 7887
[07/May/2025 20:19:22] "GET /static/admin/js/prepopulate.js HTTP/1.1" 200 1531
[07/May/2025 20:19:22] "GET /static/admin/js/vendor/xregexp/xregexp.js HTTP/1.1" 200 325171
[07/May/2025 20:19:22] "GET /static/admin/js/prepopulate_init.js HTTP/1.1" 200 586
[07/May/2025 20:19:22] "GET /static/ckeditor/ckeditor/ckeditor.js HTTP/1.1" 200 759716
[07/May/2025 20:19:22] "GET /static/admin/js/change_form.js HTTP/1.1" 200 606
[07/May/2025 20:19:23] "GET /static/ckeditor/ckeditor/config.js?t=N5UC HTTP/1.1" 200 336
[07/May/2025 20:19:23] "GET /static/ckeditor/ckeditor/lang/en.js?t=N5UC HTTP/1.1" 200 18228
[07/May/2025 20:19:23] "GET /static/ckeditor/ckeditor/skins/moono-lisa/editor.css?t=N5UC HTTP/1.1" 200 48309
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/styles.js?t=N5UC HTTP/1.1" 200 5577
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css?t=N5UC HTTP/1.1" 200 381
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/plugins/dialog/styles/dialog.css?t=N5UC HTTP/1.1" 200 249
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/plugins/copyformatting/styles/copyformatting.css?t=N5UC HTTP/1.1" 200 1511
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/plugins/scayt/dialogs/dialog.css?t=N5UC HTTP/1.1" 200 419
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/plugins/tableselection/styles/tableselection.css?t=N5UC HTTP/1.1" 200 1145
[07/May/2025 20:19:24] "GET /static/ckeditor/ckeditor/skins/moono-lisa/icons_hidpi.png?t=4a1fb11f44 HTTP/1.1" 200 38309
[07/May/2025 20:19:25] "GET /static/ckeditor/ckeditor/contents.css?t=N5UC HTTP/1.1" 200 3092
[07/May/2025 20:19:25] "GET /static/admin/img/icon-calendar.svg HTTP/1.1" 200 1086
[07/May/2025 20:19:26] "GET /static/admin/img/icon-clock.svg HTTP/1.1" 200 677
[07/May/2025 20:19:32] "GET /static/admin/img/calendar-icons.svg HTTP/1.1" 200 2455
[07/May/2025 20:20:57] "POST /admin/hospital/hospital/add/ HTTP/1.1" 200 45456
[07/May/2025 20:20:58] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[07/May/2025 20:21:15] "POST /admin/hospital/hospital/add/ HTTP/1.1" 302 0
[07/May/2025 20:21:15] "GET /admin/hospital/hospital/36b015ad-04d8-491d-a570-1bba89deb8e1/change/ HTTP/1.1" 200 45838
[07/May/2025 20:21:16] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[07/May/2025 20:21:16] "GET /static/admin/img/icon-yes.svg HTTP/1.1" 200 436
[07/May/2025 20:22:04] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[07/May/2025 20:23:45] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[07/May/2025 20:23:46] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[07/May/2025 20:23:46] "GET /api/v1/users/profile/ HTTP/1.1" 200 383
{"asctime": "2025-05-07 20:23:47,237", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1//users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1//users/login/'>"}
[07/May/2025 20:23:47] "POST /api/v1//users/login/ HTTP/1.1" 404 4510
{"asctime": "2025-05-07 20:24:39,169", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1//users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1//users/'>"}
[07/May/2025 20:24:39] "POST /api/v1//users/ HTTP/1.1" 404 4492
{"asctime": "2025-05-07 20:25:38,000", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 381, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 174, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-07 20:25:38,001", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[07/May/2025 20:25:38] "POST /api/v1/users/ HTTP/1.1" 404 73
{"asctime": "2025-05-07 20:26:00,943", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-07 20:26:00,943", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[07/May/2025 20:26:00] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[07/May/2025 20:27:31] code 400, message Bad request version ('Óþn"\x00*::\x13\x01\x13\x02\x13\x03À,À+Ì©À0À/Ì¨À')
[07/May/2025 20:27:31] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 20:27:31] code 400, message Bad request version ('!LfÐ¼åIRJR,°Jå\x00,JJ\x13\x01\x13\x02\x13\x03À,À+Ì©À0À/Ì¨À')
[07/May/2025 20:27:31] You're accessing the development server over HTTPS, but it only supports HTTP.
[07/May/2025 20:27:32] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00}\x01\x00\x00y\x03\x01nBüË#\x9bfÍ&t¬\x82ê')
[07/May/2025 20:27:32] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-07 21:31:33,167", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[07/May/2025 21:31:33] "GET / HTTP/1.1" 404 4431
[07/May/2025 22:59:21] code 400, message Bad request syntax ('JDWP-Handshake')
[07/May/2025 22:59:21] "JDWP-Handshake" 400 -
[07/May/2025 23:32:49] code 400, message Bad request version ('À\x14À')
[07/May/2025 23:32:49] You're accessing the development server over HTTPS, but it only supports HTTP.
[08/May/2025 00:33:06] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[08/May/2025 00:33:06] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-08 01:30:07,041", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 01:30:07] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-08 01:58:00,057", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 01:58:00] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-08 05:26:58,686", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 05:26:58] "GET / HTTP/1.1" 404 4431
[08/May/2025 05:53:31,003] - Broken pipe from ('199.45.154.150', 51332)
{"asctime": "2025-05-08 05:53:34,679", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 05:53:34] "GET / HTTP/1.1" 404 4431
[08/May/2025 05:53:34,979] - Broken pipe from ('199.45.154.150', 41092)
{"asctime": "2025-05-08 05:53:38,385", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 05:53:38] "GET / HTTP/1.1" 404 4431
[08/May/2025 05:53:39] code 505, message Invalid HTTP version (2.0)
[08/May/2025 05:53:39] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-08 05:53:43,204", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[08/May/2025 05:53:43] "GET /favicon.ico HTTP/1.1" 404 4482
[08/May/2025 05:53:43] code 400, message Bad request version ('À\x14À')
[08/May/2025 05:53:43] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-08 07:06:00,587", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 07:06:00] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-08 07:10:27,785", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 07:10:27] "GET / HTTP/1.1" 404 4431
[08/May/2025 07:10:57] code 400, message Bad request version ('À\x14À')
[08/May/2025 07:10:57] You're accessing the development server over HTTPS, but it only supports HTTP.
[08/May/2025 07:14:15] code 400, message Bad request syntax ('SSH-2.0-Go')
[08/May/2025 07:14:15] "SSH-2.0-Go" 400 -
[08/May/2025 07:14:21] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03½)\x0f\x10Ý¶Î¾y0,u×IS\x87\x19UV\x83»\x8bcÎÈIÂýçÛq5\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[08/May/2025 07:14:21] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-08 08:49:57,191", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 08:49:57] "GET / HTTP/1.1" 404 4431
[08/May/2025 08:57:20] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03Éß²åjfóg2±Ö?4\x89ÝÈ\x05¹SÃÊÅ½þ5ûÐgçõVY\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[08/May/2025 08:57:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[08/May/2025 08:57:21] code 400, message Bad request version ('À\x14À')
[08/May/2025 08:57:21] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-08 08:57:21,573", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 08:57:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-08 08:57:22,176", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[08/May/2025 08:57:22] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-08 09:24:36,364", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 09:24:36] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-08 09:24:36,440", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[08/May/2025 09:24:36] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-05-08 13:36:53,968", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 13:36:53] "GET / HTTP/1.1" 404 4431
[08/May/2025 13:36:56,694] - Broken pipe from ('147.185.132.219', 59378)
{"asctime": "2025-05-08 17:32:49,717", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /.env", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/.env'>"}
[08/May/2025 17:32:49] "GET /.env HTTP/1.1" 404 4461
{"asctime": "2025-05-08 17:47:17,571", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-08 17:47:17,572", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[08/May/2025 17:47:17] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[08/May/2025 17:48:12] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[08/May/2025 17:48:35] "GET /api/v1/hospitals/ HTTP/1.1" 200 329
[08/May/2025 17:58:31] code 400, message Bad request syntax ('JDWP-Handshake')
[08/May/2025 17:58:31] "JDWP-Handshake" 400 -
[08/May/2025 18:14:16] code 400, message Bad request syntax ('\x16\x03\x01\x00\x8b\x01\x00\x00\x87\x03\x03')
[08/May/2025 18:14:16] You're accessing the development server over HTTPS, but it only supports HTTP.
[08/May/2025 19:38:09] code 400, message Bad request version ('À\x14À')
[08/May/2025 19:38:09] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-08 22:00:41,992", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[08/May/2025 22:00:41] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 01:47:16,196", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 01:47:16] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-09 03:52:48,626", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 03:52:48] "GET / HTTP/1.0" 404 4431
[09/May/2025 04:57:54] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03$u¾Í,\x99S\x07\x18d\x8c\x8bº\x94Z2\x19³\x8e\x90ÆÑ\x8b\x80¾\x03\x01ãÝ(\x96é\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[09/May/2025 04:57:54] You're accessing the development server over HTTPS, but it only supports HTTP.
[09/May/2025 04:57:54] code 400, message Bad request version ('À\x14À')
[09/May/2025 04:57:54] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-09 04:57:54,143", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 04:57:54] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 04:57:54,219", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[09/May/2025 04:57:54] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-09 06:52:57,264", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 06:52:57] "GET / HTTP/1.1" 404 4431
[09/May/2025 06:57:22] code 400, message Bad request version ('À\x14À')
[09/May/2025 06:57:22] You're accessing the development server over HTTPS, but it only supports HTTP.
[09/May/2025 06:58:01] code 400, message Bad request syntax ('SSH-2.0-Go')
[09/May/2025 06:58:01] "SSH-2.0-Go" 400 -
[09/May/2025 06:58:21] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x06ª?ø\x8b¼\x0e\x9f\\Êb\x11\x8e\x82Ë\x12H\xadeë\x1bRLG\xadÚ\x8bòöæ³8\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[09/May/2025 06:58:21] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-09 07:30:52,264", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 07:30:52] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-09 07:30:53,211", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[09/May/2025 07:30:53] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-09 08:10:51,901", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:10:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:11:10,241", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:11:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:13:07,326", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:13:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:14:07,063", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:14:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:15:07,538", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:15:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:16:08,535", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:16:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:17:07,529", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:17:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:18:04,050", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:18:04] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-09 08:18:07,299", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:18:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:19:07,626", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:19:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:21:14,830", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:21:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:23:07,927", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:23:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:24:10,806", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:24:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:26:08,122", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:26:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:27:08,841", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:27:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:29:10,800", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:29:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:31:09,499", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:31:09] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:33:08,504", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:33:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:34:15,732", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:34:15] "GET / HTTP/1.1" 404 4431
[09/May/2025 08:35:31] code 400, message Bad request syntax ('JDWP-Handshake')
[09/May/2025 08:35:31] "JDWP-Handshake" 400 -
{"asctime": "2025-05-09 08:36:09,851", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:36:09] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:37:08,618", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:37:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:38:08,685", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:38:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:39:23,629", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:39:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:42:23,745", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:42:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:45:23,698", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:45:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:47:09,454", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:47:09] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:49:24,111", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:49:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:51:10,213", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:51:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:53:13,047", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:53:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:55:10,322", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:55:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:56:11,289", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:56:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:57:11,946", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:57:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 08:58:12,800", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 08:58:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:00:11,254", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:00:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:01:10,176", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:01:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:02:11,563", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:02:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:03:12,301", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:03:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:05:11,191", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:05:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:07:13,382", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:07:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:08:17,636", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:08:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:10:11,630", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:10:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:12:10,500", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:12:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:13:11,375", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:13:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:14:12,533", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:14:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:15:10,870", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:15:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:17:12,492", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:17:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:18:11,314", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:18:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:19:11,443", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:19:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:21:14,560", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:21:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:23:11,617", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:23:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:24:11,459", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:24:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:25:14,971", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:25:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:27:11,812", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:27:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:28:11,913", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:28:11] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:29:18,231", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:29:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:31:12,039", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:31:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:33:28,166", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:33:28] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:35:12,304", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:35:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:36:13,531", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:36:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:37:13,340", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:37:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:39:13,156", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:39:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:41:12,970", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:41:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:43:13,087", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:43:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:45:15,590", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:45:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:47:12,685", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:47:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:48:13,206", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:48:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:48:44,643", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[09/May/2025 09:48:44] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-09 09:49:14,036", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:49:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:50:13,757", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:50:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:51:13,216", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:51:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:52:14,604", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:52:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:53:13,655", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:53:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:54:13,332", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:54:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:55:13,880", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:55:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:57:28,677", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:57:28] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 09:59:14,105", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 09:59:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:00:14,120", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:00:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:01:14,680", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:01:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:04:28,914", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:04:28] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:06:14,511", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:06:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:08:17,614", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:08:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:10:17,805", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:10:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:12:14,552", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:12:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:13:14,756", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:13:14] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:15:36,772", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:15:36] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:17:17,543", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:17:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:19:22,185", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:19:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:21:15,014", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:21:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:22:15,711", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:22:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:24:15,766", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:24:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:25:19,490", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:25:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:27:15,590", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:27:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:28:16,326", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:28:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:30:16,113", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:30:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:31:15,489", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:31:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:32:18,788", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:32:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:33:30,784", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:33:30] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:35:16,209", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:35:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:37:30,723", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:37:30] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:39:16,166", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:39:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:40:17,698", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:40:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:42:17,237", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:42:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:44:18,127", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:44:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:45:16,384", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:45:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:46:17,177", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:46:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:47:16,418", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:47:16] "GET / HTTP/1.1" 404 4431
[09/May/2025 10:47:18] code 400, message Bad request syntax ('nil')
[09/May/2025 10:47:18] "nil" 400 -
[09/May/2025 10:47:18,663] - Broken pipe from ('47.236.251.113', 41126)
{"asctime": "2025-05-09 10:47:19,225", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:47:19] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-09 10:47:19,598", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:47:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:47:19,971", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[09/May/2025 10:47:19] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-09 10:48:16,970", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:48:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:49:16,837", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:49:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:50:18,089", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:50:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:51:20,377", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:51:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:52:16,586", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:52:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:53:20,009", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:53:20] "GET / HTTP/1.1" 404 4431
[09/May/2025 10:54:36] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[09/May/2025 10:54:36] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-09 10:54:42,865", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:54:42] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:55:17,434", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:55:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:55:22,457", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[09/May/2025 10:55:22] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-09 10:56:17,261", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:56:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:56:42,754", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[09/May/2025 10:56:42] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-05-09 10:56:44,733", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[09/May/2025 10:56:44] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-05-09 10:56:47,556", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:56:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:57:24,811", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:57:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 10:59:18,774", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 10:59:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:01:19,297", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:01:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:02:17,942", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:02:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:03:18,633", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:03:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:04:17,868", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:04:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:06:25,249", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:06:25] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:08:17,792", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:08:17] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:09:18,886", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:09:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:11:32,998", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:11:32] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:13:18,633", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:13:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:15:33,338", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:15:33] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:17:18,547", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:17:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:18:21,587", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:18:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:19:18,501", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:19:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:20:18,919", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:20:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:21:18,945", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:21:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:22:19,751", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:22:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:23:21,844", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:23:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:25:20,348", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:25:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:26:19,861", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:26:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:28:19,857", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:28:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:29:19,017", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:29:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:30:19,687", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:30:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:31:26,920", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:31:26] "GET / HTTP/1.1" 404 4431
[09/May/2025 11:32:45,490] - Broken pipe from ('45.79.207.129', 53052)
{"asctime": "2025-05-09 11:32:45,700", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:32:45] "GET / HTTP/1.1" 404 4426
[09/May/2025 11:32:45,953] - Broken pipe from ('45.79.207.129', 53053)
{"asctime": "2025-05-09 11:33:26,840", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:33:26] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:35:19,622", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:35:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:36:20,981", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:36:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:38:21,111", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:38:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:40:20,364", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:40:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:41:20,477", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:41:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:42:19,995", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:42:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:43:23,826", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:43:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:45:20,500", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:45:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:47:22,332", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:47:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:48:20,656", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:48:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:49:21,039", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:49:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:51:20,543", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:51:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:53:35,542", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:53:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:55:20,939", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:55:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:56:22,399", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:56:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 11:58:22,137", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 11:58:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:00:22,379", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:00:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:01:22,246", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:01:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:03:21,727", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:03:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:04:36,258", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:04:36] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:06:22,657", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:06:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:08:24,815", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:08:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:09:21,813", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:09:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:10:29,094", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:10:29] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:12:22,720", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:12:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:13:22,039", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:13:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:14:22,485", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:14:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:15:22,635", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:15:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:17:22,398", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:17:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:19:23,766", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:19:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:20:22,561", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:20:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:21:02,545", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[09/May/2025 12:21:02] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-09 12:21:23,715", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:21:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:22:22,631", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:22:22] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:24:37,954", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:24:37] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:26:24,206", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:26:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:28:23,470", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:28:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:29:23,340", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:29:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:30:23,122", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:30:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:32:26,634", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:32:26] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:34:27,674", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:34:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:37:38,471", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:37:38] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:39:23,910", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:39:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:40:23,922", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:40:23] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:41:31,306", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:41:31] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:43:24,365", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:43:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:44:27,372", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:44:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 12:47:39,340", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 12:47:39] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 14:00:48,254", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /playlist.m3u", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: HEAD '/playlist.m3u'>"}
[09/May/2025 14:00:48] "HEAD /playlist.m3u HTTP/1.1" 404 0
{"asctime": "2025-05-09 14:49:36,912", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[09/May/2025 14:49:36] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-09 16:34:45,662", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 16:34:45] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 17:05:30,572", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 17:05:30] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-09 17:23:28,183", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[09/May/2025 17:23:28] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-09 17:46:45,748", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 17:46:45] "GET / HTTP/1.1" 404 4431
[09/May/2025 17:46:47] code 505, message Invalid HTTP version (2.0)
[09/May/2025 17:46:47] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-09 17:46:55,322", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[09/May/2025 17:46:55] "GET /favicon.ico HTTP/1.1" 404 4482
[09/May/2025 17:46:56] code 400, message Bad request version ('À\x14À')
[09/May/2025 17:46:56] You're accessing the development server over HTTPS, but it only supports HTTP.
[09/May/2025 23:04:20] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03.ÎÞ?&4·«\x9f\x86It´®\x83ÛÙ\\OétÀ\x1a')
[09/May/2025 23:04:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[09/May/2025 23:59:29] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03üVS\x11g\x96\x11\x88c°BF*E¨Æ<"\x15\x80nÿËWJ£\x9b3R\x08ßq\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[09/May/2025 23:59:29] You're accessing the development server over HTTPS, but it only supports HTTP.
[09/May/2025 23:59:29] code 400, message Bad request version ('À\x14À')
[09/May/2025 23:59:29] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-09 23:59:29,944", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[09/May/2025 23:59:29] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-09 23:59:30,021", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[09/May/2025 23:59:30] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-10 01:05:33,459", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[10/May/2025 01:05:33] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-10 03:29:39,073", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[10/May/2025 03:29:39] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-10 07:08:11,937", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 07:08:11] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-10 07:30:53,490", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 07:30:53] "GET / HTTP/1.1" 404 4431
[10/May/2025 07:34:58] code 400, message Bad request version ('À\x14À')
[10/May/2025 07:34:58] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 07:35:39] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03>å-QWPB0ü\\Fc\x18áþ1«\x9eåÄLÊÆgÿsä\x8d¡æÕÊ\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[10/May/2025 07:35:39] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 07:36:14] code 400, message Bad request syntax ('SSH-2.0-Go')
[10/May/2025 07:36:14] "SSH-2.0-Go" 400 -
{"asctime": "2025-05-10 08:59:47,008", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 08:59:47] "GET / HTTP/1.1" 404 4431
[10/May/2025 08:59:47,039] - Broken pipe from ('34.38.98.122', 33536)
{"asctime": "2025-05-10 09:47:21,380", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 09:47:21] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-10 09:48:16,576", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[10/May/2025 09:48:16] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-10 09:48:21,256", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[10/May/2025 09:48:21] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
[10/May/2025 10:45:26] code 400, message Bad request version ('îSö¡O\x0e\x98;\x18"éÑ³\x8cD\x93¼\x1b\x1aHÚñ9\x9bÊêÂ\x00\x00*À,À+À0À/\x00\x9f\x00\x9eÀ$À#À(À\'À')
[10/May/2025 10:45:26] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 10:45:27] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x03\x00\x8e\x01\x00\x00\x8a\x03\x03h')
[10/May/2025 10:45:27] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 12:49:38] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03NE\x7f\\ùÌ²¿ÑP¬èxÎ\x11\x07÷ì\x9cÇä6\x13\x89y^Ôk\x0e(9±\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[10/May/2025 12:49:38] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 12:49:38] code 400, message Bad request version ('À\x14À')
[10/May/2025 12:49:38] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-10 12:49:38,833", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 12:49:38] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-10 12:49:39,163", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[10/May/2025 12:49:39] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-10 13:13:48,785", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[10/May/2025 13:13:48] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-10 13:39:51,166", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 13:39:51] "GET / HTTP/1.1" 404 4431
[10/May/2025 13:39:54,306] - Broken pipe from ('147.185.132.30', 59080)
[10/May/2025 15:04:15] code 400, message Bad HTTP/0.9 request type ('\x00\x00\x00')
[10/May/2025 15:04:15] "    c                           " 400 -
{"asctime": "2025-05-10 15:44:49,379", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[10/May/2025 15:44:49] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[10/May/2025 15:50:12] code 400, message Bad request syntax ('JDWP-Handshake')
[10/May/2025 15:50:12] "JDWP-Handshake" 400 -
{"asctime": "2025-05-10 17:49:37,232", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 17:49:37] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-10 18:20:40,568", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 18:20:40] "GET / HTTP/1.1" 404 4431
[10/May/2025 19:14:59] code 400, message Bad request version ('À\x14À')
[10/May/2025 19:14:59] You're accessing the development server over HTTPS, but it only supports HTTP.
[10/May/2025 19:14:59] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03É\x90è3\x17û¶®a²8}\x81g\x06\x9cQ-Õ:0ù:W\x14\x04Xù\x05ËÏ\x86\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[10/May/2025 19:14:59] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-10 19:14:59,755", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 19:14:59] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-10 19:15:00,244", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[10/May/2025 19:15:00] "GET /login HTTP/1.1" 404 4464
[10/May/2025 20:01:39] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[10/May/2025 20:01:39] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-10 20:48:56,883", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[10/May/2025 20:48:56] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[10/May/2025 21:31:30] code 400, message Bad request version ('À\x13À')
[10/May/2025 21:31:30] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-10 21:31:30,403", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[10/May/2025 21:31:30] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-11 00:32:38,999", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 00:32:38] "GET / HTTP/1.1" 404 4431
[11/May/2025 00:32:43] code 505, message Invalid HTTP version (2.0)
[11/May/2025 00:32:43] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-11 00:32:58,339", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[11/May/2025 00:32:58] "GET /favicon.ico HTTP/1.1" 404 4482
[11/May/2025 00:32:59] code 400, message Bad request version ('À\x14À')
[11/May/2025 00:32:59] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-11 02:05:36,119", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 02:05:36] "GET / HTTP/1.1" 404 4431
[11/May/2025 03:00:42] code 400, message Bad request version ('À\x14À')
[11/May/2025 03:00:42] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-11 03:15:45,713", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /_ignition/execute-solution", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/_ignition/execute-solution'>"}
[11/May/2025 03:15:45] "POST /_ignition/execute-solution HTTP/1.1" 404 4528
{"asctime": "2025-05-11 04:28:44,512", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[11/May/2025 04:28:44] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-11 05:23:50,094", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 05:23:50] "GET / HTTP/1.1" 404 4431
[11/May/2025 06:49:00] code 400, message Bad request syntax ('\x16\x03\x01\x00ò\x01\x00\x00î\x03\x03Mq\x10ú\x9dÝ/9êÕÑÚÏXÑù}\x05\x89yIoÔ°\x03;L*6\x18ÍS\x00\x00\x82À0À,À(À$À\x14À')
[11/May/2025 06:49:00] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-11 06:53:20,742", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[11/May/2025 06:53:20] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-11 07:23:57,843", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 07:23:57] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-11 08:44:13,652", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 08:44:13] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 08:44:15,632", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 08:44:15] "GET / HTTP/1.1" 404 4431
[11/May/2025 08:49:20] code 400, message Bad request version ('À\x14À')
[11/May/2025 08:49:20] You're accessing the development server over HTTPS, but it only supports HTTP.
[11/May/2025 08:49:46] code 400, message Bad request syntax ('SSH-2.0-Go')
[11/May/2025 08:49:46] "SSH-2.0-Go" 400 -
{"asctime": "2025-05-11 09:24:31,020", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[11/May/2025 09:24:31] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-11 10:25:52,910", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /.env", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/.env'>"}
[11/May/2025 10:25:52] "GET /.env HTTP/1.1" 404 4461
{"asctime": "2025-05-11 11:51:27,845", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 11:51:27] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 11:51:41,565", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[11/May/2025 11:51:41] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-11 11:51:45,610", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[11/May/2025 11:51:45] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-11 11:56:15,162", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[11/May/2025 11:56:15] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-11 13:09:22,870", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 13:09:22] "GET / HTTP/1.1" 404 4431
[11/May/2025 13:09:22,905] - Broken pipe from ('8.211.51.235', 17120)
{"asctime": "2025-05-11 13:09:35,381", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 13:09:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 14:10:19,805", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 14:10:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 14:10:20,489", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[11/May/2025 14:10:20] "GET /favicon.ico HTTP/1.1" 404 4482
[11/May/2025 14:10:32] "GET /swagger HTTP/1.1" 301 0
[11/May/2025 14:10:32] "GET /swagger/ HTTP/1.1" 200 1627
[11/May/2025 14:10:33] "GET /static/drf-yasg/style.css HTTP/1.1" 200 1047
[11/May/2025 14:10:33] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1" 200 145206
[11/May/2025 14:10:33] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[11/May/2025 14:10:33] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[11/May/2025 14:10:33] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[11/May/2025 14:10:34] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
[11/May/2025 14:10:34] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[11/May/2025 14:10:34] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[11/May/2025 14:10:35] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[11/May/2025 14:10:36] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
[11/May/2025 14:10:36] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
{"asctime": "2025-05-11 14:10:38,259", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,260", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,261", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,262", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,263", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,265", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,265", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,266", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:38,268", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[11/May/2025 14:10:38] "GET /static/drf-yasg/swagger-ui-dist/favicon-32x32.png HTTP/1.1" 200 628
[11/May/2025 14:10:38] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-05-11 14:10:39,088", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,089", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,090", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,091", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,092", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,094", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,094", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,096", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-11 14:10:39,097", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[11/May/2025 14:10:39] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
[11/May/2025 14:10:51] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
[11/May/2025 15:04:10] code 400, message Bad request version ('À\x14À')
[11/May/2025 15:04:10] You're accessing the development server over HTTPS, but it only supports HTTP.
[11/May/2025 15:04:10] code 400, message Bad request version ('À\x14À')
[11/May/2025 15:04:10] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-11 15:04:10,669", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 15:04:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 15:04:10,985", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[11/May/2025 15:04:10] "GET /login HTTP/1.1" 404 4464
[11/May/2025 16:41:28] code 400, message Bad request syntax ('nil')
[11/May/2025 16:41:28] "nil" 400 -
{"asctime": "2025-05-11 17:19:46,785", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 17:19:46] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 19:31:07,061", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[11/May/2025 19:31:07] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-11 22:31:55,650", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 22:31:55] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-11 22:34:01,539", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[11/May/2025 22:34:01] "GET / HTTP/1.0" 404 4462
{"asctime": "2025-05-12 02:08:30,129", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 02:08:30] "GET / HTTP/1.1" 404 4426
[12/May/2025 02:08:30,316] - Broken pipe from ('118.193.36.107', 47262)
[12/May/2025 02:08:30] code 400, message Bad request version ('À\x13À')
[12/May/2025 02:08:30] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 02:08:30] code 400, message Bad HTTP/0.9 request type ('t3')
[12/May/2025 02:08:30] "t3 12.1.2" 400 -
{"asctime": "2025-05-12 02:09:19,127", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 02:09:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-12 02:09:19,477", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[12/May/2025 02:09:19] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-12 02:09:19,803", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[12/May/2025 02:09:19] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-05-12 02:09:19,818", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[12/May/2025 02:09:19] "GET /sitemap.xml HTTP/1.1" 404 4482
[12/May/2025 05:00:08] code 400, message Bad request syntax ('\x01\x01æ')
[12/May/2025 05:00:08] "æ" 400 -
{"asctime": "2025-05-12 05:29:35,910", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 05:29:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-12 05:29:53,087", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[12/May/2025 05:29:53] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-12 05:29:57,747", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[12/May/2025 05:29:57] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-12 05:30:00,951", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[12/May/2025 05:30:00] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
[12/May/2025 05:30:06] code 400, message Bad request version ('À\x14À')
[12/May/2025 05:30:06] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-12 06:31:52,956", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 06:31:52] "GET / HTTP/1.1" 404 4431
[12/May/2025 07:07:27,812] - Broken pipe from ('206.168.34.192', 52512)
{"asctime": "2025-05-12 07:07:31,456", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 07:07:31] "GET / HTTP/1.1" 404 4431
[12/May/2025 07:07:32,240] - Broken pipe from ('206.168.34.192', 40998)
{"asctime": "2025-05-12 07:07:39,269", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 07:07:39] "GET / HTTP/1.1" 404 4431
[12/May/2025 07:07:43] code 505, message Invalid HTTP version (2.0)
[12/May/2025 07:07:43] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-12 07:07:58,608", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[12/May/2025 07:07:58] "GET /favicon.ico HTTP/1.1" 404 4482
[12/May/2025 07:08:00] code 400, message Bad request version ('À\x14À')
[12/May/2025 07:08:00] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-12 07:39:17,927", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 07:39:17] "GET / HTTP/1.0" 404 4426
[12/May/2025 08:43:23] code 400, message Bad request version ('À\x13À')
[12/May/2025 08:43:23] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 08:43:23] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00Ê\x01\x00\x00Æ\x03\x03ú\x88"{>Ú\x16flôj\x84Â\x87Y[\x92Z;hQ\x8a\x82kâJõ\x9c\x84S¶G\x00\x00hÌ\x14Ì\x13À/À+À0À,À\x11À\x07À\'À#À\x13À')
[12/May/2025 08:43:23] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 09:28:22,516] - Broken pipe from ('206.168.34.60', 59450)
[12/May/2025 09:28:25] code 400, message Bad request version ('À\x14À')
[12/May/2025 09:28:25] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 09:28:41,188] - Broken pipe from ('206.168.34.60', 33864)
[12/May/2025 09:29:02] code 400, message Bad request syntax ('ZG\x00\x00\x00\x05\x00+\x0e\x01\x00')
[12/May/2025 09:29:02] "ZG    + " 400 -
{"asctime": "2025-05-12 10:20:27,570", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 10:20:27] "GET / HTTP/1.1" 404 4431
[12/May/2025 10:23:52] code 400, message Bad request version ('À\x14À')
[12/May/2025 10:23:52] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 10:26:21] code 400, message Bad request syntax ('SSH-2.0-Go')
[12/May/2025 10:26:21] "SSH-2.0-Go" 400 -
[12/May/2025 10:28:24] code 400, message Bad request version ('À\x14À')
[12/May/2025 10:28:24] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 10:36:23] code 400, message Bad request version ('À\x14À')
[12/May/2025 10:36:23] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 10:36:24] code 400, message Bad request version ('À\x14À')
[12/May/2025 10:36:24] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-12 10:36:24,498", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 10:36:24] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-12 10:36:25,006", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[12/May/2025 10:36:25] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-12 11:27:56,382", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[12/May/2025 11:27:56] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[12/May/2025 12:04:39] code 400, message Bad request version ('ïâT¸')
[12/May/2025 12:04:39] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-12 12:04:42,427", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 12:04:42] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-12 12:17:12,006", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[12/May/2025 12:17:12] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-12 13:39:37,036", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 13:39:37] "GET / HTTP/1.1" 404 4431
[12/May/2025 13:39:44,299] - Broken pipe from ('205.210.31.228', 60784)
[12/May/2025 14:52:58] code 400, message Bad request version ('À\x13À')
[12/May/2025 14:52:58] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 14:53:10] code 400, message Bad request version ('À\x13À')
[12/May/2025 14:53:10] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 14:53:10] code 400, message Bad request version ('À\x13À')
[12/May/2025 14:53:10] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-12 14:53:10,500", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 14:53:10] "GET / HTTP/1.1" 404 4431
[12/May/2025 17:00:04] code 400, message Bad request syntax ('\x00\x00\x00àZ\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x05\x01=K\x00\x00\x01\x01T\x02I')
[12/May/2025 17:00:04] "   àZ          =K  TI" 400 -
[12/May/2025 19:25:30] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
{"asctime": "2025-05-12 19:25:31,970", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-12 19:25:31,971", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[12/May/2025 19:25:31] "POST /api/v1/users/login/ HTTP/1.1" 404 55
[12/May/2025 20:04:12] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[12/May/2025 20:04:13] "POST /api/v1/users/login/ HTTP/1.1" 200 702
{"asctime": "2025-05-12 20:04:20,110", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 89, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-12 20:04:20,111", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[12/May/2025 20:04:20] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-05-12 20:05:05,620", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[12/May/2025 20:05:05] "POST /api/v1/users/ HTTP/1.1" 422 160
{"asctime": "2025-05-12 20:05:09,651", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unprocessable Entity: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 422, "request": "<WSGIRequest: POST '/api/v1/users/'>"}
[12/May/2025 20:05:09] "POST /api/v1/users/ HTTP/1.1" 422 160
[12/May/2025 20:05:21] "POST /api/v1/users/login/ HTTP/1.1" 200 702
[12/May/2025 20:05:24] "GET /api/v1/hospitals/ HTTP/1.1" 200 329
[12/May/2025 20:05:31] "POST /api/v1/users/ HTTP/1.1" 201 569
[12/May/2025 20:05:59] "POST /api/v1/users/ HTTP/1.1" 201 570
[12/May/2025 20:39:31,908] - Broken pipe from ('199.45.155.111', 43740)
{"asctime": "2025-05-12 20:39:35,500", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 20:39:35] "GET / HTTP/1.1" 404 4431
[12/May/2025 20:39:35,848] - Broken pipe from ('199.45.155.111', 44302)
{"asctime": "2025-05-12 20:39:41,766", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[12/May/2025 20:39:41] "GET / HTTP/1.1" 404 4431
[12/May/2025 20:39:42] code 505, message Invalid HTTP version (2.0)
[12/May/2025 20:39:42] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-12 20:39:46,618", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[12/May/2025 20:39:46] "GET /favicon.ico HTTP/1.1" 404 4482
[12/May/2025 20:39:47] code 400, message Bad request version ('`\x9dü¿\x86')
[12/May/2025 20:39:47] You're accessing the development server over HTTPS, but it only supports HTTP.
[12/May/2025 20:43:22] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[12/May/2025 20:43:42] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[12/May/2025 20:43:54] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[12/May/2025 20:43:54] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[12/May/2025 20:43:55] "GET /api/v1/users/profile/ HTTP/1.1" 200 595
[12/May/2025 20:44:10] "OPTIONS /api/v1/appointments/?doctor=6b83a603-2349-412c-8d15-3c38003de905&search=&disease=&appointment_date=&limit=10&offset=1 HTTP/1.1" 200 0
[12/May/2025 20:44:11] "GET /api/v1/appointments/?doctor=6b83a603-2349-412c-8d15-3c38003de905&search=&disease=&appointment_date=&limit=10&offset=1 HTTP/1.1" 200 240
[12/May/2025 20:51:24] "GET /api/v1/appointments/?doctor=6b83a603-2349-412c-8d15-3c38003de905&search=&disease=&appointment_date=&limit=10&offset=1 HTTP/1.1" 200 240
{"asctime": "2025-05-13 00:21:13,311", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 00:21:13] "GET / HTTP/1.0" 404 4462
[13/May/2025 00:21:19] code 400, message Bad HTTP/0.9 request type ('l\x00')
[13/May/2025 00:21:19] "l          " 400 -
{"asctime": "2025-05-13 00:21:19,607", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /nice ports,/Trinity.txt.bak", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/nice%20ports,/Trinity.txt.bak'>"}
[13/May/2025 00:21:19] "GET /nice%20ports%2C/Tri%6Eity.txt%2ebak HTTP/1.0" 404 4563
[13/May/2025 00:21:20] code 400, message Bad request syntax ('\x05\x04\x00\x01\x02\x80\x05\x01\x00\x03')
[13/May/2025 00:21:20] "  " 400 -
[13/May/2025 00:21:26] code 400, message Bad request syntax ('\x04\x01\x00\x16\x7f\x00\x00\x01root\x00')
[13/May/2025 00:21:26] "   root " 400 -
{"asctime": "2025-05-13 00:21:26,716", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: OPTIONS '/'>"}
[13/May/2025 00:21:26] "OPTIONS / HTTP/1.0" 404 4466
[13/May/2025 00:21:27] code 400, message Bad request version ('RTSP/1.0')
[13/May/2025 00:21:27] "OPTIONS / RTSP/1.0" 400 -
[13/May/2025 00:21:33] code 400, message Bad request version ('\x00\x01\x97|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
[13/May/2025 00:21:33] "  (rþ          |                    " 400 -
[13/May/2025 00:21:38] code 400, message Bad HTTP/0.9 request type ('\x00')
[13/May/2025 00:21:38] "          versionbind   " 400 -
[13/May/2025 00:21:44] code 400, message Bad HTTP/0.9 request type ('\x00')
[13/May/2025 00:21:44] "            " 400 -
[13/May/2025 00:21:44] code 400, message Bad request syntax ('HELP')
[13/May/2025 00:21:44] "HELP" 400 -
[13/May/2025 00:21:45] code 400, message Bad request syntax ('\x16\x03\x00\x00S\x01\x00\x00O\x03\x00?G×÷º,îê²`~ó\x00ý\x82{¹Õ\x96Èw\x9bæÄÛ<=Ûoï\x10n\x00\x00(\x00\x16\x00\x13\x00')
[13/May/2025 00:21:45] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 00:21:46] code 400, message Bad request version ('\x00/\x00')
[13/May/2025 00:21:46] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 00:21:47] code 400, message Bad request syntax ('\x00\x00\x00qj\x81n0\x81k¡\x03\x02\x01\x05¢\x03\x02\x01')
[13/May/2025 00:21:47] "   qjn0k¡¢" 400 -
[13/May/2025 00:21:52] code 400, message Bad request version ('0.12\x00')
[13/May/2025 00:21:52] "   ¤ÿSMBr    @              @     PC NETWORK PROGRAM 1.0 MICROSOFT NETWORKS 1.03 MICROSOFT NETWORKS 3.0 LANMAN1.0 LM1.2X002 Samba NT LANMAN 1.0 NT LM 0.12 " 400 -
[13/May/2025 00:21:53] code 400, message Bad request syntax ('\x01default')
[13/May/2025 00:21:53] "default" 400 -
[13/May/2025 00:21:54] code 400, message Bad request syntax ('0\x84\x00\x00\x00-\x02\x01\x07c\x84\x00\x00\x00$\x04\x00')
[13/May/2025 00:21:54] "0   -c   $ " 400 -
[13/May/2025 00:21:59] code 400, message Bad HTTP/0.9 request type ('0')
[13/May/2025 00:21:59] "0`  " 400 -
[13/May/2025 00:22:00] code 400, message Bad request version ('SIP/2.0')
[13/May/2025 00:22:00] "OPTIONS sip:nm SIP/2.0" 400 -
[13/May/2025 00:22:06] code 400, message Bad request syntax ('TNMP\x04\x00\x00\x00TNME\x00\x00\x04\x00')
[13/May/2025 00:22:06] "TNMP   TNME   " 400 -
{"asctime": "2025-05-13 02:34:17,423", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 02:34:17] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-13 05:08:38,575", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 05:08:38] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-13 05:46:15,922", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 05:46:15] "GET / HTTP/1.0" 404 4431
{"asctime": "2025-05-13 06:09:21,517", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 06:09:21] "GET / HTTP/1.1" 404 4431
[13/May/2025 06:22:10] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03á\x00Øó\x1a¿\x1bÖ\x9ahl\x01¶')
[13/May/2025 06:22:10] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 06:22:10] code 400, message Bad request version ('À\x14À')
[13/May/2025 06:22:10] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-13 06:22:10,996", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 06:22:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 06:22:11,528", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[13/May/2025 06:22:11] "GET /login HTTP/1.1" 404 4464
[13/May/2025 06:47:43] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03(\x123â\x9d|\\ò\x81#\xad\x8f0µkó;\x98£\x84\x9d°Ñ\x81WÇ`\x8fD[\xadF\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[13/May/2025 06:47:43] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-13 07:35:58,703", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 07:35:58] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-13 07:55:57,056", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 07:55:57] "GET / HTTP/1.0" 404 4426
[13/May/2025 09:32:30] "GET /swagger/ HTTP/1.1" 200 1627
[13/May/2025 09:32:31] "GET /static/drf-yasg/style.css HTTP/1.1" 200 1047
[13/May/2025 09:32:31] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1" 200 145206
[13/May/2025 09:32:31] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[13/May/2025 09:32:31] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[13/May/2025 09:32:31] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[13/May/2025 09:32:32] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
[13/May/2025 09:32:33] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
{"asctime": "2025-05-13 09:32:35,522", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,524", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,525", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,526", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,527", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,529", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,529", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,530", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:35,532", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[13/May/2025 09:32:35] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-05-13 09:32:36,292", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,293", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,294", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationRecordingAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 109, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,295", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,296", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,298", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,298", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's ConsultationAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/consultation/views.py\", line 55, in get_queryset\n    user_hospital_id = user.hospital_id\n                       ^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,299", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's UserViewsetAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 364, in get_queryset\n    hospital_id=self.request.user.hospital_id, is_superuser=False\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'hospital_id'", "taskName": null}
{"asctime": "2025-05-13 09:32:36,301", "module": "base", "funcName": "call_view_method", "name": "drf_yasg.inspectors.base", "levelname": "WARNING", "message": "view's AppointmentAPI raised exception during schema generation; use `getattr(self, 'swagger_fake_view', False)` to detect and short-circuit this", "exc_text": null, "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/drf_yasg/inspectors/base.py\", line 42, in call_view_method\n    return view_method()\n           ^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/appointments/views.py\", line 44, in get_queryset\n    if user.role == RoleType.hospital_admin.value[0]:\n       ^^^^^^^^^\nAttributeError: 'AnonymousUser' object has no attribute 'role'", "taskName": null}
[13/May/2025 09:32:36] "GET /swagger/?format=openapi HTTP/1.1" 200 65127
{"asctime": "2025-05-13 09:55:51,929", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 09:55:51] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-13 11:13:46,662", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 11:13:46] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-13 12:42:17,427", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 12:42:17] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[13/May/2025 13:39:07] code 400, message Bad request syntax ('nil')
[13/May/2025 13:39:07] "nil" 400 -
{"asctime": "2025-05-13 13:39:08,803", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 13:39:08] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-13 13:39:10,335", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 13:39:10] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 13:39:10,801", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[13/May/2025 13:39:10] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-13 13:41:29,037", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 13:41:29] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-13 15:06:45,925", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[13/May/2025 15:06:45] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[13/May/2025 15:20:19] code 400, message Bad request version ('À\x14À')
[13/May/2025 15:20:19] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-13 15:20:20,182", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sse", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sse'>"}
[13/May/2025 15:20:20] "GET /sse HTTP/1.0" 404 4489
[13/May/2025 15:51:13] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[13/May/2025 15:51:13] "MGLNDD_51.20.181.176_8000" 400 -
[13/May/2025 17:01:24] code 400, message Bad request version ('À\x14À')
[13/May/2025 17:01:24] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 17:01:24] code 400, message Bad request version ('À\x14À')
[13/May/2025 17:01:24] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-13 17:01:25,478", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 17:01:25] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 17:01:26,267", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[13/May/2025 17:01:26] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-13 17:16:33,952", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v2/heartbeat", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v2/heartbeat'>"}
[13/May/2025 17:16:33] "GET /api/v2/heartbeat HTTP/1.1" 404 4497
{"asctime": "2025-05-13 17:16:35,040", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 17:16:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 17:25:26,882", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 17:25:26] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 17:25:27,685", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[13/May/2025 17:25:27] "GET /favicon.ico HTTP/1.1" 404 4482
[13/May/2025 17:25:34] code 400, message Bad request version ('ÖÖP$Ê')
[13/May/2025 17:25:34] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 17:25:34] code 400, message Bad request version ('À\x13À')
[13/May/2025 17:25:34] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-13 18:34:06,036", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 18:34:06] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-13 18:34:06,112", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[13/May/2025 18:34:06] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-05-13 19:02:57,315", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 19:02:57] "GET / HTTP/1.1" 404 4431
[13/May/2025 19:02:57,426] - Broken pipe from ('147.185.132.144', 61492)
{"asctime": "2025-05-13 19:13:42,566", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 19:13:42] "GET / HTTP/1.1" 404 4426
[13/May/2025 19:13:42,716] - Broken pipe from ('165.154.41.56', 51756)
[13/May/2025 19:13:42] code 400, message Bad request syntax ('\x16\x03\x01\x00ò\x01\x00\x00î\x03\x03&îtgÆÅ')
[13/May/2025 19:13:42] You're accessing the development server over HTTPS, but it only supports HTTP.
[13/May/2025 19:13:43] code 400, message Bad HTTP/0.9 request type ('t3')
[13/May/2025 19:13:43] "t3 12.1.2" 400 -
{"asctime": "2025-05-13 19:14:16,930", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 19:14:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-13 19:14:17,387", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[13/May/2025 19:14:17] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-13 19:14:17,815", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[13/May/2025 19:14:17] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-05-13 19:14:17,849", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[13/May/2025 19:14:17] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-05-13 23:34:31,385", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[13/May/2025 23:34:31] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 00:20:43,757", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 00:20:43] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 01:35:48,691", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 01:35:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 01:36:39,327", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 01:36:39] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-14 01:37:00,848", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[14/May/2025 01:37:00] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-14 01:37:23,071", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[14/May/2025 01:37:23] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-05-14 02:10:56,663", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 02:10:56] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 02:13:01,173", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 02:13:01] "GET / HTTP/1.1" 404 4431
[14/May/2025 02:15:29] code 400, message Bad request version ('À\x14À')
[14/May/2025 02:15:29] You're accessing the development server over HTTPS, but it only supports HTTP.
[14/May/2025 02:19:06] code 400, message Bad request syntax ('SSH-2.0-Go')
[14/May/2025 02:19:06] "SSH-2.0-Go" 400 -
[14/May/2025 02:19:46] code 400, message Bad request version ('À\x14À')
[14/May/2025 02:19:46] You're accessing the development server over HTTPS, but it only supports HTTP.
[14/May/2025 02:19:47] code 400, message Bad request version ('À\x14À')
[14/May/2025 02:19:47] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 02:19:47,444", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 02:19:47] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 02:19:48,048", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[14/May/2025 02:19:48] "GET /login HTTP/1.1" 404 4464
[14/May/2025 02:19:54] code 400, message Bad request version ('À\x14À')
[14/May/2025 02:19:54] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 03:23:01,770", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api.ip.pn:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/api.ip.pn:443'>"}
[14/May/2025 03:23:01] "CONNECT api.ip.pn:443 HTTP/1.1" 404 1842
[14/May/2025 03:23:11] code 400, message Bad request syntax ('\x05\x01\x00')
[14/May/2025 03:23:11] " " 400 -
{"asctime": "2025-05-14 04:27:49,282", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[14/May/2025 04:27:49] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-14 04:45:35,263", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 04:45:35] "GET / HTTP/1.1" 404 4431
[14/May/2025 04:45:44] code 505, message Invalid HTTP version (2.0)
[14/May/2025 04:45:44] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-14 04:46:06,116", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 04:46:06] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-14 06:15:07,098", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 06:15:07] "GET / HTTP/1.0" 404 4462
{"asctime": "2025-05-14 06:15:07,458", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 06:15:07] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 06:15:07,818", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 06:15:07] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-14 07:04:51,892", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[14/May/2025 07:04:51] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-14 07:07:19,413", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 07:07:19] "GET / HTTP/1.1" 404 4431
[14/May/2025 07:17:59] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x15\x88èk\x9cÑ\x13´\x19/ô+)k,G1H\x8amº¤0ï\x07X\x00\x16Ýä]C\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[14/May/2025 07:17:59] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 07:18:00,031", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /mcp/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/mcp/'>"}
[14/May/2025 07:18:00] "POST /mcp/ HTTP/1.1" 404 4462
{"asctime": "2025-05-14 14:44:31,652", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 14:44:31] "GET / HTTP/1.0" 404 4426
[14/May/2025 15:46:11] code 400, message Bad request version ('À#À¬À®À+À')
[14/May/2025 15:46:11] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 15:46:16,553", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 15:46:16] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 15:59:45,943", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 15:59:45] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-14 17:13:29,091", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[14/May/2025 17:13:29] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-14 19:36:05,958", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[14/May/2025 19:36:05] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-14 19:38:22,548", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 19:38:22] "GET / HTTP/1.1" 404 4431
[14/May/2025 19:38:23,020] - Broken pipe from ('167.94.138.179', 54132)
{"asctime": "2025-05-14 19:38:29,964", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 19:38:29] "GET / HTTP/1.1" 404 4431
[14/May/2025 19:38:33] code 505, message Invalid HTTP version (2.0)
[14/May/2025 19:38:33] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-14 19:38:39,661", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 19:38:39] "GET /favicon.ico HTTP/1.1" 404 4482
[14/May/2025 19:38:40] code 400, message Bad request version ('À\x14À')
[14/May/2025 19:38:40] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 19:48:08,002", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 19:48:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 20:51:12,354", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/google.com:443'>"}
[14/May/2025 20:51:12] "CONNECT google.com:443 HTTP/1.1" 404 1846
{"asctime": "2025-05-14 20:57:14,762", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[14/May/2025 20:57:14] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-05-14 20:57:15,301", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[14/May/2025 20:57:15] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-05-14 20:57:15,897", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 20:57:15] "GET / HTTP/1.1" 404 4431
[14/May/2025 21:38:18,070] - Broken pipe from ('206.168.34.213', 54094)
{"asctime": "2025-05-14 21:38:21,374", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 21:38:21] "GET / HTTP/1.1" 404 4431
[14/May/2025 21:38:21,508] - Broken pipe from ('206.168.34.213', 54114)
{"asctime": "2025-05-14 21:38:24,979", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 21:38:24] "GET / HTTP/1.1" 404 4431
[14/May/2025 21:38:25] code 505, message Invalid HTTP version (2.0)
[14/May/2025 21:38:25] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-14 21:38:31,996", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[14/May/2025 21:38:31] "GET /favicon.ico HTTP/1.1" 404 4482
[14/May/2025 21:38:32] code 400, message Bad request syntax ('\x16\x03\x01\x00÷\x01\x00\x00ó\x03\x03V')
[14/May/2025 21:38:32] You're accessing the development server over HTTPS, but it only supports HTTP.
[14/May/2025 21:53:33] code 400, message Bad request version ('À\x14À')
[14/May/2025 21:53:33] You're accessing the development server over HTTPS, but it only supports HTTP.
[14/May/2025 21:53:34] code 400, message Bad request version ('À\x14À')
[14/May/2025 21:53:34] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-14 21:53:34,604", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[14/May/2025 21:53:34] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-14 21:53:35,093", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[14/May/2025 21:53:35] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-15 00:41:15,607", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[15/May/2025 00:41:15] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-15 00:41:31,324", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[15/May/2025 00:41:31] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-15 00:41:35,755", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /http:/api.ipify.org/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/http:/api.ipify.org/?format=json'>"}
[15/May/2025 00:41:35] "GET http://api.ipify.org/?format=json HTTP/1.1" 404 1873
{"asctime": "2025-05-15 00:41:38,906", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.shadowserver.org:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.shadowserver.org:443'>"}
[15/May/2025 00:41:38] "CONNECT www.shadowserver.org:443 HTTP/1.1" 404 1882
{"asctime": "2025-05-15 00:48:59,043", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[15/May/2025 00:48:59] "GET / HTTP/1.0" 404 4431
[15/May/2025 01:12:45] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[15/May/2025 01:12:45] "MGLNDD_51.20.181.176_8000" 400 -
[15/May/2025 02:03:41] code 400, message Bad request version ('\x00\x9eÌ¨Ìª\x003\x00=\x00\x16À')
[15/May/2025 02:03:41] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-15 02:03:52,183", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[15/May/2025 02:03:52] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-15 02:04:10,905", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[15/May/2025 02:04:10] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-15 02:04:11,577", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[15/May/2025 02:04:11] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-05-15 02:04:12,245", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[15/May/2025 02:04:12] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-05-15 03:15:24,160", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[15/May/2025 03:15:24] "GET / HTTP/1.1" 404 4431
[15/May/2025 03:16:11] code 400, message Bad HTTP/0.9 request type ("\x16\x03\x01\x00{\x01\x00\x00w\x03\x036°\x99\x92¶ßä'\x11Ñ=TE'üÊéJl0¼A,\x1aQ¿ïoÅ\x1bò\x1b\x00\x00\x1aÀ/À+À\x11À\x07À\x13À")
[15/May/2025 03:16:11] You're accessing the development server over HTTPS, but it only supports HTTP.
[15/May/2025 03:19:28] code 400, message Bad request version ('À\x14À')
[15/May/2025 03:19:28] You're accessing the development server over HTTPS, but it only supports HTTP.
[15/May/2025 03:19:34] code 400, message Bad request syntax ('SSH-2.0-Go')
[15/May/2025 03:19:34] "SSH-2.0-Go" 400 -
{"asctime": "2025-05-15 05:48:21,052", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[15/May/2025 05:48:21] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[15/May/2025 06:45:08] code 400, message Bad request version ('À#À¬À®À+À')
[15/May/2025 06:45:08] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-15 08:24:48,564", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[15/May/2025 08:24:48] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[15/May/2025 09:52:06] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[15/May/2025 09:52:07] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[15/May/2025 09:52:08] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[15/May/2025 09:52:08] "GET /api/v1/users/profile/ HTTP/1.1" 200 595
{"asctime": "2025-05-15 10:01:02,041", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[15/May/2025 10:01:02] "GET / HTTP/1.1" 404 4431
[15/May/2025 10:01:02] code 400, message Bad request version ('À\x13À')
[15/May/2025 10:01:02] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-17 18:20:53,454", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
[17/May/2025 18:25:46] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[17/May/2025 18:25:47] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[17/May/2025 18:25:47] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[17/May/2025 18:25:48] "GET /api/v1/users/profile/ HTTP/1.1" 200 595
[17/May/2025 18:39:41,401] - Broken pipe from ('199.45.154.153', 50734)
{"asctime": "2025-05-17 18:39:45,675", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[17/May/2025 18:39:45] "GET / HTTP/1.1" 404 4431
[17/May/2025 18:39:45,950] - Broken pipe from ('199.45.154.153', 53878)
{"asctime": "2025-05-17 18:39:49,381", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[17/May/2025 18:39:49] "GET / HTTP/1.1" 404 4431
[17/May/2025 18:39:50] code 505, message Invalid HTTP version (2.0)
[17/May/2025 18:39:50] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-17 18:39:54,164", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[17/May/2025 18:39:54] "GET /favicon.ico HTTP/1.1" 404 4482
[17/May/2025 18:39:55] code 400, message Bad request version ('À\x14À')
[17/May/2025 18:39:55] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-17 20:56:23,404", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[17/May/2025 20:56:23] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[17/May/2025 22:43:24] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[17/May/2025 22:43:24] "MGLNDD_51.20.181.176_8000" 400 -
[17/May/2025 23:25:19] code 400, message Bad request version ('À\x14À')
[17/May/2025 23:25:19] You're accessing the development server over HTTPS, but it only supports HTTP.
[17/May/2025 23:25:20] code 400, message Bad request version ('À\x14À')
[17/May/2025 23:25:20] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-17 23:25:20,529", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[17/May/2025 23:25:20] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-17 23:25:21,018", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[17/May/2025 23:25:21] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-17 23:30:39,204", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[17/May/2025 23:30:39] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-18 00:51:40,252", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 00:51:40] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 02:42:41,708", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 02:42:41] "GET / HTTP/1.1" 404 4431
[18/May/2025 02:42:45,072] - Broken pipe from ('147.185.132.225', 62336)
[18/May/2025 03:08:18,981] - Broken pipe from ('199.45.155.111', 58404)
{"asctime": "2025-05-18 03:08:22,272", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 03:08:22] "GET / HTTP/1.1" 404 4431
[18/May/2025 03:08:22,530] - Broken pipe from ('199.45.155.111', 58476)
{"asctime": "2025-05-18 03:08:25,883", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 03:08:25] "GET / HTTP/1.1" 404 4431
[18/May/2025 03:08:26] code 505, message Invalid HTTP version (2.0)
[18/May/2025 03:08:26] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-18 03:08:31,518", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[18/May/2025 03:08:31] "GET /favicon.ico HTTP/1.1" 404 4482
[18/May/2025 03:08:32] code 400, message Bad request version ('À\x14À')
[18/May/2025 03:08:32] You're accessing the development server over HTTPS, but it only supports HTTP.
[18/May/2025 05:04:56] code 400, message Bad HTTP/0.9 request type ('Z¥\x01')
[18/May/2025 05:04:56] "Z¥     " 400 -
[18/May/2025 06:16:50] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03ämaÊ¯]\xadÉÏûÇ=Q÷_Áþ\x1b\x104\x98³Ú\x99Ü\x9e\x1a{\x87iè<\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[18/May/2025 06:16:50] You're accessing the development server over HTTPS, but it only supports HTTP.
[18/May/2025 06:16:50] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x8eøÕ\x069\x95G\x1aÿÉ<\xadÂÏyôÙC:\xad\x99\x80t\x00ý<gkÛv\x8bà\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[18/May/2025 06:16:50] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-18 06:16:51,283", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 06:16:51] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 06:16:51,779", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[18/May/2025 06:16:51] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-18 07:08:11,038", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[18/May/2025 07:08:11] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[18/May/2025 07:31:28] code 400, message Bad request syntax ('JDWP-Handshake')
[18/May/2025 07:31:28] "JDWP-Handshake" 400 -
{"asctime": "2025-05-18 09:05:19,250", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 09:05:19] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 11:30:02,895", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 11:30:02] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 11:32:14,673", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 11:32:14] "GET / HTTP/1.1" 404 4431
[18/May/2025 11:34:28] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03"\x96OI·O4\x0f2àåõ>\x16o\x05ì¦t\x8er÷Â\x17òü³øã»\x03à\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[18/May/2025 11:34:28] You're accessing the development server over HTTPS, but it only supports HTTP.
[18/May/2025 11:36:24] code 400, message Bad request syntax ('SSH-2.0-Go')
[18/May/2025 11:36:24] "SSH-2.0-Go" 400 -
[18/May/2025 11:43:06,685] - Broken pipe from ('45.79.115.134', 50201)
{"asctime": "2025-05-18 11:43:06,917", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 11:43:06] "GET / HTTP/1.1" 404 4426
[18/May/2025 11:43:07,160] - Broken pipe from ('45.79.115.134', 50202)
{"asctime": "2025-05-18 12:11:35,899", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[18/May/2025 12:11:35] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-18 13:59:37,972", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 13:59:37] "GET / HTTP/1.0" 404 4462
{"asctime": "2025-05-18 13:59:38,193", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 13:59:38] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 13:59:38,416", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[18/May/2025 13:59:38] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-18 14:39:37,280", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[18/May/2025 14:39:37] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-18 17:12:13,584", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[18/May/2025 17:12:13] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-18 17:56:11,237", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "User Not Found", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 90, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 90, in create\n    raise APIException(_(\"User Not Found\"), code=status.HTTP_404_NOT_FOUND)\nrest_framework.exceptions.APIException: User Not Found", "taskName": null}
{"asctime": "2025-05-18 17:56:11,238", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[18/May/2025 17:56:11] "POST /api/v1/users/login/ HTTP/1.1" 404 55
{"asctime": "2025-05-18 19:39:47,853", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[18/May/2025 19:39:47] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[18/May/2025 20:08:01] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03¶\x88(9Qça¯p\x8cK\x04¿orai\x05X£>®\x91i\x82¯ËPÕ\x15JM\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[18/May/2025 20:08:01] You're accessing the development server over HTTPS, but it only supports HTTP.
[18/May/2025 21:18:32] code 400, message Bad request version ('À\x14À')
[18/May/2025 21:18:32] You're accessing the development server over HTTPS, but it only supports HTTP.
[18/May/2025 21:18:32] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03qi±²\x9a¼Ñä0#\x01;¹@nÒBÓÔã\x07®¾LkØD)ZxÑ\x03\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[18/May/2025 21:18:32] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-18 21:18:32,798", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[18/May/2025 21:18:32] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-18 21:18:33,137", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[18/May/2025 21:18:33] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-19 01:12:12,101", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/google.com:443'>"}
[19/May/2025 01:12:12] "CONNECT google.com:443 HTTP/1.1" 404 1846
[19/May/2025 01:17:51] code 400, message Bad request syntax ('JDWP-Handshake')
[19/May/2025 01:17:51] "JDWP-Handshake" 400 -
{"asctime": "2025-05-19 03:13:59,933", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[19/May/2025 03:13:59] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-19 05:53:01,318", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[19/May/2025 05:53:01] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[19/May/2025 06:12:45] code 400, message Bad request version ('À#À¬À®À+À')
[19/May/2025 06:12:45] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-19 06:12:48,828", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 06:12:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-19 06:26:07,130", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[19/May/2025 06:26:07] "GET /favicon.ico HTTP/1.1" 404 4482
[19/May/2025 06:46:35] code 400, message Bad request version ('\x00\x9eÌ¨Ìª\x003\x00=\x00\x16À')
[19/May/2025 06:46:35] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-19 06:46:46,477", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 06:46:46] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-19 06:47:05,159", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[19/May/2025 06:47:05] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-19 06:47:05,831", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[19/May/2025 06:47:05] "GET /robots.txt HTTP/1.1" 404 4479
{"asctime": "2025-05-19 06:47:06,511", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[19/May/2025 06:47:06] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-05-19 07:35:32,664", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /portal", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/portal'>"}
[19/May/2025 07:35:32] "POST /portal HTTP/1.1" 404 4468
{"asctime": "2025-05-19 08:20:04,215", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 08:20:04] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-19 08:20:04,534", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[19/May/2025 08:20:04] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-05-19 08:26:07,770", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[19/May/2025 08:26:07] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-19 09:20:10,786", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aaa9", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aaa9'>"}
[19/May/2025 09:20:10] "GET /aaa9 HTTP/1.1" 404 4461
{"asctime": "2025-05-19 09:20:11,152", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /aab8", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/aab8'>"}
[19/May/2025 09:20:11] "GET /aab8 HTTP/1.1" 404 4461
{"asctime": "2025-05-19 09:20:11,511", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 09:20:11] "GET / HTTP/1.1" 404 4431
[19/May/2025 10:14:22] code 400, message Bad request syntax ('JDWP-Handshake')
[19/May/2025 10:14:22] "JDWP-Handshake" 400 -
[19/May/2025 11:19:20] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[19/May/2025 11:19:22] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[19/May/2025 11:19:22] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[19/May/2025 11:19:23] "GET /api/v1/users/profile/ HTTP/1.1" 200 595
[19/May/2025 11:47:12] code 400, message Bad request syntax ('\x00\x00\x00TZ\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x10\x04\x00(Á\x00\x00\x00\x00\x0f\x02\x00')
[19/May/2025 11:47:12] "   TZ          (Á     " 400 -
[19/May/2025 12:25:49] code 400, message Bad request syntax ('nil')
[19/May/2025 12:25:49] "nil" 400 -
{"asctime": "2025-05-19 12:25:50,058", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 12:25:50] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-19 12:25:50,435", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 12:25:50] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-19 12:25:50,835", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[19/May/2025 12:25:50] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-19 12:26:00,932", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 12:26:00] "GET / HTTP/1.1" 404 4431
[19/May/2025 13:01:23] code 400, message Bad request version ('A¶8a\x96¾cö+,ÀúC\x8b/d²ùárzg)')
[19/May/2025 13:01:23] You're accessing the development server over HTTPS, but it only supports HTTP.
[19/May/2025 13:22:40] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[19/May/2025 13:22:40] "MGLNDD_51.20.181.176_8000" 400 -
{"asctime": "2025-05-19 13:34:14,651", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 13:34:14] "GET / HTTP/1.1" 404 4431
[19/May/2025 13:34:17,883] - Broken pipe from ('205.210.31.235', 60966)
{"asctime": "2025-05-19 15:39:30,030", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[19/May/2025 15:39:30] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[19/May/2025 16:21:59] code 400, message Bad request version ('À\x14À')
[19/May/2025 16:21:59] You're accessing the development server over HTTPS, but it only supports HTTP.
[19/May/2025 16:22:00] code 400, message Bad request version ('À\x14À')
[19/May/2025 16:22:00] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-19 16:22:00,357", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 16:22:00] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-19 16:22:00,666", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[19/May/2025 16:22:00] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-19 16:28:01,416", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 16:28:01] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-19 17:01:52,492", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 17:01:52] "GET / HTTP/1.1" 404 4431
[19/May/2025 17:01:56] code 505, message Invalid HTTP version (2.0)
[19/May/2025 17:01:56] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-19 17:02:51,262", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[19/May/2025 17:02:51] "GET /favicon.ico HTTP/1.1" 404 4482
[19/May/2025 17:02:56] code 400, message Bad request version (':')
[19/May/2025 17:02:56] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-19 19:54:48,636", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 19:54:48] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-19 20:45:52,250", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[19/May/2025 20:45:52] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-19 21:41:01,351", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[19/May/2025 21:41:01] "GET / HTTP/1.1" 404 4431
[19/May/2025 22:33:30] code 400, message Bad request version ('À\x14À')
[19/May/2025 22:33:30] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-20 02:30:08,744", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 02:30:08] "GET / HTTP/1.1" 404 4431
[20/May/2025 02:30:12,019] - Broken pipe from ('198.235.24.75', 61376)
[20/May/2025 04:28:28] code 400, message Bad HTTP/0.9 request type ('\\x01\\x00\\x00\\x00')
[20/May/2025 04:28:28] "\x01\x00\x00\x00 \xbf\x02\x00\x88\x13\x00\x00\x87\x00\x00\x00NIMABIJIAN\x04\x03\x00\x00{\x99Caig\x9c\x03\xc7eB\xc5\t\xc1\x18a\x11\x1a\x91\x1f\x02\tcof\x91\xc0\x80sJ5\xd2\x80\xe6\x9a~\xb9\xc7\x83^\x96\xeeN\x16\x96\x96&\xe6\x03\xea\xbc\x81\x02=\xac\x10\xfa?7\x03\xc3\xdf\xf7\xe4\x98`p\xe6\x8d\xc1\xa9\x8d\xc6\x06\xdb\xaf\x91\xe7\x82s\xf7\x14H\xd4\xe1W\x9a\x93C\x9e]\xa4\x01#\x03#\x03]\x03c]CC\x05C\x03+S\x03b\xf4\x00\x00/\x9e\x16E" 400 -
[20/May/2025 07:48:59] code 400, message Bad request version ('À#À¬À®À+À')
[20/May/2025 07:48:59] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-20 07:49:03,270", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 07:49:03] "GET / HTTP/1.1" 404 4431
[20/May/2025 08:19:11] code 400, message Bad request version ('À\x14À')
[20/May/2025 08:19:11] You're accessing the development server over HTTPS, but it only supports HTTP.
[20/May/2025 08:25:42] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x91Åj§\x9fEñ»ß£ß\x8e\x06Ï÷XógåÑ±R¤óÈõ¡Sß\x01¬\x18\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[20/May/2025 08:25:42] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-20 11:14:31,372", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 11:14:31] "GET / HTTP/1.1" 404 4426
[20/May/2025 11:14:32,053] - Broken pipe from ('165.154.41.201', 45822)
[20/May/2025 11:14:32] code 400, message Bad request version ('À\x13À')
[20/May/2025 11:14:32] You're accessing the development server over HTTPS, but it only supports HTTP.
[20/May/2025 11:14:32] code 400, message Bad HTTP/0.9 request type ('t3')
[20/May/2025 11:14:32] "t3 12.1.2" 400 -
{"asctime": "2025-05-20 11:15:02,921", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 11:15:02] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-20 11:15:03,255", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/May/2025 11:15:03] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-20 11:15:03,549", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /sitemap.xml", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/sitemap.xml'>"}
[20/May/2025 11:15:03] "GET /sitemap.xml HTTP/1.1" 404 4482
{"asctime": "2025-05-20 11:15:03,602", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /robots.txt", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/robots.txt'>"}
[20/May/2025 11:15:03] "GET /robots.txt HTTP/1.1" 404 4479
[20/May/2025 11:48:49] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03ª:¹óÄ\x10Û¼UÆÜê¬ÿ\x0fwü¾\x1bë\x02\x1b_tx{dpÐX_§\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[20/May/2025 11:48:49] You're accessing the development server over HTTPS, but it only supports HTTP.
[20/May/2025 11:48:49] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x037Öª')
[20/May/2025 11:48:49] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-20 11:48:49,822", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 11:48:49] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-20 11:48:50,140", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[20/May/2025 11:48:50] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-20 13:39:49,561", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 13:39:49] "GET / HTTP/1.1" 404 4431
[20/May/2025 13:39:55,304] - Broken pipe from ('147.185.132.79', 63796)
{"asctime": "2025-05-20 14:36:54,990", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[20/May/2025 14:36:54] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[20/May/2025 15:41:54] code 400, message Bad request syntax ('\x01\x01æ')
[20/May/2025 15:41:54] "æ" 400 -
{"asctime": "2025-05-20 16:53:01,449", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[20/May/2025 16:53:01] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-20 16:59:52,790", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 16:59:52] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-20 18:24:33,989", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 18:24:33] "GET / HTTP/1.1" 404 4426
{"asctime": "2025-05-20 18:24:34,109", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[20/May/2025 18:24:34] "GET /favicon.ico HTTP/1.1" 404 4477
{"asctime": "2025-05-20 19:21:04,818", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[20/May/2025 19:21:04] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-20 19:43:08,763", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[20/May/2025 19:43:08] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-20 21:55:46,762", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[20/May/2025 21:55:46] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[21/May/2025 01:41:08] code 400, message Bad request syntax ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03Ü\x92µ')
[21/May/2025 01:41:08] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-21 02:02:35,320", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 02:02:35] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-21 02:24:12,236", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 02:24:12] "GET / HTTP/1.1" 404 4431
[21/May/2025 02:27:32] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03\x98\x9fU%>Ä¹\x1atÀ}Ë\x10\\\x14\x02\xadv\x96¥U¢6i\x84[L\x98ó\x95\x82l\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[21/May/2025 02:27:32] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/May/2025 02:28:34] code 400, message Bad request syntax ('SSH-2.0-Go')
[21/May/2025 02:28:34] "SSH-2.0-Go" 400 -
[21/May/2025 02:28:49] code 400, message Bad request version ('À\x14À')
[21/May/2025 02:28:49] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-21 02:57:44,951", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[21/May/2025 02:57:44] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[21/May/2025 03:13:17] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03c=ÿæ\x84\x07\x05vp¯2ô-æ±\x82¨.X²$½\x00Üñ\x97Ó´`\x10G,\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[21/May/2025 03:13:17] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/May/2025 03:13:18] code 400, message Bad request version ('À\x14À')
[21/May/2025 03:13:18] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-21 03:13:18,535", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 03:13:18] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-21 03:13:19,121", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[21/May/2025 03:13:19] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-21 03:17:23,955", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 03:17:23] "GET / HTTP/1.1" 404 4431
[21/May/2025 03:17:26] code 505, message Invalid HTTP version (2.0)
[21/May/2025 03:17:26] "PRI * HTTP/2.0" 505 -
{"asctime": "2025-05-21 03:17:50,189", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[21/May/2025 03:17:50] "GET /favicon.ico HTTP/1.1" 404 4482
[21/May/2025 03:17:51] code 400, message Bad request version ('À\x14À')
[21/May/2025 03:17:51] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/May/2025 05:06:09] code 400, message Bad request syntax ('MGLNDD_51.20.181.176_8000')
[21/May/2025 05:06:09] "MGLNDD_51.20.181.176_8000" 400 -
[21/May/2025 07:25:11] code 400, message Bad request version ('À\x14À')
[21/May/2025 07:25:11] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/May/2025 07:25:12] code 400, message Bad HTTP/0.9 request type ('\x16\x03\x01\x00{\x01\x00\x00w\x03\x03aº°\x86\x17DÎ÷\x9cÝ¨\x144\x94°2!TZ\x92\x90\x99Úéô\x9cöÁ^PFË\x00\x00\x1aÀ/À+À\x11À\x07À\x13À')
[21/May/2025 07:25:12] You're accessing the development server over HTTPS, but it only supports HTTP.
{"asctime": "2025-05-21 07:25:12,345", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 07:25:12] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-21 07:25:12,657", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[21/May/2025 07:25:12] "GET /login HTTP/1.1" 404 4464
{"asctime": "2025-05-21 08:00:05,438", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[21/May/2025 08:00:05] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
[21/May/2025 09:34:28] code 400, message Bad HTTP/0.9 request type ('\x00\x00\x00')
[21/May/2025 09:34:28] "    c                           " 400 -
{"asctime": "2025-05-21 10:48:33,052", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 10:48:33] "GET / HTTP/1.1" 404 4431
[21/May/2025 11:34:46] "OPTIONS /api/v1/users/login/ HTTP/1.1" 200 0
[21/May/2025 11:34:47] "POST /api/v1/users/login/ HTTP/1.1" 200 687
[21/May/2025 11:34:47] "OPTIONS /api/v1/users/profile/ HTTP/1.1" 200 0
[21/May/2025 11:34:48] "GET /api/v1/users/profile/ HTTP/1.1" 200 595
[21/May/2025 12:49:00] code 400, message Bad request syntax ('nil')
[21/May/2025 12:49:00] "nil" 400 -
{"asctime": "2025-05-21 12:49:00,797", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 12:49:00] "GET / HTTP/1.0" 404 4426
{"asctime": "2025-05-21 12:49:01,198", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 12:49:01] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-21 12:49:01,574", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[21/May/2025 12:49:01] "GET /favicon.ico HTTP/1.1" 404 4482
{"asctime": "2025-05-21 13:25:30,088", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[21/May/2025 13:25:30] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-21 13:38:59,914", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 13:38:59] "GET / HTTP/1.1" 404 4431
[21/May/2025 13:39:04,313] - Broken pipe from ('205.210.31.89', 64254)
{"asctime": "2025-05-21 13:54:19,812", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /www.google.com:443", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: CONNECT '/www.google.com:443'>"}
[21/May/2025 13:54:19] "CONNECT www.google.com:443 HTTP/1.1" 404 1862
{"asctime": "2025-05-21 14:46:01,639", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 14:46:01] "GET / HTTP/1.1" 404 4431
{"asctime": "2025-05-21 17:10:16,160", "module": "autoreload", "funcName": "trigger_reload", "name": "django.utils.autoreload", "levelname": "INFO", "message": "/var/www/html/electronic_medical_report/emr/base_settings.py changed, reloading.", "exc_text": null, "taskName": null}
[33m ................ [0m 
[33m ................ [0m 
[91m [1m Please make super admin during initial setup [0m 
[33m ................ [0m 
[33m ................ [0m 
Performing system checks...

May 17, 2025 - 18:20:54
Django version 5.1.3, using settings 'emr.dev_settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.

{"asctime": "2025-05-21 17:10:19,140", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
{"asctime": "2025-05-21 17:11:19,864", "module": "autoreload", "funcName": "trigger_reload", "name": "django.utils.autoreload", "levelname": "INFO", "message": "/var/www/html/electronic_medical_report/emr/urls.py changed, reloading.", "exc_text": null, "taskName": null}
[33m ................ [0m 
[33m ................ [0m 
[91m [1m Please make super admin during initial setup [0m 
[33m ................ [0m 
[33m ................ [0m 
Performing system checks...

May 21, 2025 - 17:10:21
Django version 5.1.3, using settings 'emr.dev_settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.

{"asctime": "2025-05-21 17:11:21,284", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
Exception in thread django-main-thread:
Traceback (most recent call last):
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/autoreload.py", line 64, in wrapper
    fn(*args, **kwargs)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/management/commands/runserver.py", line 134, in inner_run
    self.check(display_num_errors=True)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/management/base.py", line 486, in check
    all_issues = checks.run_checks(
                 ^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/urls.py", line 44, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/urls.py", line 63, in _load_all_namespaces
    url_patterns = getattr(resolver, "url_patterns", [])
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/resolvers.py", line 718, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
                       ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/resolvers.py", line 711, in urlconf_module
    return import_module(self.urlconf_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/importlib/__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/var/www/html/electronic_medical_report/emr/urls.py", line 80, in <module>
    path("api/v1", include("prescriptions.urls")),
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/conf.py", line 39, in include
    urlconf_module = import_module(urlconf_module)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/importlib/__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1310, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1324, in _find_and_load_unlocked
ModuleNotFoundError: No module named 'prescriptions'
{"asctime": "2025-05-21 17:59:05,444", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
{"asctime": "2025-05-21 17:59:56,023", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
{"asctime": "2025-05-21 18:00:55,594", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 18:00:55] "GET / HTTP/1.1" 404 4580
{"asctime": "2025-05-21 18:00:57,313", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[21/May/2025 18:00:57] "GET /favicon.ico HTTP/1.1" 404 4631
[21/May/2025 18:01:03] "GET /admin HTTP/1.1" 301 0
[21/May/2025 18:01:04] "GET /admin/ HTTP/1.1" 302 0
[21/May/2025 18:01:04] "GET /admin/login/?next=/admin/ HTTP/1.1" 200 4265
[21/May/2025 18:01:05] "GET /static/admin/css/base.css HTTP/1.1" 200 22092
[21/May/2025 18:01:05] "GET /static/admin/css/dark_mode.css HTTP/1.1" 200 2804
[21/May/2025 18:01:06] "GET /static/admin/css/nav_sidebar.css HTTP/1.1" 200 2810
[21/May/2025 18:01:06] "GET /static/admin/css/login.css HTTP/1.1" 200 951
[21/May/2025 18:01:06] "GET /static/admin/css/responsive.css HTTP/1.1" 200 17972
[21/May/2025 18:01:06] "GET /static/admin/js/theme.js HTTP/1.1" 200 1653
[21/May/2025 18:01:07] code 400, message Bad request syntax ('SSH-2.0-Go')
[21/May/2025 18:01:07] "SSH-2.0-Go" 400 -
[21/May/2025 18:01:07] "GET /static/admin/js/nav_sidebar.js HTTP/1.1" 200 3063
[21/May/2025 18:01:30] "POST /admin/login/?next=/admin/ HTTP/1.1" 302 0
[21/May/2025 18:01:31] "GET /admin/ HTTP/1.1" 200 16993
[21/May/2025 18:01:31] "GET /static/admin/css/dashboard.css HTTP/1.1" 200 441
[21/May/2025 18:01:32] "GET /static/admin/img/icon-viewlink.svg HTTP/1.1" 200 581
[21/May/2025 18:01:32] "GET /static/admin/img/icon-addlink.svg HTTP/1.1" 200 331
[21/May/2025 18:01:32] "GET /static/admin/img/icon-changelink.svg HTTP/1.1" 200 380
[21/May/2025 18:01:56] code 400, message Bad request version ('À\x14À')
[21/May/2025 18:01:56] You're accessing the development server over HTTPS, but it only supports HTTP.
[21/May/2025 18:02:02] "GET /admin/user/customuser/add/ HTTP/1.1" 200 31972
[21/May/2025 18:02:02] "GET /static/admin/css/forms.css HTTP/1.1" 200 8794
[21/May/2025 18:02:02] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:02:03] "GET /static/admin/css/unusable_password_field.css HTTP/1.1" 200 663
[21/May/2025 18:02:03] "GET /static/admin/js/jquery.init.js HTTP/1.1" 200 347
[21/May/2025 18:02:03] "GET /static/admin/js/core.js HTTP/1.1" 200 6208
[21/May/2025 18:02:03] "GET /static/admin/js/admin/RelatedObjectLookups.js HTTP/1.1" 200 9097
[21/May/2025 18:02:03] "GET /static/admin/js/urlify.js HTTP/1.1" 200 7887
[21/May/2025 18:02:03] "GET /static/admin/js/actions.js HTTP/1.1" 200 8076
[21/May/2025 18:02:04] "GET /static/admin/css/widgets.css HTTP/1.1" 200 11564
[21/May/2025 18:02:04] "GET /static/admin/js/prepopulate.js HTTP/1.1" 200 1531
[21/May/2025 18:02:04] "GET /static/admin/js/vendor/jquery/jquery.js HTTP/1.1" 200 285314
[21/May/2025 18:02:04] "GET /static/admin/js/prepopulate_init.js HTTP/1.1" 200 586
[21/May/2025 18:02:04] "GET /static/admin/js/change_form.js HTTP/1.1" 200 606
[21/May/2025 18:02:04] "GET /static/admin/js/vendor/xregexp/xregexp.js HTTP/1.1" 200 325171
[21/May/2025 18:02:05] "GET /static/admin/js/unusable_password_field.js HTTP/1.1" 200 1480
[21/May/2025 18:03:25] "POST /admin/user/customuser/add/ HTTP/1.1" 302 0
[21/May/2025 18:03:26] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44524
[21/May/2025 18:03:26] "GET /static/admin/js/admin/DateTimeShortcuts.js HTTP/1.1" 200 19319
[21/May/2025 18:03:26] "GET /static/admin/js/calendar.js HTTP/1.1" 200 9141
[21/May/2025 18:03:26] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:03:26] "GET /static/admin/img/icon-yes.svg HTTP/1.1" 200 436
[21/May/2025 18:03:27] "GET /static/admin/img/icon-clock.svg HTTP/1.1" 200 677
[21/May/2025 18:03:27] "GET /static/admin/img/icon-calendar.svg HTTP/1.1" 200 1086
[21/May/2025 18:03:31] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/password/ HTTP/1.1" 200 16954
[21/May/2025 18:04:10] "POST /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/password/ HTTP/1.1" 200 17127
[21/May/2025 18:04:41] "POST /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/password/ HTTP/1.1" 302 0
[21/May/2025 18:04:41] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44610
[21/May/2025 18:04:41] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:05:05] "POST /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 302 0
[21/May/2025 18:05:05] "GET /admin/user/customuser/ HTTP/1.1" 200 23852
[21/May/2025 18:05:06] "GET /static/admin/css/changelists.css HTTP/1.1" 200 6878
[21/May/2025 18:05:06] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:05:06] "GET /static/admin/img/search.svg HTTP/1.1" 200 458
[21/May/2025 18:05:06] "GET /static/admin/img/icon-no.svg HTTP/1.1" 200 560
[21/May/2025 18:05:06] "GET /static/admin/img/tooltag-add.svg HTTP/1.1" 200 331
[21/May/2025 18:05:06] "GET /static/admin/img/sorting-icons.svg HTTP/1.1" 200 1097
[21/May/2025 18:05:06] "GET /static/admin/js/filters.js HTTP/1.1" 200 978
[21/May/2025 18:05:13] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:05:13] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:05:49] "POST /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 302 0
[21/May/2025 18:05:50] "GET /admin/user/customuser/ HTTP/1.1" 200 23852
[21/May/2025 18:05:50] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:07:06] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:07:07] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:07:19] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
{"asctime": "2025-05-21 18:07:24,937", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/login'>"}
[21/May/2025 18:07:24] "GET /login HTTP/1.1" 404 4613
{"asctime": "2025-05-21 18:07:39,741", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/vi/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/vi/login'>"}
[21/May/2025 18:07:39] "GET /api/vi/login HTTP/1.1" 404 4634
{"asctime": "2025-05-21 18:08:00,576", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/vi/users", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/vi/users'>"}
[21/May/2025 18:08:00] "GET /api/vi/users HTTP/1.1" 404 4634
{"asctime": "2025-05-21 18:13:31,751", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/'>"}
[21/May/2025 18:13:31] "GET /api/ HTTP/1.1" 404 4610
{"asctime": "2025-05-21 18:13:47,838", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Authentication credentials were not provided.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 384, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/user/views.py\", line 384, in initial\n    return super().initial(request, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 88, in initial\n    self.check_permissions(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 333, in check_permissions\n    self.permission_denied(\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 174, in permission_denied\n    raise exceptions.NotAuthenticated()\nrest_framework.exceptions.NotAuthenticated: Authentication credentials were not provided.", "taskName": null}
{"asctime": "2025-05-21 18:13:47,839", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Unauthorized: /api/v1/users/", "exc_text": null, "taskName": null, "status_code": 401, "request": "<WSGIRequest: GET '/api/v1/users/'>"}
[21/May/2025 18:13:47] "GET /api/v1/users/ HTTP/1.1" 401 102
{"asctime": "2025-05-21 18:13:55,806", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/login/'>"}
[21/May/2025 18:13:55] "GET /api/v1/login/ HTTP/1.1" 404 6802
[21/May/2025 18:35:37] "GET /admin/ HTTP/1.1" 200 18633
[21/May/2025 18:36:03] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:36:03] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:36:07] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:36:07] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:36:31] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:36:31] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:36:51] "GET /admin/user/customuser/a5f46094-807c-4d0b-abe3-dff2542228af/change/ HTTP/1.1" 200 44524
[21/May/2025 18:36:51] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:36:58] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:37:11] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:37:11] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:37:14] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/history/ HTTP/1.1" 200 15206
[21/May/2025 18:37:20] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:37:54] "GET /admin/employee/certification/ HTTP/1.1" 200 15423
[21/May/2025 18:37:54] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:37:57] "GET /admin/api_log/apirequestlog/ HTTP/1.1" 200 17313
[21/May/2025 18:38:00] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:38:00] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:07] "GET /admin/user/userpermission/ HTTP/1.1" 200 16610
[21/May/2025 18:38:07] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:15] "GET /admin/user/devicetoken/ HTTP/1.1" 200 15558
[21/May/2025 18:38:18] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:38:19] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:27] "GET /admin/user/customuser/add/ HTTP/1.1" 200 31972
[21/May/2025 18:38:27] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:39] "GET /admin/employee/certification/ HTTP/1.1" 200 15423
[21/May/2025 18:38:39] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:48] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:38:48] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:38:59] "GET /admin/consultation/consultation/add/ HTTP/1.1" 200 21935
[21/May/2025 18:39:00] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:04] "GET /admin/hospital/hospital/add/ HTTP/1.1" 200 44828
[21/May/2025 18:39:04] "GET /static/ckeditor/ckeditor.css HTTP/1.1" 200 672
[21/May/2025 18:39:05] "GET /static/ckeditor/ckeditor-init.js HTTP/1.1" 200 1526
[21/May/2025 18:39:05] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:06] "GET /static/ckeditor/ckeditor/ckeditor.js HTTP/1.1" 200 759716
[21/May/2025 18:39:07] "GET /static/ckeditor/ckeditor/config.js?t=N5UC HTTP/1.1" 200 336
[21/May/2025 18:39:07] "GET /static/ckeditor/ckeditor/skins/moono-lisa/editor.css?t=N5UC HTTP/1.1" 200 48309
[21/May/2025 18:39:08] "GET /static/ckeditor/ckeditor/lang/en.js?t=N5UC HTTP/1.1" 200 18228
[21/May/2025 18:39:08] "GET /static/ckeditor/ckeditor/styles.js?t=N5UC HTTP/1.1" 200 5577
[21/May/2025 18:39:09] "GET /static/ckeditor/ckeditor/plugins/scayt/dialogs/dialog.css?t=N5UC HTTP/1.1" 200 419
[21/May/2025 18:39:09] "GET /static/ckeditor/ckeditor/plugins/scayt/skins/moono-lisa/scayt.css?t=N5UC HTTP/1.1" 200 381
[21/May/2025 18:39:09] "GET /static/ckeditor/ckeditor/plugins/tableselection/styles/tableselection.css?t=N5UC HTTP/1.1" 200 1145
[21/May/2025 18:39:10] "GET /static/ckeditor/ckeditor/contents.css?t=N5UC HTTP/1.1" 200 3092
[21/May/2025 18:39:10] "GET /static/ckeditor/ckeditor/plugins/dialog/styles/dialog.css?t=N5UC HTTP/1.1" 200 249
[21/May/2025 18:39:10] "GET /static/ckeditor/ckeditor/skins/moono-lisa/icons.png?t=4a1fb11f44 HTTP/1.1" 200 12237
[21/May/2025 18:39:10] "GET /static/ckeditor/ckeditor/plugins/copyformatting/styles/copyformatting.css?t=N5UC HTTP/1.1" 200 1511
[21/May/2025 18:39:18] "GET /admin/user/customuser/add/ HTTP/1.1" 200 31972
[21/May/2025 18:39:18] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:28] "POST /admin/user/customuser/add/ HTTP/1.1" 200 32135
[21/May/2025 18:39:28] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:31] "POST /admin/user/customuser/add/ HTTP/1.1" 200 32135
[21/May/2025 18:39:32] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:44] "POST /admin/user/customuser/add/ HTTP/1.1" 200 32159
[21/May/2025 18:39:44] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:39:52] "POST /admin/user/customuser/add/ HTTP/1.1" 302 0
[21/May/2025 18:39:53] "GET /admin/user/customuser/add/ HTTP/1.1" 200 32257
[21/May/2025 18:39:53] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:40:09] "GET /admin/user/customuser/ HTTP/1.1" 200 24183
[21/May/2025 18:40:09] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:40:20] "GET /admin/user/customuser/e84ca41f-a29c-4156-9540-aff00ed3465a/change/ HTTP/1.1" 200 44190
[21/May/2025 18:40:20] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:40:25] "GET /admin/user/customuser/e84ca41f-a29c-4156-9540-aff00ed3465a/delete/ HTTP/1.1" 200 15421
[21/May/2025 18:40:26] "GET /static/admin/js/cancel.js HTTP/1.1" 200 884
[21/May/2025 18:40:28] "POST /admin/user/customuser/e84ca41f-a29c-4156-9540-aff00ed3465a/delete/ HTTP/1.1" 302 0
[21/May/2025 18:40:29] "GET /admin/user/customuser/ HTTP/1.1" 200 23764
[21/May/2025 18:40:29] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:40:37] "GET /admin/user/customuser/db0a9534-d52a-4a49-b49d-a899db467cc3/change/ HTTP/1.1" 200 44474
[21/May/2025 18:40:37] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
{"asctime": "2025-05-21 18:48:45,631", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /ap/v1/hospitals/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/ap/v1/hospitals/'>"}
[21/May/2025 18:48:45] "POST /ap/v1/hospitals/ HTTP/1.1" 404 4647
{"asctime": "2025-05-21 18:49:10,289", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 18:49:10] "GET / HTTP/1.1" 404 4580
[21/May/2025 18:49:19] "GET /swagger HTTP/1.1" 301 0
[21/May/2025 18:49:20] "GET /swagger/ HTTP/1.1" 200 1627
[21/May/2025 18:49:20] "GET /static/drf-yasg/style.css HTTP/1.1" 200 1047
[21/May/2025 18:49:22] "GET /static/drf-yasg/insQ.min.js HTTP/1.1" 200 2093
[21/May/2025 18:49:22] "GET /static/drf-yasg/immutable.min.js HTTP/1.1" 200 56904
[21/May/2025 18:49:22] "GET /static/drf-yasg/swagger-ui-init.js HTTP/1.1" 200 15480
[21/May/2025 18:49:22] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui.css HTTP/1.1" 200 145206
[21/May/2025 18:49:24] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-bundle.js HTTP/1.1" 200 1046583
[21/May/2025 18:49:24] "GET /static/drf-yasg/swagger-ui-dist/swagger-ui-standalone-preset.js HTTP/1.1" 200 322863
{"asctime": "2025-05-21 18:50:06,315", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/'>"}
[21/May/2025 18:50:06] "GET / HTTP/1.1" 404 4580
{"asctime": "2025-05-21 18:51:13,824", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/login'>"}
[21/May/2025 18:51:13] "GET /api/v1/login HTTP/1.1" 404 6799
{"asctime": "2025-05-21 18:51:18,318", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/login/'>"}
[21/May/2025 18:51:18] "GET /api/v1/login/ HTTP/1.1" 404 6802
{"asctime": "2025-05-21 18:51:23,527", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/login/'>"}
[21/May/2025 18:51:23] "GET /api/v1/login/ HTTP/1.1" 404 6802
{"asctime": "2025-05-21 18:51:36,866", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/users/login", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/users/login'>"}
[21/May/2025 18:51:36] "GET /api/users/login HTTP/1.1" 404 4643
{"asctime": "2025-05-21 18:52:10,051", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "Method \"GET\" not allowed.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 167, in http_method_not_allowed\n    raise exceptions.MethodNotAllowed(request.method)\nrest_framework.exceptions.MethodNotAllowed: Method \"GET\" not allowed.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 167, in http_method_not_allowed\n    raise exceptions.MethodNotAllowed(request.method)\nrest_framework.exceptions.MethodNotAllowed: Method \"GET\" not allowed.", "taskName": null}
{"asctime": "2025-05-21 18:52:10,051", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "Method \"GET\" not allowed.", "exc_text": null, "code": "method_not_allowed", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 506, in dispatch\n    response = handler(request, *args, **kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 167, in http_method_not_allowed\n    raise exceptions.MethodNotAllowed(request.method)\nrest_framework.exceptions.MethodNotAllowed: Method \"GET\" not allowed.", "taskName": null}
{"asctime": "2025-05-21 18:52:10,052", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Method Not Allowed: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 405, "request": "<WSGIRequest: GET '/api/v1/users/login/'>"}
[21/May/2025 18:52:10] "GET /api/v1/users/login/ HTTP/1.1" 405 85
[21/May/2025 18:55:31] "POST /api/v1/users/login/ HTTP/1.1" 200 689
[21/May/2025 18:56:42] "GET /api/v1/users/profile HTTP/1.1" 301 0
[21/May/2025 18:56:42] "GET /api/v1/users/profile/ HTTP/1.1" 200 601
[21/May/2025 18:57:28] "GET /admin/ HTTP/1.1" 200 19340
[21/May/2025 18:57:28] "GET /static/admin/img/icon-deletelink.svg HTTP/1.1" 200 392
[21/May/2025 18:57:36] "GET /admin/user/customuser/add/ HTTP/1.1" 200 31972
[21/May/2025 18:57:36] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:57:41] "GET /admin/user/customuser/ HTTP/1.1" 200 23598
[21/May/2025 18:57:41] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:58:12] "GET /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/change/ HTTP/1.1" 200 44441
[21/May/2025 18:58:12] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
[21/May/2025 18:58:18] "GET /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/password/ HTTP/1.1" 200 16949
[21/May/2025 18:58:34] "POST /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/password/ HTTP/1.1" 302 0
[21/May/2025 18:58:35] "GET /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/change/ HTTP/1.1" 200 44577
[21/May/2025 18:58:35] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
{"asctime": "2025-05-21 19:00:02,778", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-21 19:00:02,780", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[21/May/2025 19:00:02] "POST /api/v1/users/login/ HTTP/1.1" 404 73
{"asctime": "2025-05-21 19:00:55,383", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-21 19:00:55,384", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[21/May/2025 19:00:55] "POST /api/v1/users/login/ HTTP/1.1" 404 73
{"asctime": "2025-05-21 19:01:03,383", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-21 19:01:03,384", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[21/May/2025 19:01:03] "POST /api/v1/users/login/ HTTP/1.1" 404 73
[21/May/2025 19:01:08] "GET /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/password/ HTTP/1.1" 200 16949
[21/May/2025 19:01:27] "POST /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/password/ HTTP/1.1" 302 0
[21/May/2025 19:01:27] "GET /admin/user/customuser/22305555-a31c-4b7b-a883-d8d804765dd1/change/ HTTP/1.1" 200 44577
[21/May/2025 19:01:28] "GET /admin/jsi18n/ HTTP/1.1" 200 3342
{"asctime": "2025-05-21 19:01:38,303", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-21 19:01:38,304", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[21/May/2025 19:01:38] "POST /api/v1/users/login/ HTTP/1.1" 404 73
{"asctime": "2025-05-21 19:01:40,543", "module": "handle_exceptions", "funcName": "custom_exception_handler", "name": "emr.handle_exceptions", "levelname": "ERROR", "message": "", "exc_text": null, "ref": "Exception caught in common exception handler", "exception": "CustomUser matching query does not exist.", "traceback": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.\n", "exc_info": "Traceback (most recent call last):\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 497, in dispatch\n    self.initial(request, *args, **kwargs)\n  File \"/var/www/html/electronic_medical_report/base/base_views.py\", line 86, in initial\n    self.check_throttles(request)\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/views.py\", line 359, in check_throttles\n    if not throttle.allow_request(request, self):\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 119, in allow_request\n    self.key = self.get_cache_key(request, view)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/throttling.py\", line 194, in get_cache_key\n    if request.user and request.user.is_authenticated:\n       ^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 231, in user\n    self._authenticate()\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/rest_framework/request.py\", line 384, in _authenticate\n    user_auth_tuple = authenticator.authenticate(self)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/emr/authenticate.py\", line 39, in authenticate\n    user = self.user_model.objects.get(id=token.payload[\"user_id\"])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/manager.py\", line 87, in manager_method\n    return getattr(self.get_queryset(), name)(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/db/models/query.py\", line 649, in get\n    raise self.model.DoesNotExist(\nuser.models.CustomUser.DoesNotExist: CustomUser matching query does not exist.", "taskName": null}
{"asctime": "2025-05-21 19:01:40,544", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/users/login/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/users/login/'>"}
[21/May/2025 19:01:40] "POST /api/v1/users/login/ HTTP/1.1" 404 73
[21/May/2025 19:02:14] "POST /api/v1/users/login/ HTTP/1.1" 200 688
[21/May/2025 19:02:26] "GET /api/v1/users/profile HTTP/1.1" 301 0
[21/May/2025 19:02:26] "GET /api/v1/users/profile/ HTTP/1.1" 200 596
{"asctime": "2025-05-21 19:08:34,189", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/prescription/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/prescription/'>"}
[21/May/2025 19:08:34] "POST /api/prescription/ HTTP/1.1" 404 4650
{"asctime": "2025-05-21 19:08:40,982", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/prescriptions/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/prescriptions/'>"}
[21/May/2025 19:08:40] "POST /api/prescriptions/ HTTP/1.1" 404 4653
{"asctime": "2025-05-21 19:08:49,073", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/prescriptions/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/prescriptions/'>"}
[21/May/2025 19:08:49] "POST /api/v1/prescriptions/ HTTP/1.1" 404 6827
{"asctime": "2025-05-21 19:08:53,336", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/prescription", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/prescription'>"}
[21/May/2025 19:08:53] "POST /api/v1/prescription HTTP/1.1" 404 6821
{"asctime": "2025-05-21 19:09:08,203", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/prescription/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/prescription/'>"}
[21/May/2025 19:09:08] "POST /api/v1/prescription/ HTTP/1.1" 404 6824
[21/May/2025 19:09:22] "POST /api/v1/users/login/ HTTP/1.1" 200 689
{"asctime": "2025-05-21 19:09:38,721", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/prescriptions/", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: POST '/api/v1/prescriptions/'>"}
[21/May/2025 19:09:38] "POST /api/v1/prescriptions/ HTTP/1.1" 404 6827
{"asctime": "2025-05-21 19:10:27,810", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /api/v1/prescriptions", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/api/v1/prescriptions'>"}
[21/May/2025 19:10:27] "GET /api/v1/prescriptions HTTP/1.1" 404 6823
{"asctime": "2025-05-21 19:10:28,229", "module": "log", "funcName": "log_response", "name": "django.request", "levelname": "WARNING", "message": "Not Found: /favicon.ico", "exc_text": null, "taskName": null, "status_code": 404, "request": "<WSGIRequest: GET '/favicon.ico'>"}
[21/May/2025 19:10:28] "GET /favicon.ico HTTP/1.1" 404 4631
{"asctime": "2025-05-21 19:11:59,109", "module": "autoreload", "funcName": "trigger_reload", "name": "django.utils.autoreload", "levelname": "INFO", "message": "/var/www/html/electronic_medical_report/emr/urls.py changed, reloading.", "exc_text": null, "taskName": null}
[33m ................ [0m 
[33m ................ [0m 
[91m [1m Please make super admin during initial setup [0m 
[33m ................ [0m 
[33m ................ [0m 
Performing system checks...

May 21, 2025 - 17:59:57
Django version 5.1.3, using settings 'emr.dev_settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.

{"asctime": "2025-05-21 19:12:00,617", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
{"asctime": "2025-05-21 19:45:24,441", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
{"asctime": "2025-05-21 19:55:58,929", "module": "autoreload", "funcName": "trigger_reload", "name": "django.utils.autoreload", "levelname": "INFO", "message": "/var/www/html/electronic_medical_report/prescription/serializers.py changed, reloading.", "exc_text": null, "taskName": null}
[33m ................ [0m 
[33m ................ [0m 
[91m [1m Please make super admin during initial setup [0m 
[33m ................ [0m 
[33m ................ [0m 
Performing system checks...

May 21, 2025 - 19:45:25
Django version 5.1.3, using settings 'emr.dev_settings'
Starting development server at http://0.0.0.0:8000/
Quit the server with CONTROL-C.

{"asctime": "2025-05-21 19:56:00,405", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
Exception in thread django-main-thread:
Traceback (most recent call last):
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/autoreload.py", line 64, in wrapper
    fn(*args, **kwargs)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/management/commands/runserver.py", line 134, in inner_run
    self.check(display_num_errors=True)
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/management/base.py", line 486, in check
    all_issues = checks.run_checks(
                 ^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/urls.py", line 44, in check_url_namespaces_unique
    all_namespaces = _load_all_namespaces(resolver)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/core/checks/urls.py", line 63, in _load_all_namespaces
    url_patterns = getattr(resolver, "url_patterns", [])
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/resolvers.py", line 718, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
                       ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/utils/functional.py", line 47, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
                                         ^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/resolvers.py", line 711, in urlconf_module
    return import_module(self.urlconf_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/importlib/__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/var/www/html/electronic_medical_report/emr/urls.py", line 80, in <module>
    path("api/v1/prescriptions/", include("prescription.urls")),
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/var/www/html/electronic_medical_report/env/lib/python3.12/site-packages/django/urls/conf.py", line 39, in include
    urlconf_module = import_module(urlconf_module)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/importlib/__init__.py", line 90, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "<frozen importlib._bootstrap>", line 1387, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1360, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1331, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 935, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 995, in exec_module
  File "<frozen importlib._bootstrap>", line 488, in _call_with_frames_removed
  File "/var/www/html/electronic_medical_report/prescription/urls.py", line 3, in <module>
    from .views import PrescriptionViewSet
  File "/var/www/html/electronic_medical_report/prescription/views.py", line 5, in <module>
    from .serializers import PrescriptionSerializer
  File "/var/www/html/electronic_medical_report/prescription/serializers.py", line 6, in <module>
    from .choices import RoleType
ModuleNotFoundError: No module named 'prescription.choices'
{"asctime": "2025-05-21 20:19:05,015", "module": "autoreload", "funcName": "run_with_reloader", "name": "django.utils.autoreload", "levelname": "INFO", "message": "Watching for file changes with StatReloader", "exc_text": null, "taskName": null}
System check identified some issues:

WARNINGS:
?: (ckeditor.W001) django-ckeditor bundles CKEditor 4.22.1 which isn't supported anmyore and which does have unfixed security issues, see for example https://ckeditor.com/cke4/release/CKEditor-4.24.0-LTS . You should consider strongly switching to a different editor (maybe CKEditor 5 respectively django-ckeditor-5 after checking whether the CKEditor 5 license terms work for you) or switch to the non-free CKEditor 4 LTS package. See https://ckeditor.com/ckeditor-4-support/ for more on this. (Note! This notice has been added by the django-ckeditor developers and we are not affiliated with CKSource and were not involved in the licensing change, so please refrain from complaining to us. Thanks.)
?: (staticfiles.W004) The directory '/var/www/html/electronic_medical_report/static' in the STATICFILES_DIRS setting does not exist.

System check identified 2 issues (0 silenced).
